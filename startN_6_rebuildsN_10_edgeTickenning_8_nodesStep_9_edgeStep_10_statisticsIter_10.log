
LOGGING TEST WITH:
startN_6_rebuildsN_10_edgeTickenning_8_nodesStep_9_edgeStep_10_statisticsIter_10.log
exploring min cut solver algoritm with a graph of 4 with variable num of edges


iteration : 0 Graph	Undirected	{0: [2, 1], 1: [0, 3], 2: [0], 3: [1]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 4 Edges= 3 	elapsed= 0.00033340499999212625 	 randGraphIndex:  0
Academic license - for non-commercial use only
@minCutLPIterative	minCutVal=  1  graph: Nodes= 4 Edges= 3 	elapsed= 0.07778054199997086 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 3 	elapsed AVG,DEV_STD= (0.0002454959000033341, 0.0001018036505995976) 	 randGraphIndex:  0 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 4 Edges= 3 	elapsed AVG,DEV_STD= (0.0009403885000153877, 0.00018494018750163754) 	 randGraphIndex:  0 	iterations:  8 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [2, 1, 3], 1: [0, 3, 2], 2: [0, 1, 3], 3: [1, 0, 2]}
iteration : 1 Graph	Undirected	{0: [2, 1, 3], 1: [0, 3, 2], 2: [0, 1, 3], 3: [1, 0, 2]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 4 Edges= 6 	elapsed= 0.0004625790000432062 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  3  graph: Nodes= 4 Edges= 6 	elapsed= 0.010169518999987304 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 6 	elapsed AVG,DEV_STD= (9.973040000090804e-05, 4.7637942298913544e-05) 	 randGraphIndex:  1 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 4 Edges= 6 	elapsed AVG,DEV_STD= (0.00043243210000127875, 1.237121086970416e-05) 	 randGraphIndex:  1 	iterations:  8 	delta between founded sol and Opt one:  0
max num of edges reached for  4  graph
exploring min cut solver algoritm with a graph of 13 with variable num of edges


iteration : 0 Graph	Undirected	{0: [3, 7, 2, 4], 1: [7], 2: [10, 11, 0], 3: [0], 4: [0, 9], 5: [8, 7], 6: [8], 7: [1, 5, 0], 8: [6, 5], 9: [4, 12], 10: [2], 11: [2], 12: [9]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 13 Edges= 12 	elapsed= 0.0005491050000046016 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 13 Edges= 12 	elapsed= 0.12404322599996931 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 12 	elapsed AVG,DEV_STD= (0.0004014559999973244, 0.00027153773278736526) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 13 Edges= 12 	elapsed AVG,DEV_STD= (0.011124563100003116, 3.889879197641003e-05) 	 randGraphIndex:  0 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10], 1: [7, 8], 2: [10, 11, 0, 3, 8], 3: [0, 4, 2], 4: [0, 9, 6, 10, 3, 5], 5: [8, 7, 4, 11], 6: [8, 9, 4], 7: [1, 5, 0], 8: [6, 5, 1, 2], 9: [4, 12, 6], 10: [2, 4, 0], 11: [2, 0, 5], 12: [9]}
iteration : 1 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10], 1: [7, 8], 2: [10, 11, 0, 3, 8], 3: [0, 4, 2], 4: [0, 9, 6, 10, 3, 5], 5: [8, 7, 4, 11], 6: [8, 9, 4], 7: [1, 5, 0], 8: [6, 5, 1, 2], 9: [4, 12, 6], 10: [2, 4, 0], 11: [2, 0, 5], 12: [9]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 13 Edges= 23 	elapsed= 0.0006100950000131888 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 13 Edges= 23 	elapsed= 0.18041631599999164 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 23 	elapsed AVG,DEV_STD= (0.0005849901000033242, 0.00031926381326500116) 	 randGraphIndex:  1 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 13 Edges= 23 	elapsed AVG,DEV_STD= (0.012863821499996675, 9.650716841562528e-05) 	 randGraphIndex:  1 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1], 1: [7, 8, 9, 0], 2: [10, 11, 0, 3, 8], 3: [0, 4, 2, 11, 8, 9], 4: [0, 9, 6, 10, 3, 5, 8], 5: [8, 7, 4, 11, 9], 6: [8, 9, 4, 12], 7: [1, 5, 0, 12], 8: [6, 5, 1, 2, 3, 4], 9: [4, 12, 6, 1, 3, 5], 10: [2, 4, 0, 12], 11: [2, 0, 5, 3, 12], 12: [9, 6, 11, 10, 7]}
iteration : 2 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10, 1], 1: [7, 8, 9, 0], 2: [10, 11, 0, 3, 8], 3: [0, 4, 2, 11, 8, 9], 4: [0, 9, 6, 10, 3, 5, 8], 5: [8, 7, 4, 11, 9], 6: [8, 9, 4, 12], 7: [1, 5, 0, 12], 8: [6, 5, 1, 2, 3, 4], 9: [4, 12, 6, 1, 3, 5], 10: [2, 4, 0, 12], 11: [2, 0, 5, 3, 12], 12: [9, 6, 11, 10, 7]}
@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 13 Edges= 34 	elapsed= 0.0007423569999787105 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  4  graph: Nodes= 13 Edges= 34 	elapsed= 0.2371857759999898 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 34 	elapsed AVG,DEV_STD= (0.0011564657000064926, 0.0011402271229600904) 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 13 Edges= 34 	elapsed AVG,DEV_STD= (0.014379646000014646, 5.040520631306781e-05) 	 randGraphIndex:  2 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1], 1: [7, 8, 9, 0, 4, 12, 6], 2: [10, 11, 0, 3, 8, 5, 7, 9], 3: [0, 4, 2, 11, 8, 9, 7], 4: [0, 9, 6, 10, 3, 5, 8, 1], 5: [8, 7, 4, 11, 9, 2], 6: [8, 9, 4, 12, 1], 7: [1, 5, 0, 12, 11, 2, 3, 8], 8: [6, 5, 1, 2, 3, 4, 9, 7], 9: [4, 12, 6, 1, 3, 5, 2, 8], 10: [2, 4, 0, 12, 11], 11: [2, 0, 5, 3, 12, 7, 10], 12: [9, 6, 11, 10, 7, 1]}
iteration : 3 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10, 1], 1: [7, 8, 9, 0, 4, 12, 6], 2: [10, 11, 0, 3, 8, 5, 7, 9], 3: [0, 4, 2, 11, 8, 9, 7], 4: [0, 9, 6, 10, 3, 5, 8, 1], 5: [8, 7, 4, 11, 9, 2], 6: [8, 9, 4, 12, 1], 7: [1, 5, 0, 12, 11, 2, 3, 8], 8: [6, 5, 1, 2, 3, 4, 9, 7], 9: [4, 12, 6, 1, 3, 5, 2, 8], 10: [2, 4, 0, 12, 11], 11: [2, 0, 5, 3, 12, 7, 10], 12: [9, 6, 11, 10, 7, 1]}
@stoer_wagner_minCut	minCutval=  5  graph: Nodes= 13 Edges= 45 	elapsed= 0.0008162629999901583 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  5  graph: Nodes= 13 Edges= 45 	elapsed= 0.29406603199998926 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 45 	elapsed AVG,DEV_STD= (0.0070866762999798995, 0.008342078393474167) 	 randGraphIndex:  3 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  5  graph: Nodes= 13 Edges= 45 	elapsed AVG,DEV_STD= (0.0160422159999996, 0.0012261218009954) 	 randGraphIndex:  3 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1, 12], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2], 5: [8, 7, 4, 11, 9, 2, 6], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9], 8: [6, 5, 1, 2, 3, 4, 9, 7], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7], 10: [2, 4, 0, 12, 11, 6], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6], 12: [9, 6, 11, 10, 7, 1, 0]}
iteration : 4 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10, 1, 12], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2], 5: [8, 7, 4, 11, 9, 2, 6], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9], 8: [6, 5, 1, 2, 3, 4, 9, 7], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7], 10: [2, 4, 0, 12, 11, 6], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6], 12: [9, 6, 11, 10, 7, 1, 0]}
@stoer_wagner_minCut	minCutval=  6  graph: Nodes= 13 Edges= 56 	elapsed= 0.0009357579999687005 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  6  graph: Nodes= 13 Edges= 56 	elapsed= 0.35849172900003623 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 56 	elapsed AVG,DEV_STD= (0.009041108700000678, 0.006593962479347585) 	 randGraphIndex:  4 	iteration to reach Optimal:  47
@randMinCut-fixedIter	minCutVal=  6  graph: Nodes= 13 Edges= 56 	elapsed AVG,DEV_STD= (0.01683759159999454, 8.599413783855469e-05) 	 randGraphIndex:  4 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1, 12], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7], 10: [2, 4, 0, 12, 11, 6, 8], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8], 12: [9, 6, 11, 10, 7, 1, 0]}
iteration : 5 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10, 1, 12], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7], 10: [2, 4, 0, 12, 11, 6, 8], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8], 12: [9, 6, 11, 10, 7, 1, 0]}
@stoer_wagner_minCut	minCutval=  7  graph: Nodes= 13 Edges= 60 	elapsed= 0.001257533999989846 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  7  graph: Nodes= 13 Edges= 60 	elapsed= 0.4077870030000099 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 60 	elapsed AVG,DEV_STD= (0.005159213100006355, 0.004033049780608769) 	 randGraphIndex:  5 	iteration to reach Optimal:  45
@randMinCut-fixedIter	minCutVal=  7  graph: Nodes= 13 Edges= 60 	elapsed AVG,DEV_STD= (0.017381756799994718, 0.00013857807746350812) 	 randGraphIndex:  5 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1, 12, 9, 5, 8, 6], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2, 10], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6, 0], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3, 0], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11, 12, 0], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7, 0, 11], 10: [2, 4, 0, 12, 11, 6, 8, 1], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8, 9], 12: [9, 6, 11, 10, 7, 1, 0, 8]}
iteration : 6 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10, 1, 12, 9, 5, 8, 6], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2, 10], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6, 0], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3, 0], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11, 12, 0], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7, 0, 11], 10: [2, 4, 0, 12, 11, 6, 8, 1], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8, 9], 12: [9, 6, 11, 10, 7, 1, 0, 8]}
@stoer_wagner_minCut	minCutval=  8  graph: Nodes= 13 Edges= 67 	elapsed= 0.0009896230000094874 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  8  graph: Nodes= 13 Edges= 67 	elapsed= 0.4355798679999907 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 67 	elapsed AVG,DEV_STD= (0.007762623100012434, 0.0050599448404557035) 	 randGraphIndex:  6 	iteration to reach Optimal:  60
@randMinCut-fixedIter	minCutVal=  8  graph: Nodes= 13 Edges= 67 	elapsed AVG,DEV_STD= (0.018009809799991672, 0.0001018253737779417) 	 randGraphIndex:  6 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1, 12, 9, 5, 8, 6], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2, 10, 11], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6, 0, 10], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3, 0], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11, 12, 0], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7, 0, 11], 10: [2, 4, 0, 12, 11, 6, 8, 1, 5], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8, 9, 1], 12: [9, 6, 11, 10, 7, 1, 0, 8]}
iteration : 7 Graph	Undirected	{0: [3, 7, 2, 4, 11, 10, 1, 12, 9, 5, 8, 6], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2, 10, 11], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6, 0, 10], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3, 0], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11, 12, 0], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7, 0, 11], 10: [2, 4, 0, 12, 11, 6, 8, 1, 5], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8, 9, 1], 12: [9, 6, 11, 10, 7, 1, 0, 8]}
@stoer_wagner_minCut	minCutval=  8  graph: Nodes= 13 Edges= 69 	elapsed= 0.0010646630000223922 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  8  graph: Nodes= 13 Edges= 69 	elapsed= 0.4822148100000163 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 69 	elapsed AVG,DEV_STD= (0.03004529990000151, 0.0268498379393141) 	 randGraphIndex:  7 	iteration to reach Optimal:  14
@randMinCut-fixedIter	minCutVal=  8  graph: Nodes= 13 Edges= 69 	elapsed AVG,DEV_STD= (0.018312664099983066, 0.00018839035206921997) 	 randGraphIndex:  7 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 7, 2, 4, 11, 10, 1, 12, 9, 5, 8, 6], 1: [7, 8, 9, 0, 4, 12, 6, 3, 2, 10, 11], 2: [10, 11, 0, 3, 8, 5, 7, 9, 6, 4, 1], 3: [0, 4, 2, 11, 8, 9, 7, 1, 6, 12], 4: [0, 9, 6, 10, 3, 5, 8, 1, 11, 2, 7], 5: [8, 7, 4, 11, 9, 2, 6, 0, 10], 6: [8, 9, 4, 12, 1, 7, 5, 2, 10, 11, 3, 0], 7: [1, 5, 0, 12, 11, 2, 3, 8, 6, 9, 4], 8: [6, 5, 1, 2, 3, 4, 9, 7, 10, 11, 12, 0], 9: [4, 12, 6, 1, 3, 5, 2, 8, 7, 0, 11], 10: [2, 4, 0, 12, 11, 6, 8, 1, 5], 11: [2, 0, 5, 3, 12, 7, 10, 4, 6, 8, 9, 1], 12: [9, 6, 11, 10, 7, 1, 0, 8, 3]}
exploring min cut solver algoritm with a graph of 22 with variable num of edges


iteration : 0 Graph	Undirected	{0: [16, 4], 1: [14, 6, 15], 2: [17], 3: [5, 12], 4: [0, 19], 5: [9, 3], 6: [7, 1], 7: [12, 6], 8: [18, 19], 9: [5], 10: [17, 14], 11: [12], 12: [3, 11, 13, 19, 20, 7], 13: [12], 14: [10, 1], 15: [1, 21], 16: [0], 17: [2, 10], 18: [8], 19: [4, 8, 12], 20: [12], 21: [15]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 22 Edges= 21 	elapsed= 0.0009925780000230588 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 22 Edges= 21 	elapsed= 0.5628545010000039 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 21 	elapsed AVG,DEV_STD= (0.0007965737999995782, 0.0004288999123627119) 	 randGraphIndex:  0 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 22 Edges= 21 	elapsed AVG,DEV_STD= (0.06256472689999555, 0.0005012202717967886) 	 randGraphIndex:  0 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3], 1: [14, 6, 15, 4, 18], 2: [17, 13], 3: [5, 12, 4, 0], 4: [0, 19, 15, 3, 1, 8], 5: [9, 3], 6: [7, 1], 7: [12, 6, 9], 8: [18, 19, 16, 4], 9: [5, 7, 18], 10: [17, 14], 11: [12, 21], 12: [3, 11, 13, 19, 20, 7], 13: [12, 2], 14: [10, 1], 15: [1, 21, 4], 16: [0, 8], 17: [2, 10], 18: [8, 9, 1], 19: [4, 8, 12], 20: [12], 21: [15, 11]}
iteration : 1 Graph	Undirected	{0: [16, 4, 3], 1: [14, 6, 15, 4, 18], 2: [17, 13], 3: [5, 12, 4, 0], 4: [0, 19, 15, 3, 1, 8], 5: [9, 3], 6: [7, 1], 7: [12, 6, 9], 8: [18, 19, 16, 4], 9: [5, 7, 18], 10: [17, 14], 11: [12, 21], 12: [3, 11, 13, 19, 20, 7], 13: [12, 2], 14: [10, 1], 15: [1, 21, 4], 16: [0, 8], 17: [2, 10], 18: [8, 9, 1], 19: [4, 8, 12], 20: [12], 21: [15, 11]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 22 Edges= 32 	elapsed= 0.0013006300000029114 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 22 Edges= 32 	elapsed= 0.7280106640000099 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 32 	elapsed AVG,DEV_STD= (0.0038349178999908416, 0.004125867982925071) 	 randGraphIndex:  1 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 22 Edges= 32 	elapsed AVG,DEV_STD= (0.06908633510000754, 0.0004933121529483557) 	 randGraphIndex:  1 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20], 1: [14, 6, 15, 4, 18], 2: [17, 13, 3, 19], 3: [5, 12, 4, 0, 2], 4: [0, 19, 15, 3, 1, 8], 5: [9, 3], 6: [7, 1], 7: [12, 6, 9, 0], 8: [18, 19, 16, 4, 17], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13], 11: [12, 21, 15], 12: [3, 11, 13, 19, 20, 7], 13: [12, 2, 10], 14: [10, 1, 21], 15: [1, 21, 4, 11], 16: [0, 8], 17: [2, 10, 8], 18: [8, 9, 1], 19: [4, 8, 12, 2, 9], 20: [12, 0], 21: [15, 11, 10, 9, 14]}
iteration : 2 Graph	Undirected	{0: [16, 4, 3, 7, 20], 1: [14, 6, 15, 4, 18], 2: [17, 13, 3, 19], 3: [5, 12, 4, 0, 2], 4: [0, 19, 15, 3, 1, 8], 5: [9, 3], 6: [7, 1], 7: [12, 6, 9, 0], 8: [18, 19, 16, 4, 17], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13], 11: [12, 21, 15], 12: [3, 11, 13, 19, 20, 7], 13: [12, 2, 10], 14: [10, 1, 21], 15: [1, 21, 4, 11], 16: [0, 8], 17: [2, 10, 8], 18: [8, 9, 1], 19: [4, 8, 12, 2, 9], 20: [12, 0], 21: [15, 11, 10, 9, 14]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 22 Edges= 43 	elapsed= 0.0015303549999998722 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  2  graph: Nodes= 22 Edges= 43 	elapsed= 0.9131373719999942 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 43 	elapsed AVG,DEV_STD= (0.0013748853999970834, 0.0012385925803122273) 	 randGraphIndex:  2 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 22 Edges= 43 	elapsed AVG,DEV_STD= (0.07648633250000217, 0.0007407643708356182) 	 randGraphIndex:  2 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20, 19], 1: [14, 6, 15, 4, 18, 7, 16, 19], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2], 4: [0, 19, 15, 3, 1, 8, 17], 5: [9, 3, 15], 6: [7, 1, 2], 7: [12, 6, 9, 0, 1], 8: [18, 19, 16, 4, 17, 2], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13, 20], 11: [12, 21, 15], 12: [3, 11, 13, 19, 20, 7], 13: [12, 2, 10], 14: [10, 1, 21], 15: [1, 21, 4, 11, 5], 16: [0, 8, 2, 1], 17: [2, 10, 8, 4], 18: [8, 9, 1, 21], 19: [4, 8, 12, 2, 9, 0, 1], 20: [12, 0, 10], 21: [15, 11, 10, 9, 14, 18]}
iteration : 3 Graph	Undirected	{0: [16, 4, 3, 7, 20, 19], 1: [14, 6, 15, 4, 18, 7, 16, 19], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2], 4: [0, 19, 15, 3, 1, 8, 17], 5: [9, 3, 15], 6: [7, 1, 2], 7: [12, 6, 9, 0, 1], 8: [18, 19, 16, 4, 17, 2], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13, 20], 11: [12, 21, 15], 12: [3, 11, 13, 19, 20, 7], 13: [12, 2, 10], 14: [10, 1, 21], 15: [1, 21, 4, 11, 5], 16: [0, 8, 2, 1], 17: [2, 10, 8, 4], 18: [8, 9, 1, 21], 19: [4, 8, 12, 2, 9, 0, 1], 20: [12, 0, 10], 21: [15, 11, 10, 9, 14, 18]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 22 Edges= 54 	elapsed= 0.0017310520000251017 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  3  graph: Nodes= 22 Edges= 54 	elapsed= 1.106086581999989 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 54 	elapsed AVG,DEV_STD= (0.0022871730000019854, 0.002151261150216497) 	 randGraphIndex:  3 	iteration to reach Optimal:  16
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 22 Edges= 54 	elapsed AVG,DEV_STD= (0.08210275750000733, 0.0008997155781213198) 	 randGraphIndex:  3 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20, 19], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2, 20, 8], 4: [0, 19, 15, 3, 1, 8, 17, 16], 5: [9, 3, 15], 6: [7, 1, 2], 7: [12, 6, 9, 0, 1, 19], 8: [18, 19, 16, 4, 17, 2, 3], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13, 20], 11: [12, 21, 15, 1, 17], 12: [3, 11, 13, 19, 20, 7, 16], 13: [12, 2, 10, 20], 14: [10, 1, 21, 17], 15: [1, 21, 4, 11, 5, 20], 16: [0, 8, 2, 1, 12, 4], 17: [2, 10, 8, 4, 14, 11, 20], 18: [8, 9, 1, 21], 19: [4, 8, 12, 2, 9, 0, 1, 7], 20: [12, 0, 10, 3, 15, 17, 13], 21: [15, 11, 10, 9, 14, 18]}
iteration : 4 Graph	Undirected	{0: [16, 4, 3, 7, 20, 19], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2, 20, 8], 4: [0, 19, 15, 3, 1, 8, 17, 16], 5: [9, 3, 15], 6: [7, 1, 2], 7: [12, 6, 9, 0, 1, 19], 8: [18, 19, 16, 4, 17, 2, 3], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13, 20], 11: [12, 21, 15, 1, 17], 12: [3, 11, 13, 19, 20, 7, 16], 13: [12, 2, 10, 20], 14: [10, 1, 21, 17], 15: [1, 21, 4, 11, 5, 20], 16: [0, 8, 2, 1, 12, 4], 17: [2, 10, 8, 4, 14, 11, 20], 18: [8, 9, 1, 21], 19: [4, 8, 12, 2, 9, 0, 1, 7], 20: [12, 0, 10, 3, 15, 17, 13], 21: [15, 11, 10, 9, 14, 18]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 22 Edges= 65 	elapsed= 0.0019115939999778675 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  3  graph: Nodes= 22 Edges= 65 	elapsed= 1.311685013999977 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 65 	elapsed AVG,DEV_STD= (0.004565155699987144, 0.004951397370456319) 	 randGraphIndex:  4 	iteration to reach Optimal:  39
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 22 Edges= 65 	elapsed AVG,DEV_STD= (0.08634913039999788, 0.0003338614179566102) 	 randGraphIndex:  4 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20, 19, 10], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14], 5: [9, 3, 15], 6: [7, 1, 2, 10], 7: [12, 6, 9, 0, 1, 19], 8: [18, 19, 16, 4, 17, 2, 3], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13, 20, 3, 6, 0], 11: [12, 21, 15, 1, 17, 3], 12: [3, 11, 13, 19, 20, 7, 16], 13: [12, 2, 10, 20, 21], 14: [10, 1, 21, 17, 16, 4], 15: [1, 21, 4, 11, 5, 20, 19], 16: [0, 8, 2, 1, 12, 4, 20, 14], 17: [2, 10, 8, 4, 14, 11, 20], 18: [8, 9, 1, 21, 3, 20], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13]}
iteration : 5 Graph	Undirected	{0: [16, 4, 3, 7, 20, 19, 10], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14], 5: [9, 3, 15], 6: [7, 1, 2, 10], 7: [12, 6, 9, 0, 1, 19], 8: [18, 19, 16, 4, 17, 2, 3], 9: [5, 7, 18, 19, 21], 10: [17, 14, 21, 13, 20, 3, 6, 0], 11: [12, 21, 15, 1, 17, 3], 12: [3, 11, 13, 19, 20, 7, 16], 13: [12, 2, 10, 20, 21], 14: [10, 1, 21, 17, 16, 4], 15: [1, 21, 4, 11, 5, 20, 19], 16: [0, 8, 2, 1, 12, 4, 20, 14], 17: [2, 10, 8, 4, 14, 11, 20], 18: [8, 9, 1, 21, 3, 20], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 22 Edges= 76 	elapsed= 0.002127468999958637 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  3  graph: Nodes= 22 Edges= 76 	elapsed= 1.486109578999958 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 76 	elapsed AVG,DEV_STD= (0.013378936199990222, 0.010806569477733672) 	 randGraphIndex:  5 	iteration to reach Optimal:  69
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 22 Edges= 76 	elapsed AVG,DEV_STD= (0.09090566250000051, 0.0005659472385973278) 	 randGraphIndex:  5 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20, 19, 10, 11, 9, 14], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11, 12, 5], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18, 6, 21], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14], 5: [9, 3, 15, 1], 6: [7, 1, 2, 10, 3, 21], 7: [12, 6, 9, 0, 1, 19], 8: [18, 19, 16, 4, 17, 2, 3, 14], 9: [5, 7, 18, 19, 21, 0], 10: [17, 14, 21, 13, 20, 3, 6, 0], 11: [12, 21, 15, 1, 17, 3, 0, 13], 12: [3, 11, 13, 19, 20, 7, 16, 1], 13: [12, 2, 10, 20, 21, 14, 11], 14: [10, 1, 21, 17, 16, 4, 8, 13, 0], 15: [1, 21, 4, 11, 5, 20, 19], 16: [0, 8, 2, 1, 12, 4, 20, 14], 17: [2, 10, 8, 4, 14, 11, 20], 18: [8, 9, 1, 21, 3, 20], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13, 6, 3]}
iteration : 6 Graph	Undirected	{0: [16, 4, 3, 7, 20, 19, 10, 11, 9, 14], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11, 12, 5], 2: [17, 13, 3, 19, 8, 16, 6], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18, 6, 21], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14], 5: [9, 3, 15, 1], 6: [7, 1, 2, 10, 3, 21], 7: [12, 6, 9, 0, 1, 19], 8: [18, 19, 16, 4, 17, 2, 3, 14], 9: [5, 7, 18, 19, 21, 0], 10: [17, 14, 21, 13, 20, 3, 6, 0], 11: [12, 21, 15, 1, 17, 3, 0, 13], 12: [3, 11, 13, 19, 20, 7, 16, 1], 13: [12, 2, 10, 20, 21, 14, 11], 14: [10, 1, 21, 17, 16, 4, 8, 13, 0], 15: [1, 21, 4, 11, 5, 20, 19], 16: [0, 8, 2, 1, 12, 4, 20, 14], 17: [2, 10, 8, 4, 14, 11, 20], 18: [8, 9, 1, 21, 3, 20], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13, 6, 3]}
@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 22 Edges= 87 	elapsed= 0.0022592099999769744 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  4  graph: Nodes= 22 Edges= 87 	elapsed= 1.6058900650000396 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 87 	elapsed AVG,DEV_STD= (0.01759518020000428, 0.016581562737313097) 	 randGraphIndex:  6 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 22 Edges= 87 	elapsed AVG,DEV_STD= (0.09526642600000627, 0.0005966695612549778) 	 randGraphIndex:  6 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20, 19, 10, 11, 9, 14, 5], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11, 12, 5], 2: [17, 13, 3, 19, 8, 16, 6, 9, 21], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18, 6, 21, 13], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14, 12], 5: [9, 3, 15, 1, 0, 19], 6: [7, 1, 2, 10, 3, 21], 7: [12, 6, 9, 0, 1, 19, 14], 8: [18, 19, 16, 4, 17, 2, 3, 14, 9], 9: [5, 7, 18, 19, 21, 0, 11, 2, 8], 10: [17, 14, 21, 13, 20, 3, 6, 0], 11: [12, 21, 15, 1, 17, 3, 0, 13, 9], 12: [3, 11, 13, 19, 20, 7, 16, 1, 4], 13: [12, 2, 10, 20, 21, 14, 11, 3], 14: [10, 1, 21, 17, 16, 4, 8, 13, 0, 7, 15], 15: [1, 21, 4, 11, 5, 20, 19, 17, 14], 16: [0, 8, 2, 1, 12, 4, 20, 14], 17: [2, 10, 8, 4, 14, 11, 20, 15], 18: [8, 9, 1, 21, 3, 20], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15, 5], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13, 6, 3, 2]}
iteration : 7 Graph	Undirected	{0: [16, 4, 3, 7, 20, 19, 10, 11, 9, 14, 5], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11, 12, 5], 2: [17, 13, 3, 19, 8, 16, 6, 9, 21], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18, 6, 21, 13], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14, 12], 5: [9, 3, 15, 1, 0, 19], 6: [7, 1, 2, 10, 3, 21], 7: [12, 6, 9, 0, 1, 19, 14], 8: [18, 19, 16, 4, 17, 2, 3, 14, 9], 9: [5, 7, 18, 19, 21, 0, 11, 2, 8], 10: [17, 14, 21, 13, 20, 3, 6, 0], 11: [12, 21, 15, 1, 17, 3, 0, 13, 9], 12: [3, 11, 13, 19, 20, 7, 16, 1, 4], 13: [12, 2, 10, 20, 21, 14, 11, 3], 14: [10, 1, 21, 17, 16, 4, 8, 13, 0, 7, 15], 15: [1, 21, 4, 11, 5, 20, 19, 17, 14], 16: [0, 8, 2, 1, 12, 4, 20, 14], 17: [2, 10, 8, 4, 14, 11, 20, 15], 18: [8, 9, 1, 21, 3, 20], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15, 5], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13, 6, 3, 2]}
@stoer_wagner_minCut	minCutval=  6  graph: Nodes= 22 Edges= 98 	elapsed= 0.0025996380000492536 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  6  graph: Nodes= 22 Edges= 98 	elapsed= 1.795779906000007 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 98 	elapsed AVG,DEV_STD= (0.010289124599995602, 0.0076266294501915926) 	 randGraphIndex:  7 	iteration to reach Optimal:  32
@randMinCut-fixedIter	minCutVal=  6  graph: Nodes= 22 Edges= 98 	elapsed AVG,DEV_STD= (0.09978317660001039, 0.0009181759114537217) 	 randGraphIndex:  7 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [16, 4, 3, 7, 20, 19, 10, 11, 9, 14, 5], 1: [14, 6, 15, 4, 18, 7, 16, 19, 11, 12, 5, 21, 3], 2: [17, 13, 3, 19, 8, 16, 6, 9, 21], 3: [5, 12, 4, 0, 2, 20, 8, 11, 10, 18, 6, 21, 13, 1], 4: [0, 19, 15, 3, 1, 8, 17, 16, 14, 12, 21], 5: [9, 3, 15, 1, 0, 19, 16, 17], 6: [7, 1, 2, 10, 3, 21, 18, 17], 7: [12, 6, 9, 0, 1, 19, 14, 21], 8: [18, 19, 16, 4, 17, 2, 3, 14, 9], 9: [5, 7, 18, 19, 21, 0, 11, 2, 8], 10: [17, 14, 21, 13, 20, 3, 6, 0, 12], 11: [12, 21, 15, 1, 17, 3, 0, 13, 9], 12: [3, 11, 13, 19, 20, 7, 16, 1, 4, 18, 10], 13: [12, 2, 10, 20, 21, 14, 11, 3], 14: [10, 1, 21, 17, 16, 4, 8, 13, 0, 7, 15], 15: [1, 21, 4, 11, 5, 20, 19, 17, 14], 16: [0, 8, 2, 1, 12, 4, 20, 14, 5], 17: [2, 10, 8, 4, 14, 11, 20, 15, 21, 6, 5], 18: [8, 9, 1, 21, 3, 20, 6, 12], 19: [4, 8, 12, 2, 9, 0, 1, 7, 15, 5], 20: [12, 0, 10, 3, 15, 17, 13, 16, 18], 21: [15, 11, 10, 9, 14, 18, 13, 6, 3, 2, 7, 17, 4, 1]}
exploring min cut solver algoritm with a graph of 31 with variable num of edges


iteration : 0 Graph	Undirected	{0: [3, 22, 1], 1: [0, 24, 10], 2: [8, 22], 3: [19, 0], 4: [19], 5: [20], 6: [17, 24], 7: [11], 8: [26, 11, 2], 9: [26], 10: [1, 30], 11: [7, 15, 27, 8], 12: [21, 25], 13: [14], 14: [13, 18, 16], 15: [20, 11], 16: [14, 28, 17], 17: [23, 16, 29, 6], 18: [14], 19: [4, 3], 20: [5, 15], 21: [12], 22: [2, 0], 23: [17], 24: [6, 1], 25: [12, 26], 26: [9, 25, 8], 27: [11], 28: [16], 29: [17], 30: [10]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 31 Edges= 30 	elapsed= 0.0017766500000107044 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 31 Edges= 30 	elapsed= 1.4777808370000116 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 30 	elapsed AVG,DEV_STD= (0.0016370289000008143, 0.0012363464520661364) 	 randGraphIndex:  0 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 31 Edges= 30 	elapsed AVG,DEV_STD= (0.20011177369999586, 0.006520872765981875) 	 randGraphIndex:  0 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1], 1: [0, 24, 10, 30, 5, 4], 2: [8, 22, 18], 3: [19, 0, 11], 4: [19, 1], 5: [20, 1], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26], 10: [1, 30, 26], 11: [7, 15, 27, 8, 3], 12: [21, 25, 23, 30], 13: [14, 8], 14: [13, 18, 16, 6], 15: [20, 11], 16: [14, 28, 17], 17: [23, 16, 29, 6], 18: [14, 2], 19: [4, 3], 20: [5, 15], 21: [12], 22: [2, 0], 23: [17, 12], 24: [6, 1], 25: [12, 26], 26: [9, 25, 8, 10], 27: [11], 28: [16], 29: [17], 30: [10, 1, 8, 12]}
iteration : 1 Graph	Undirected	{0: [3, 22, 1], 1: [0, 24, 10, 30, 5, 4], 2: [8, 22, 18], 3: [19, 0, 11], 4: [19, 1], 5: [20, 1], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26], 10: [1, 30, 26], 11: [7, 15, 27, 8, 3], 12: [21, 25, 23, 30], 13: [14, 8], 14: [13, 18, 16, 6], 15: [20, 11], 16: [14, 28, 17], 17: [23, 16, 29, 6], 18: [14, 2], 19: [4, 3], 20: [5, 15], 21: [12], 22: [2, 0], 23: [17, 12], 24: [6, 1], 25: [12, 26], 26: [9, 25, 8, 10], 27: [11], 28: [16], 29: [17], 30: [10, 1, 8, 12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 31 Edges= 41 	elapsed= 0.002134217999980592 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 31 Edges= 41 	elapsed= 1.9094162429999528 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 41 	elapsed AVG,DEV_STD= (0.0006021723000117163, 0.0002055092392593767) 	 randGraphIndex:  1 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 31 Edges= 41 	elapsed AVG,DEV_STD= (0.215888078699993, 0.0013858409296263145) 	 randGraphIndex:  1 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27], 1: [0, 24, 10, 30, 5, 4], 2: [8, 22, 18, 5], 3: [19, 0, 11, 30, 24], 4: [19, 1, 29, 11], 5: [20, 1, 2], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26, 13], 10: [1, 30, 26], 11: [7, 15, 27, 8, 3, 4], 12: [21, 25, 23, 30, 14], 13: [14, 8, 16, 9], 14: [13, 18, 16, 6, 12], 15: [20, 11], 16: [14, 28, 17, 13], 17: [23, 16, 29, 6, 27], 18: [14, 2], 19: [4, 3], 20: [5, 15], 21: [12], 22: [2, 0, 24], 23: [17, 12], 24: [6, 1, 22, 3], 25: [12, 26], 26: [9, 25, 8, 10], 27: [11, 0, 17], 28: [16], 29: [17, 4], 30: [10, 1, 8, 12, 3]}
iteration : 2 Graph	Undirected	{0: [3, 22, 1, 27], 1: [0, 24, 10, 30, 5, 4], 2: [8, 22, 18, 5], 3: [19, 0, 11, 30, 24], 4: [19, 1, 29, 11], 5: [20, 1, 2], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26, 13], 10: [1, 30, 26], 11: [7, 15, 27, 8, 3, 4], 12: [21, 25, 23, 30, 14], 13: [14, 8, 16, 9], 14: [13, 18, 16, 6, 12], 15: [20, 11], 16: [14, 28, 17, 13], 17: [23, 16, 29, 6, 27], 18: [14, 2], 19: [4, 3], 20: [5, 15], 21: [12], 22: [2, 0, 24], 23: [17, 12], 24: [6, 1, 22, 3], 25: [12, 26], 26: [9, 25, 8, 10], 27: [11, 0, 17], 28: [16], 29: [17, 4], 30: [10, 1, 8, 12, 3]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 31 Edges= 52 	elapsed= 0.0025647140000160107 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 31 Edges= 52 	elapsed= 2.2270827279999708 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 52 	elapsed AVG,DEV_STD= (0.0016870118999918304, 0.0009151815676709654) 	 randGraphIndex:  2 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 31 Edges= 52 	elapsed AVG,DEV_STD= (0.22959745119999297, 0.00093443038573314) 	 randGraphIndex:  2 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13], 2: [8, 22, 18, 5, 29], 3: [19, 0, 11, 30, 24, 15], 4: [19, 1, 29, 11], 5: [20, 1, 2], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26, 13], 10: [1, 30, 26], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1], 13: [14, 8, 16, 9, 1], 14: [13, 18, 16, 6, 12, 30], 15: [20, 11, 3], 16: [14, 28, 17, 13, 27], 17: [23, 16, 29, 6, 27, 26], 18: [14, 2], 19: [4, 3, 11], 20: [5, 15, 25], 21: [12], 22: [2, 0, 24, 28], 23: [17, 12, 1], 24: [6, 1, 22, 3], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17], 27: [11, 0, 17, 16], 28: [16, 22], 29: [17, 4, 2], 30: [10, 1, 8, 12, 3, 14]}
iteration : 3 Graph	Undirected	{0: [3, 22, 1, 27], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13], 2: [8, 22, 18, 5, 29], 3: [19, 0, 11, 30, 24, 15], 4: [19, 1, 29, 11], 5: [20, 1, 2], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26, 13], 10: [1, 30, 26], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1], 13: [14, 8, 16, 9, 1], 14: [13, 18, 16, 6, 12, 30], 15: [20, 11, 3], 16: [14, 28, 17, 13, 27], 17: [23, 16, 29, 6, 27, 26], 18: [14, 2], 19: [4, 3, 11], 20: [5, 15, 25], 21: [12], 22: [2, 0, 24, 28], 23: [17, 12, 1], 24: [6, 1, 22, 3], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17], 27: [11, 0, 17, 16], 28: [16, 22], 29: [17, 4, 2], 30: [10, 1, 8, 12, 3, 14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 31 Edges= 63 	elapsed= 0.003150263999998515 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 31 Edges= 63 	elapsed= 2.6637992230000123 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 63 	elapsed AVG,DEV_STD= (0.0018503843999951642, 0.0015253065036116352) 	 randGraphIndex:  3 	iteration to reach Optimal:  8
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 31 Edges= 63 	elapsed AVG,DEV_STD= (0.24418673899998566, 0.002732755724766491) 	 randGraphIndex:  3 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13], 2: [8, 22, 18, 5, 29, 23], 3: [19, 0, 11, 30, 24, 15, 9], 4: [19, 1, 29, 11, 12], 5: [20, 1, 2, 14, 23], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26, 13, 3, 29], 10: [1, 30, 26, 18], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1, 4], 13: [14, 8, 16, 9, 1], 14: [13, 18, 16, 6, 12, 30, 5], 15: [20, 11, 3], 16: [14, 28, 17, 13, 27], 17: [23, 16, 29, 6, 27, 26, 24], 18: [14, 2, 10], 19: [4, 3, 11], 20: [5, 15, 25, 22], 21: [12], 22: [2, 0, 24, 28, 20, 30], 23: [17, 12, 1, 2, 5, 26], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17, 23], 27: [11, 0, 17, 16], 28: [16, 22], 29: [17, 4, 2, 9], 30: [10, 1, 8, 12, 3, 14, 22]}
iteration : 4 Graph	Undirected	{0: [3, 22, 1, 27], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13], 2: [8, 22, 18, 5, 29, 23], 3: [19, 0, 11, 30, 24, 15, 9], 4: [19, 1, 29, 11, 12], 5: [20, 1, 2, 14, 23], 6: [17, 24, 14], 7: [11], 8: [26, 11, 2, 13, 30], 9: [26, 13, 3, 29], 10: [1, 30, 26, 18], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1, 4], 13: [14, 8, 16, 9, 1], 14: [13, 18, 16, 6, 12, 30, 5], 15: [20, 11, 3], 16: [14, 28, 17, 13, 27], 17: [23, 16, 29, 6, 27, 26, 24], 18: [14, 2, 10], 19: [4, 3, 11], 20: [5, 15, 25, 22], 21: [12], 22: [2, 0, 24, 28, 20, 30], 23: [17, 12, 1, 2, 5, 26], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17, 23], 27: [11, 0, 17, 16], 28: [16, 22], 29: [17, 4, 2, 9], 30: [10, 1, 8, 12, 3, 14, 22]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 31 Edges= 74 	elapsed= 0.0031692370000087067 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 31 Edges= 74 	elapsed= 3.0330074420000415 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 74 	elapsed AVG,DEV_STD= (0.002652807399994117, 0.0018531912503791158) 	 randGraphIndex:  4 	iteration to reach Optimal:  6
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 31 Edges= 74 	elapsed AVG,DEV_STD= (0.25505155869999496, 0.001277914388978838) 	 randGraphIndex:  4 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27, 19], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13], 2: [8, 22, 18, 5, 29, 23, 16, 9], 3: [19, 0, 11, 30, 24, 15, 9], 4: [19, 1, 29, 11, 12, 26], 5: [20, 1, 2, 14, 23], 6: [17, 24, 14, 19], 7: [11, 20], 8: [26, 11, 2, 13, 30], 9: [26, 13, 3, 29, 12, 2], 10: [1, 30, 26, 18], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1, 4, 9], 13: [14, 8, 16, 9, 1], 14: [13, 18, 16, 6, 12, 30, 5], 15: [20, 11, 3, 29, 16], 16: [14, 28, 17, 13, 27, 2, 15], 17: [23, 16, 29, 6, 27, 26, 24], 18: [14, 2, 10], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7], 21: [12], 22: [2, 0, 24, 28, 20, 30], 23: [17, 12, 1, 2, 5, 26, 28], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17, 23, 4], 27: [11, 0, 17, 16], 28: [16, 22, 30, 23], 29: [17, 4, 2, 9, 15], 30: [10, 1, 8, 12, 3, 14, 22, 28]}
iteration : 5 Graph	Undirected	{0: [3, 22, 1, 27, 19], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13], 2: [8, 22, 18, 5, 29, 23, 16, 9], 3: [19, 0, 11, 30, 24, 15, 9], 4: [19, 1, 29, 11, 12, 26], 5: [20, 1, 2, 14, 23], 6: [17, 24, 14, 19], 7: [11, 20], 8: [26, 11, 2, 13, 30], 9: [26, 13, 3, 29, 12, 2], 10: [1, 30, 26, 18], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1, 4, 9], 13: [14, 8, 16, 9, 1], 14: [13, 18, 16, 6, 12, 30, 5], 15: [20, 11, 3, 29, 16], 16: [14, 28, 17, 13, 27, 2, 15], 17: [23, 16, 29, 6, 27, 26, 24], 18: [14, 2, 10], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7], 21: [12], 22: [2, 0, 24, 28, 20, 30], 23: [17, 12, 1, 2, 5, 26, 28], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17, 23, 4], 27: [11, 0, 17, 16], 28: [16, 22, 30, 23], 29: [17, 4, 2, 9, 15], 30: [10, 1, 8, 12, 3, 14, 22, 28]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 31 Edges= 85 	elapsed= 0.0034460740000099577 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 31 Edges= 85 	elapsed= 3.361134430999982 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 85 	elapsed AVG,DEV_STD= (0.003126426799985893, 0.0022331558880753625) 	 randGraphIndex:  5 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 31 Edges= 85 	elapsed AVG,DEV_STD= (0.26762798729999987, 0.000986813852117507) 	 randGraphIndex:  5 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27, 19], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13, 8], 2: [8, 22, 18, 5, 29, 23, 16, 9], 3: [19, 0, 11, 30, 24, 15, 9, 27, 29], 4: [19, 1, 29, 11, 12, 26, 23], 5: [20, 1, 2, 14, 23, 27], 6: [17, 24, 14, 19, 20], 7: [11, 20], 8: [26, 11, 2, 13, 30, 1], 9: [26, 13, 3, 29, 12, 2], 10: [1, 30, 26, 18], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1, 4, 9], 13: [14, 8, 16, 9, 1, 18, 15, 22], 14: [13, 18, 16, 6, 12, 30, 5, 27], 15: [20, 11, 3, 29, 16, 13], 16: [14, 28, 17, 13, 27, 2, 15], 17: [23, 16, 29, 6, 27, 26, 24], 18: [14, 2, 10, 13], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7, 6], 21: [12, 22], 22: [2, 0, 24, 28, 20, 30, 21, 13], 23: [17, 12, 1, 2, 5, 26, 28, 4], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17, 23, 4], 27: [11, 0, 17, 16, 3, 14, 5], 28: [16, 22, 30, 23], 29: [17, 4, 2, 9, 15, 3], 30: [10, 1, 8, 12, 3, 14, 22, 28]}
iteration : 6 Graph	Undirected	{0: [3, 22, 1, 27, 19], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13, 8], 2: [8, 22, 18, 5, 29, 23, 16, 9], 3: [19, 0, 11, 30, 24, 15, 9, 27, 29], 4: [19, 1, 29, 11, 12, 26, 23], 5: [20, 1, 2, 14, 23, 27], 6: [17, 24, 14, 19, 20], 7: [11, 20], 8: [26, 11, 2, 13, 30, 1], 9: [26, 13, 3, 29, 12, 2], 10: [1, 30, 26, 18], 11: [7, 15, 27, 8, 3, 4, 19], 12: [21, 25, 23, 30, 14, 1, 4, 9], 13: [14, 8, 16, 9, 1, 18, 15, 22], 14: [13, 18, 16, 6, 12, 30, 5, 27], 15: [20, 11, 3, 29, 16, 13], 16: [14, 28, 17, 13, 27, 2, 15], 17: [23, 16, 29, 6, 27, 26, 24], 18: [14, 2, 10, 13], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7, 6], 21: [12, 22], 22: [2, 0, 24, 28, 20, 30, 21, 13], 23: [17, 12, 1, 2, 5, 26, 28, 4], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20], 26: [9, 25, 8, 10, 17, 23, 4], 27: [11, 0, 17, 16, 3, 14, 5], 28: [16, 22, 30, 23], 29: [17, 4, 2, 9, 15, 3], 30: [10, 1, 8, 12, 3, 14, 22, 28]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 31 Edges= 96 	elapsed= 0.0036286900000277456 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  2  graph: Nodes= 31 Edges= 96 	elapsed= 3.675772221000045 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 96 	elapsed AVG,DEV_STD= (0.005238406000006535, 0.005375629000973641) 	 randGraphIndex:  6 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 31 Edges= 96 	elapsed AVG,DEV_STD= (0.2799660660999962, 0.00404939082168739) 	 randGraphIndex:  6 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27, 19], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13, 8, 27], 2: [8, 22, 18, 5, 29, 23, 16, 9], 3: [19, 0, 11, 30, 24, 15, 9, 27, 29], 4: [19, 1, 29, 11, 12, 26, 23, 13, 22], 5: [20, 1, 2, 14, 23, 27], 6: [17, 24, 14, 19, 20, 10], 7: [11, 20], 8: [26, 11, 2, 13, 30, 1], 9: [26, 13, 3, 29, 12, 2, 21], 10: [1, 30, 26, 18, 6], 11: [7, 15, 27, 8, 3, 4, 19, 26], 12: [21, 25, 23, 30, 14, 1, 4, 9], 13: [14, 8, 16, 9, 1, 18, 15, 22, 4], 14: [13, 18, 16, 6, 12, 30, 5, 27], 15: [20, 11, 3, 29, 16, 13, 28], 16: [14, 28, 17, 13, 27, 2, 15], 17: [23, 16, 29, 6, 27, 26, 24, 28], 18: [14, 2, 10, 13, 29], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7, 6], 21: [12, 22, 9], 22: [2, 0, 24, 28, 20, 30, 21, 13, 4], 23: [17, 12, 1, 2, 5, 26, 28, 4], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20, 27], 26: [9, 25, 8, 10, 17, 23, 4, 11], 27: [11, 0, 17, 16, 3, 14, 5, 1, 25, 28], 28: [16, 22, 30, 23, 17, 27, 15], 29: [17, 4, 2, 9, 15, 3, 18], 30: [10, 1, 8, 12, 3, 14, 22, 28]}
iteration : 7 Graph	Undirected	{0: [3, 22, 1, 27, 19], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13, 8, 27], 2: [8, 22, 18, 5, 29, 23, 16, 9], 3: [19, 0, 11, 30, 24, 15, 9, 27, 29], 4: [19, 1, 29, 11, 12, 26, 23, 13, 22], 5: [20, 1, 2, 14, 23, 27], 6: [17, 24, 14, 19, 20, 10], 7: [11, 20], 8: [26, 11, 2, 13, 30, 1], 9: [26, 13, 3, 29, 12, 2, 21], 10: [1, 30, 26, 18, 6], 11: [7, 15, 27, 8, 3, 4, 19, 26], 12: [21, 25, 23, 30, 14, 1, 4, 9], 13: [14, 8, 16, 9, 1, 18, 15, 22, 4], 14: [13, 18, 16, 6, 12, 30, 5, 27], 15: [20, 11, 3, 29, 16, 13, 28], 16: [14, 28, 17, 13, 27, 2, 15], 17: [23, 16, 29, 6, 27, 26, 24, 28], 18: [14, 2, 10, 13, 29], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7, 6], 21: [12, 22, 9], 22: [2, 0, 24, 28, 20, 30, 21, 13, 4], 23: [17, 12, 1, 2, 5, 26, 28, 4], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20, 27], 26: [9, 25, 8, 10, 17, 23, 4, 11], 27: [11, 0, 17, 16, 3, 14, 5, 1, 25, 28], 28: [16, 22, 30, 23, 17, 27, 15], 29: [17, 4, 2, 9, 15, 3, 18], 30: [10, 1, 8, 12, 3, 14, 22, 28]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 31 Edges= 107 	elapsed= 0.0038741299999855983 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  2  graph: Nodes= 31 Edges= 107 	elapsed= 3.9947524199999975 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 31 Edges= 107 	elapsed AVG,DEV_STD= (0.007124597600000016, 0.005353446771581772) 	 randGraphIndex:  7 	iteration to reach Optimal:  8
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 31 Edges= 107 	elapsed AVG,DEV_STD= (0.28955222929998853, 0.000660656678052049) 	 randGraphIndex:  7 	iterations:  480 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [3, 22, 1, 27, 19, 26], 1: [0, 24, 10, 30, 5, 4, 23, 12, 13, 8, 27], 2: [8, 22, 18, 5, 29, 23, 16, 9, 12], 3: [19, 0, 11, 30, 24, 15, 9, 27, 29], 4: [19, 1, 29, 11, 12, 26, 23, 13, 22], 5: [20, 1, 2, 14, 23, 27], 6: [17, 24, 14, 19, 20, 10], 7: [11, 20, 14], 8: [26, 11, 2, 13, 30, 1], 9: [26, 13, 3, 29, 12, 2, 21, 17], 10: [1, 30, 26, 18, 6, 17], 11: [7, 15, 27, 8, 3, 4, 19, 26, 22, 14], 12: [21, 25, 23, 30, 14, 1, 4, 9, 2], 13: [14, 8, 16, 9, 1, 18, 15, 22, 4], 14: [13, 18, 16, 6, 12, 30, 5, 27, 11, 7], 15: [20, 11, 3, 29, 16, 13, 28], 16: [14, 28, 17, 13, 27, 2, 15, 29], 17: [23, 16, 29, 6, 27, 26, 24, 28, 10, 9], 18: [14, 2, 10, 13, 29], 19: [4, 3, 11, 0, 6], 20: [5, 15, 25, 22, 7, 6, 30], 21: [12, 22, 9], 22: [2, 0, 24, 28, 20, 30, 21, 13, 4, 11], 23: [17, 12, 1, 2, 5, 26, 28, 4, 25], 24: [6, 1, 22, 3, 17], 25: [12, 26, 20, 27, 23], 26: [9, 25, 8, 10, 17, 23, 4, 11, 27, 0], 27: [11, 0, 17, 16, 3, 14, 5, 1, 25, 28, 26], 28: [16, 22, 30, 23, 17, 27, 15], 29: [17, 4, 2, 9, 15, 3, 18, 16], 30: [10, 1, 8, 12, 3, 14, 22, 28, 20]}
exploring min cut solver algoritm with a graph of 40 with variable num of edges


iteration : 0 Graph	Undirected	{0: [4, 10, 36], 1: [19, 28, 12], 2: [29], 3: [11, 6], 4: [0], 5: [33], 6: [14, 3, 39], 7: [36], 8: [16], 9: [34], 10: [15, 0], 11: [31, 24, 3], 12: [25, 1, 32], 13: [23], 14: [21, 6], 15: [30, 10], 16: [8, 26, 29], 17: [21], 18: [23, 25], 19: [1], 20: [29], 21: [17, 14], 22: [37, 30], 23: [13, 18], 24: [35, 11], 25: [18, 33, 12], 26: [36, 38, 16], 27: [32], 28: [34, 1], 29: [2, 20, 16, 32], 30: [22, 15], 31: [11], 32: [27, 12, 29, 35], 33: [5, 25], 34: [9, 28], 35: [32, 24], 36: [7, 0, 26], 37: [22], 38: [26], 39: [6]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 40 Edges= 39 	elapsed= 0.0026842589999773736 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 40 Edges= 39 	elapsed= 3.208602362000022 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 39 	elapsed AVG,DEV_STD= (0.0016494616999978007, 0.001365075150330647) 	 randGraphIndex:  0 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 40 Edges= 39 	elapsed AVG,DEV_STD= (0.46827777429999173, 0.0010567037653346945) 	 randGraphIndex:  0 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29], 3: [11, 6, 24], 4: [0, 21], 5: [33], 6: [14, 3, 39, 10], 7: [36], 8: [16, 25, 37, 1], 9: [34, 21], 10: [15, 0, 6], 11: [31, 24, 3], 12: [25, 1, 32, 15], 13: [23], 14: [21, 6], 15: [30, 10, 12], 16: [8, 26, 29], 17: [21, 31], 18: [23, 25], 19: [1], 20: [29], 21: [17, 14, 4, 9], 22: [37, 30], 23: [13, 18, 30], 24: [35, 11, 3], 25: [18, 33, 12, 8], 26: [36, 38, 16], 27: [32], 28: [34, 1], 29: [2, 20, 16, 32, 37], 30: [22, 15, 23], 31: [11, 17], 32: [27, 12, 29, 35], 33: [5, 25], 34: [9, 28], 35: [32, 24], 36: [7, 0, 26], 37: [22, 29, 8], 38: [26], 39: [6]}
iteration : 1 Graph	Undirected	{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29], 3: [11, 6, 24], 4: [0, 21], 5: [33], 6: [14, 3, 39, 10], 7: [36], 8: [16, 25, 37, 1], 9: [34, 21], 10: [15, 0, 6], 11: [31, 24, 3], 12: [25, 1, 32, 15], 13: [23], 14: [21, 6], 15: [30, 10, 12], 16: [8, 26, 29], 17: [21, 31], 18: [23, 25], 19: [1], 20: [29], 21: [17, 14, 4, 9], 22: [37, 30], 23: [13, 18, 30], 24: [35, 11, 3], 25: [18, 33, 12, 8], 26: [36, 38, 16], 27: [32], 28: [34, 1], 29: [2, 20, 16, 32, 37], 30: [22, 15, 23], 31: [11, 17], 32: [27, 12, 29, 35], 33: [5, 25], 34: [9, 28], 35: [32, 24], 36: [7, 0, 26], 37: [22, 29, 8], 38: [26], 39: [6]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 40 Edges= 50 	elapsed= 0.0032940259999918453 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 40 Edges= 50 	elapsed= 3.701113522000014 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 50 	elapsed AVG,DEV_STD= (0.0014584470999920995, 0.001513447249301056) 	 randGraphIndex:  1 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 40 Edges= 50 	elapsed AVG,DEV_STD= (0.5092306109999981, 0.003713281405247155) 	 randGraphIndex:  1 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29], 3: [11, 6, 24, 29], 4: [0, 21, 34], 5: [33, 15], 6: [14, 3, 39, 10], 7: [36, 25], 8: [16, 25, 37, 1], 9: [34, 21], 10: [15, 0, 6, 33], 11: [31, 24, 3, 36], 12: [25, 1, 32, 15], 13: [23], 14: [21, 6], 15: [30, 10, 12, 5], 16: [8, 26, 29], 17: [21, 31], 18: [23, 25], 19: [1], 20: [29], 21: [17, 14, 4, 9], 22: [37, 30], 23: [13, 18, 30, 26], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39], 26: [36, 38, 16, 23], 27: [32], 28: [34, 1], 29: [2, 20, 16, 32, 37, 3, 35], 30: [22, 15, 23, 31], 31: [11, 17, 30], 32: [27, 12, 29, 35], 33: [5, 25, 10], 34: [9, 28, 4], 35: [32, 24, 29], 36: [7, 0, 26, 11], 37: [22, 29, 8], 38: [26], 39: [6, 25, 24]}
iteration : 2 Graph	Undirected	{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29], 3: [11, 6, 24, 29], 4: [0, 21, 34], 5: [33, 15], 6: [14, 3, 39, 10], 7: [36, 25], 8: [16, 25, 37, 1], 9: [34, 21], 10: [15, 0, 6, 33], 11: [31, 24, 3, 36], 12: [25, 1, 32, 15], 13: [23], 14: [21, 6], 15: [30, 10, 12, 5], 16: [8, 26, 29], 17: [21, 31], 18: [23, 25], 19: [1], 20: [29], 21: [17, 14, 4, 9], 22: [37, 30], 23: [13, 18, 30, 26], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39], 26: [36, 38, 16, 23], 27: [32], 28: [34, 1], 29: [2, 20, 16, 32, 37, 3, 35], 30: [22, 15, 23, 31], 31: [11, 17, 30], 32: [27, 12, 29, 35], 33: [5, 25, 10], 34: [9, 28, 4], 35: [32, 24, 29], 36: [7, 0, 26, 11], 37: [22, 29, 8], 38: [26], 39: [6, 25, 24]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 40 Edges= 61 	elapsed= 0.0037573319999637533 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 40 Edges= 61 	elapsed= 4.325410765000015 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 61 	elapsed AVG,DEV_STD= (0.0015935036000030323, 0.0011608291098448504) 	 randGraphIndex:  2 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 40 Edges= 61 	elapsed AVG,DEV_STD= (0.5378158391999989, 0.0009149731006244465) 	 randGraphIndex:  2 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29], 3: [11, 6, 24, 29, 15, 8, 7], 4: [0, 21, 34], 5: [33, 15], 6: [14, 3, 39, 10], 7: [36, 25, 11, 3], 8: [16, 25, 37, 1, 10, 3], 9: [34, 21, 27], 10: [15, 0, 6, 33, 8], 11: [31, 24, 3, 36, 7], 12: [25, 1, 32, 15], 13: [23], 14: [21, 6], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29], 17: [21, 31], 18: [23, 25, 27, 34], 19: [1], 20: [29], 21: [17, 14, 4, 9, 37], 22: [37, 30], 23: [13, 18, 30, 26, 28, 33], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39], 26: [36, 38, 16, 23], 27: [32, 18, 9], 28: [34, 1, 23], 29: [2, 20, 16, 32, 37, 3, 35], 30: [22, 15, 23, 31], 31: [11, 17, 30], 32: [27, 12, 29, 35], 33: [5, 25, 10, 23], 34: [9, 28, 4, 18], 35: [32, 24, 29], 36: [7, 0, 26, 11], 37: [22, 29, 8, 21], 38: [26], 39: [6, 25, 24]}
iteration : 3 Graph	Undirected	{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29], 3: [11, 6, 24, 29, 15, 8, 7], 4: [0, 21, 34], 5: [33, 15], 6: [14, 3, 39, 10], 7: [36, 25, 11, 3], 8: [16, 25, 37, 1, 10, 3], 9: [34, 21, 27], 10: [15, 0, 6, 33, 8], 11: [31, 24, 3, 36, 7], 12: [25, 1, 32, 15], 13: [23], 14: [21, 6], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29], 17: [21, 31], 18: [23, 25, 27, 34], 19: [1], 20: [29], 21: [17, 14, 4, 9, 37], 22: [37, 30], 23: [13, 18, 30, 26, 28, 33], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39], 26: [36, 38, 16, 23], 27: [32, 18, 9], 28: [34, 1, 23], 29: [2, 20, 16, 32, 37, 3, 35], 30: [22, 15, 23, 31], 31: [11, 17, 30], 32: [27, 12, 29, 35], 33: [5, 25, 10, 23], 34: [9, 28, 4, 18], 35: [32, 24, 29], 36: [7, 0, 26, 11], 37: [22, 29, 8, 21], 38: [26], 39: [6, 25, 24]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 40 Edges= 72 	elapsed= 0.004319681000026776 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 40 Edges= 72 	elapsed= 4.974551830999985 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 72 	elapsed AVG,DEV_STD= (0.0014758246000042164, 0.0009556708266994718) 	 randGraphIndex:  3 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 40 Edges= 72 	elapsed AVG,DEV_STD= (0.5682234955999889, 0.000940109203860685) 	 randGraphIndex:  3 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29, 8], 3: [11, 6, 24, 29, 15, 8, 7, 35], 4: [0, 21, 34], 5: [33, 15, 37], 6: [14, 3, 39, 10], 7: [36, 25, 11, 3], 8: [16, 25, 37, 1, 10, 3, 2], 9: [34, 21, 27, 16], 10: [15, 0, 6, 33, 8], 11: [31, 24, 3, 36, 7], 12: [25, 1, 32, 15], 13: [23, 38], 14: [21, 6, 27, 16], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32], 17: [21, 31], 18: [23, 25, 27, 34], 19: [1, 30], 20: [29], 21: [17, 14, 4, 9, 37], 22: [37, 30, 29], 23: [13, 18, 30, 26, 28, 33], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39], 26: [36, 38, 16, 23], 27: [32, 18, 9, 14], 28: [34, 1, 23], 29: [2, 20, 16, 32, 37, 3, 35, 22], 30: [22, 15, 23, 31, 19], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16], 33: [5, 25, 10, 23], 34: [9, 28, 4, 18], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11], 37: [22, 29, 8, 21, 5, 35], 38: [26, 13], 39: [6, 25, 24]}
iteration : 4 Graph	Undirected	{0: [4, 10, 36], 1: [19, 28, 12, 8], 2: [29, 8], 3: [11, 6, 24, 29, 15, 8, 7, 35], 4: [0, 21, 34], 5: [33, 15, 37], 6: [14, 3, 39, 10], 7: [36, 25, 11, 3], 8: [16, 25, 37, 1, 10, 3, 2], 9: [34, 21, 27, 16], 10: [15, 0, 6, 33, 8], 11: [31, 24, 3, 36, 7], 12: [25, 1, 32, 15], 13: [23, 38], 14: [21, 6, 27, 16], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32], 17: [21, 31], 18: [23, 25, 27, 34], 19: [1, 30], 20: [29], 21: [17, 14, 4, 9, 37], 22: [37, 30, 29], 23: [13, 18, 30, 26, 28, 33], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39], 26: [36, 38, 16, 23], 27: [32, 18, 9, 14], 28: [34, 1, 23], 29: [2, 20, 16, 32, 37, 3, 35, 22], 30: [22, 15, 23, 31, 19], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16], 33: [5, 25, 10, 23], 34: [9, 28, 4, 18], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11], 37: [22, 29, 8, 21, 5, 35], 38: [26, 13], 39: [6, 25, 24]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 40 Edges= 83 	elapsed= 0.004605679000007967 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 40 Edges= 83 	elapsed= 5.559716858999991 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 83 	elapsed AVG,DEV_STD= (0.00582134500000393, 0.003931165990715536) 	 randGraphIndex:  4 	iteration to reach Optimal:  13
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 40 Edges= 83 	elapsed AVG,DEV_STD= (0.5896323595000013, 0.0011861126756004226) 	 randGraphIndex:  4 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36], 1: [19, 28, 12, 8, 4], 2: [29, 8], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33], 4: [0, 21, 34, 1], 5: [33, 15, 37], 6: [14, 3, 39, 10, 21], 7: [36, 25, 11, 3], 8: [16, 25, 37, 1, 10, 3, 2], 9: [34, 21, 27, 16, 10], 10: [15, 0, 6, 33, 8, 9], 11: [31, 24, 3, 36, 7], 12: [25, 1, 32, 15], 13: [23, 38], 14: [21, 6, 27, 16], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23], 17: [21, 31, 26], 18: [23, 25, 27, 34], 19: [1, 30], 20: [29], 21: [17, 14, 4, 9, 37, 6], 22: [37, 30, 29], 23: [13, 18, 30, 26, 28, 33, 16, 25], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17], 27: [32, 18, 9, 14], 28: [34, 1, 23, 29], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28], 30: [22, 15, 23, 31, 19], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11, 39], 37: [22, 29, 8, 21, 5, 35], 38: [26, 13, 33], 39: [6, 25, 24, 34, 36]}
iteration : 5 Graph	Undirected	{0: [4, 10, 36], 1: [19, 28, 12, 8, 4], 2: [29, 8], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33], 4: [0, 21, 34, 1], 5: [33, 15, 37], 6: [14, 3, 39, 10, 21], 7: [36, 25, 11, 3], 8: [16, 25, 37, 1, 10, 3, 2], 9: [34, 21, 27, 16, 10], 10: [15, 0, 6, 33, 8, 9], 11: [31, 24, 3, 36, 7], 12: [25, 1, 32, 15], 13: [23, 38], 14: [21, 6, 27, 16], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23], 17: [21, 31, 26], 18: [23, 25, 27, 34], 19: [1, 30], 20: [29], 21: [17, 14, 4, 9, 37, 6], 22: [37, 30, 29], 23: [13, 18, 30, 26, 28, 33, 16, 25], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17], 27: [32, 18, 9, 14], 28: [34, 1, 23, 29], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28], 30: [22, 15, 23, 31, 19], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11, 39], 37: [22, 29, 8, 21, 5, 35], 38: [26, 13, 33], 39: [6, 25, 24, 34, 36]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 40 Edges= 94 	elapsed= 0.004972203000022546 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 40 Edges= 94 	elapsed= 6.2129977499999995 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 94 	elapsed AVG,DEV_STD= (0.006542998200012562, 0.002492587413388444) 	 randGraphIndex:  5 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 40 Edges= 94 	elapsed AVG,DEV_STD= (0.6178128713999967, 0.005060116173312158) 	 randGraphIndex:  5 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36, 6, 16, 18], 1: [19, 28, 12, 8, 4], 2: [29, 8], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33, 10], 4: [0, 21, 34, 1], 5: [33, 15, 37], 6: [14, 3, 39, 10, 21, 0], 7: [36, 25, 11, 3, 38], 8: [16, 25, 37, 1, 10, 3, 2, 11, 30], 9: [34, 21, 27, 16, 10], 10: [15, 0, 6, 33, 8, 9, 3], 11: [31, 24, 3, 36, 7, 8], 12: [25, 1, 32, 15], 13: [23, 38], 14: [21, 6, 27, 16], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23, 0, 37], 17: [21, 31, 26], 18: [23, 25, 27, 34, 0], 19: [1, 30, 21], 20: [29, 22], 21: [17, 14, 4, 9, 37, 6, 23, 19], 22: [37, 30, 29, 20], 23: [13, 18, 30, 26, 28, 33, 16, 25, 21], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17], 27: [32, 18, 9, 14], 28: [34, 1, 23, 29], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28], 30: [22, 15, 23, 31, 19, 8], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11, 39], 37: [22, 29, 8, 21, 5, 35, 16], 38: [26, 13, 33, 7], 39: [6, 25, 24, 34, 36]}
iteration : 6 Graph	Undirected	{0: [4, 10, 36, 6, 16, 18], 1: [19, 28, 12, 8, 4], 2: [29, 8], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33, 10], 4: [0, 21, 34, 1], 5: [33, 15, 37], 6: [14, 3, 39, 10, 21, 0], 7: [36, 25, 11, 3, 38], 8: [16, 25, 37, 1, 10, 3, 2, 11, 30], 9: [34, 21, 27, 16, 10], 10: [15, 0, 6, 33, 8, 9, 3], 11: [31, 24, 3, 36, 7, 8], 12: [25, 1, 32, 15], 13: [23, 38], 14: [21, 6, 27, 16], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23, 0, 37], 17: [21, 31, 26], 18: [23, 25, 27, 34, 0], 19: [1, 30, 21], 20: [29, 22], 21: [17, 14, 4, 9, 37, 6, 23, 19], 22: [37, 30, 29, 20], 23: [13, 18, 30, 26, 28, 33, 16, 25, 21], 24: [35, 11, 3, 39], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17], 27: [32, 18, 9, 14], 28: [34, 1, 23, 29], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28], 30: [22, 15, 23, 31, 19, 8], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11, 39], 37: [22, 29, 8, 21, 5, 35, 16], 38: [26, 13, 33, 7], 39: [6, 25, 24, 34, 36]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 40 Edges= 105 	elapsed= 0.005347360000030221 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  2  graph: Nodes= 40 Edges= 105 	elapsed= 6.751044469000021 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 105 	elapsed AVG,DEV_STD= (0.0040660389999970905, 0.0038596112817369773) 	 randGraphIndex:  6 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 40 Edges= 105 	elapsed AVG,DEV_STD= (0.6403702039000109, 0.0043012748102469) 	 randGraphIndex:  6 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36, 6, 16, 18], 1: [19, 28, 12, 8, 4], 2: [29, 8, 36], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33, 10], 4: [0, 21, 34, 1], 5: [33, 15, 37, 21, 12], 6: [14, 3, 39, 10, 21, 0], 7: [36, 25, 11, 3, 38, 29], 8: [16, 25, 37, 1, 10, 3, 2, 11, 30], 9: [34, 21, 27, 16, 10, 24, 20], 10: [15, 0, 6, 33, 8, 9, 3], 11: [31, 24, 3, 36, 7, 8, 12], 12: [25, 1, 32, 15, 5, 11], 13: [23, 38], 14: [21, 6, 27, 16, 23, 26], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23, 0, 37], 17: [21, 31, 26], 18: [23, 25, 27, 34, 0, 32], 19: [1, 30, 21], 20: [29, 22, 9], 21: [17, 14, 4, 9, 37, 6, 23, 19, 5], 22: [37, 30, 29, 20], 23: [13, 18, 30, 26, 28, 33, 16, 25, 21, 14], 24: [35, 11, 3, 39, 34, 9], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17, 14], 27: [32, 18, 9, 14], 28: [34, 1, 23, 29], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28, 7], 30: [22, 15, 23, 31, 19, 8], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16, 18], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39, 24], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11, 39, 2], 37: [22, 29, 8, 21, 5, 35, 16], 38: [26, 13, 33, 7], 39: [6, 25, 24, 34, 36]}
iteration : 7 Graph	Undirected	{0: [4, 10, 36, 6, 16, 18], 1: [19, 28, 12, 8, 4], 2: [29, 8, 36], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33, 10], 4: [0, 21, 34, 1], 5: [33, 15, 37, 21, 12], 6: [14, 3, 39, 10, 21, 0], 7: [36, 25, 11, 3, 38, 29], 8: [16, 25, 37, 1, 10, 3, 2, 11, 30], 9: [34, 21, 27, 16, 10, 24, 20], 10: [15, 0, 6, 33, 8, 9, 3], 11: [31, 24, 3, 36, 7, 8, 12], 12: [25, 1, 32, 15, 5, 11], 13: [23, 38], 14: [21, 6, 27, 16, 23, 26], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23, 0, 37], 17: [21, 31, 26], 18: [23, 25, 27, 34, 0, 32], 19: [1, 30, 21], 20: [29, 22, 9], 21: [17, 14, 4, 9, 37, 6, 23, 19, 5], 22: [37, 30, 29, 20], 23: [13, 18, 30, 26, 28, 33, 16, 25, 21, 14], 24: [35, 11, 3, 39, 34, 9], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17, 14], 27: [32, 18, 9, 14], 28: [34, 1, 23, 29], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28, 7], 30: [22, 15, 23, 31, 19, 8], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16, 18], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39, 24], 35: [32, 24, 29, 3, 37], 36: [7, 0, 26, 11, 39, 2], 37: [22, 29, 8, 21, 5, 35, 16], 38: [26, 13, 33, 7], 39: [6, 25, 24, 34, 36]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 40 Edges= 116 	elapsed= 0.005692905999978848 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  2  graph: Nodes= 40 Edges= 116 	elapsed= 7.451025785000013 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 40 Edges= 116 	elapsed AVG,DEV_STD= (0.011169392599998672, 0.010459899708119641) 	 randGraphIndex:  7 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 40 Edges= 116 	elapsed AVG,DEV_STD= (0.6592154783999888, 0.001136513895914079) 	 randGraphIndex:  7 	iterations:  800 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [4, 10, 36, 6, 16, 18, 24], 1: [19, 28, 12, 8, 4, 10], 2: [29, 8, 36], 3: [11, 6, 24, 29, 15, 8, 7, 35, 33, 10], 4: [0, 21, 34, 1], 5: [33, 15, 37, 21, 12], 6: [14, 3, 39, 10, 21, 0], 7: [36, 25, 11, 3, 38, 29], 8: [16, 25, 37, 1, 10, 3, 2, 11, 30, 29], 9: [34, 21, 27, 16, 10, 24, 20], 10: [15, 0, 6, 33, 8, 9, 3, 1, 17], 11: [31, 24, 3, 36, 7, 8, 12], 12: [25, 1, 32, 15, 5, 11], 13: [23, 38], 14: [21, 6, 27, 16, 23, 26], 15: [30, 10, 12, 5, 3], 16: [8, 26, 29, 9, 14, 32, 23, 0, 37], 17: [21, 31, 26, 10], 18: [23, 25, 27, 34, 0, 32], 19: [1, 30, 21], 20: [29, 22, 9, 37, 35], 21: [17, 14, 4, 9, 37, 6, 23, 19, 5], 22: [37, 30, 29, 20], 23: [13, 18, 30, 26, 28, 33, 16, 25, 21, 14], 24: [35, 11, 3, 39, 34, 9, 0], 25: [18, 33, 12, 8, 7, 39, 23], 26: [36, 38, 16, 23, 17, 14], 27: [32, 18, 9, 14, 28, 30], 28: [34, 1, 23, 29, 27], 29: [2, 20, 16, 32, 37, 3, 35, 22, 28, 7, 8], 30: [22, 15, 23, 31, 19, 8, 27], 31: [11, 17, 30], 32: [27, 12, 29, 35, 16, 18, 39], 33: [5, 25, 10, 23, 3, 38], 34: [9, 28, 4, 18, 39, 24], 35: [32, 24, 29, 3, 37, 38, 20], 36: [7, 0, 26, 11, 39, 2], 37: [22, 29, 8, 21, 5, 35, 16, 20, 38], 38: [26, 13, 33, 7, 37, 35], 39: [6, 25, 24, 34, 36, 32]}
exploring min cut solver algoritm with a graph of 49 with variable num of edges


iteration : 0 Graph	Undirected	{0: [18], 1: [33, 15], 2: [13], 3: [11, 15], 4: [42, 44], 5: [36, 13], 6: [7], 7: [6, 39, 35], 8: [45, 32], 9: [37, 45], 10: [29, 44], 11: [3], 12: [25], 13: [2, 5, 22, 27], 14: [28, 16, 48], 15: [3, 1, 17, 22], 16: [30, 14], 17: [38, 15], 18: [0, 41, 34], 19: [38], 20: [23, 34, 30], 21: [35], 22: [15, 13], 23: [20], 24: [35], 25: [12, 35], 26: [46], 27: [13, 47, 31], 28: [14], 29: [10], 30: [20, 16], 31: [44, 27, 41], 32: [8, 44], 33: [1], 34: [18, 20], 35: [21, 24, 25, 7, 46, 40], 36: [5], 37: [43, 9], 38: [19, 17], 39: [7], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37], 44: [10, 4, 32, 40, 31], 45: [9, 8], 46: [26, 35], 47: [27], 48: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 49 Edges= 48 	elapsed= 0.004006322000009277 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 49 Edges= 48 	elapsed= 5.628822436999997 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 48 	elapsed AVG,DEV_STD= (0.0017097729999989042, 0.0013996981492483788) 	 randGraphIndex:  0 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 49 Edges= 48 	elapsed AVG,DEV_STD= (0.9599363294, 0.004664565841092275) 	 randGraphIndex:  0 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18], 1: [33, 15, 4], 2: [13], 3: [11, 15], 4: [42, 44, 1, 33], 5: [36, 13], 6: [7], 7: [6, 39, 35], 8: [45, 32, 29], 9: [37, 45, 18], 10: [29, 44, 15, 21], 11: [3], 12: [25], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10], 16: [30, 14], 17: [38, 15], 18: [0, 41, 34, 9], 19: [38], 20: [23, 34, 30], 21: [35, 10], 22: [15, 13, 32], 23: [20], 24: [35], 25: [12, 35, 34, 13], 26: [46], 27: [13, 47, 31], 28: [14, 34], 29: [10, 8], 30: [20, 16], 31: [44, 27, 41, 45], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5], 37: [43, 9], 38: [19, 17], 39: [7], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37], 44: [10, 4, 32, 40, 31], 45: [9, 8, 31], 46: [26, 35], 47: [27], 48: [14]}
iteration : 1 Graph	Undirected	{0: [18], 1: [33, 15, 4], 2: [13], 3: [11, 15], 4: [42, 44, 1, 33], 5: [36, 13], 6: [7], 7: [6, 39, 35], 8: [45, 32, 29], 9: [37, 45, 18], 10: [29, 44, 15, 21], 11: [3], 12: [25], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10], 16: [30, 14], 17: [38, 15], 18: [0, 41, 34, 9], 19: [38], 20: [23, 34, 30], 21: [35, 10], 22: [15, 13, 32], 23: [20], 24: [35], 25: [12, 35, 34, 13], 26: [46], 27: [13, 47, 31], 28: [14, 34], 29: [10, 8], 30: [20, 16], 31: [44, 27, 41, 45], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5], 37: [43, 9], 38: [19, 17], 39: [7], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37], 44: [10, 4, 32, 40, 31], 45: [9, 8, 31], 46: [26, 35], 47: [27], 48: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 49 Edges= 59 	elapsed= 0.004776593999963552 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 49 Edges= 59 	elapsed= 6.568761705000043 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 59 	elapsed AVG,DEV_STD= (0.00207234869998274, 0.0008198190185160485) 	 randGraphIndex:  1 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 49 Edges= 59 	elapsed AVG,DEV_STD= (1.0287711454999908, 0.0028572712112329406) 	 randGraphIndex:  1 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18], 1: [33, 15, 4, 25], 2: [13], 3: [11, 15], 4: [42, 44, 1, 33, 23], 5: [36, 13], 6: [7, 31, 18], 7: [6, 39, 35, 47], 8: [45, 32, 29], 9: [37, 45, 18], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10], 16: [30, 14], 17: [38, 15, 48], 18: [0, 41, 34, 9, 6], 19: [38], 20: [23, 34, 30], 21: [35, 10, 26], 22: [15, 13, 32], 23: [20, 4, 43], 24: [35, 39], 25: [12, 35, 34, 13, 1], 26: [46, 21], 27: [13, 47, 31], 28: [14, 34], 29: [10, 8, 12], 30: [20, 16], 31: [44, 27, 41, 45, 6], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12], 37: [43, 9], 38: [19, 17], 39: [7, 24], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37, 23], 44: [10, 4, 32, 40, 31], 45: [9, 8, 31], 46: [26, 35], 47: [27, 7], 48: [14, 17]}
iteration : 2 Graph	Undirected	{0: [18], 1: [33, 15, 4, 25], 2: [13], 3: [11, 15], 4: [42, 44, 1, 33, 23], 5: [36, 13], 6: [7, 31, 18], 7: [6, 39, 35, 47], 8: [45, 32, 29], 9: [37, 45, 18], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10], 16: [30, 14], 17: [38, 15, 48], 18: [0, 41, 34, 9, 6], 19: [38], 20: [23, 34, 30], 21: [35, 10, 26], 22: [15, 13, 32], 23: [20, 4, 43], 24: [35, 39], 25: [12, 35, 34, 13, 1], 26: [46, 21], 27: [13, 47, 31], 28: [14, 34], 29: [10, 8, 12], 30: [20, 16], 31: [44, 27, 41, 45, 6], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12], 37: [43, 9], 38: [19, 17], 39: [7, 24], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37, 23], 44: [10, 4, 32, 40, 31], 45: [9, 8, 31], 46: [26, 35], 47: [27, 7], 48: [14, 17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 49 Edges= 70 	elapsed= 0.005209139000044161 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 49 Edges= 70 	elapsed= 7.5776559960000895 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 70 	elapsed AVG,DEV_STD= (0.0023268466999866178, 0.0012566795543757702) 	 randGraphIndex:  2 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 49 Edges= 70 	elapsed AVG,DEV_STD= (1.0747414330999845, 0.005447562543248437) 	 randGraphIndex:  2 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 44], 1: [33, 15, 4, 25, 29], 2: [13], 3: [11, 15, 37], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13], 6: [7, 31, 18], 7: [6, 39, 35, 47], 8: [45, 32, 29], 9: [37, 45, 18, 36], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29, 48], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10, 31, 16], 16: [30, 14, 15], 17: [38, 15, 48], 18: [0, 41, 34, 9, 6], 19: [38], 20: [23, 34, 30, 48, 4], 21: [35, 10, 26], 22: [15, 13, 32, 23], 23: [20, 4, 43, 22], 24: [35, 39], 25: [12, 35, 34, 13, 1], 26: [46, 21, 31], 27: [13, 47, 31], 28: [14, 34], 29: [10, 8, 12, 1], 30: [20, 16], 31: [44, 27, 41, 45, 6, 26, 15], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12, 9], 37: [43, 9, 3], 38: [19, 17], 39: [7, 24], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37, 23], 44: [10, 4, 32, 40, 31, 0], 45: [9, 8, 31], 46: [26, 35], 47: [27, 7], 48: [14, 17, 12, 20]}
iteration : 3 Graph	Undirected	{0: [18, 44], 1: [33, 15, 4, 25, 29], 2: [13], 3: [11, 15, 37], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13], 6: [7, 31, 18], 7: [6, 39, 35, 47], 8: [45, 32, 29], 9: [37, 45, 18, 36], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29, 48], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10, 31, 16], 16: [30, 14, 15], 17: [38, 15, 48], 18: [0, 41, 34, 9, 6], 19: [38], 20: [23, 34, 30, 48, 4], 21: [35, 10, 26], 22: [15, 13, 32, 23], 23: [20, 4, 43, 22], 24: [35, 39], 25: [12, 35, 34, 13, 1], 26: [46, 21, 31], 27: [13, 47, 31], 28: [14, 34], 29: [10, 8, 12, 1], 30: [20, 16], 31: [44, 27, 41, 45, 6, 26, 15], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12, 9], 37: [43, 9, 3], 38: [19, 17], 39: [7, 24], 40: [35, 44], 41: [31, 18], 42: [4], 43: [37, 23], 44: [10, 4, 32, 40, 31, 0], 45: [9, 8, 31], 46: [26, 35], 47: [27, 7], 48: [14, 17, 12, 20]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 49 Edges= 81 	elapsed= 0.005764851999970233 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 49 Edges= 81 	elapsed= 8.416877641000042 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 81 	elapsed AVG,DEV_STD= (0.0019296033000046008, 0.001321808636570511) 	 randGraphIndex:  3 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 49 Edges= 81 	elapsed AVG,DEV_STD= (1.1206742473000078, 0.004836652029564323) 	 randGraphIndex:  3 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 44, 7, 6], 1: [33, 15, 4, 25, 29, 31], 2: [13], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0], 8: [45, 32, 29, 27, 44], 9: [37, 45, 18, 36], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29, 48, 3], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10, 31, 16], 16: [30, 14, 15], 17: [38, 15, 48], 18: [0, 41, 34, 9, 6], 19: [38, 48], 20: [23, 34, 30, 48, 4], 21: [35, 10, 26], 22: [15, 13, 32, 23, 24, 6], 23: [20, 4, 43, 22], 24: [35, 39, 22], 25: [12, 35, 34, 13, 1], 26: [46, 21, 31], 27: [13, 47, 31, 8], 28: [14, 34], 29: [10, 8, 12, 1], 30: [20, 16, 5], 31: [44, 27, 41, 45, 6, 26, 15, 1], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12, 9], 37: [43, 9, 3], 38: [19, 17], 39: [7, 24], 40: [35, 44], 41: [31, 18, 48], 42: [4], 43: [37, 23], 44: [10, 4, 32, 40, 31, 0, 8], 45: [9, 8, 31], 46: [26, 35], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
iteration : 4 Graph	Undirected	{0: [18, 44, 7, 6], 1: [33, 15, 4, 25, 29, 31], 2: [13], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0], 8: [45, 32, 29, 27, 44], 9: [37, 45, 18, 36], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29, 48, 3], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48], 15: [3, 1, 17, 22, 10, 31, 16], 16: [30, 14, 15], 17: [38, 15, 48], 18: [0, 41, 34, 9, 6], 19: [38, 48], 20: [23, 34, 30, 48, 4], 21: [35, 10, 26], 22: [15, 13, 32, 23, 24, 6], 23: [20, 4, 43, 22], 24: [35, 39, 22], 25: [12, 35, 34, 13, 1], 26: [46, 21, 31], 27: [13, 47, 31, 8], 28: [14, 34], 29: [10, 8, 12, 1], 30: [20, 16, 5], 31: [44, 27, 41, 45, 6, 26, 15, 1], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12, 9], 37: [43, 9, 3], 38: [19, 17], 39: [7, 24], 40: [35, 44], 41: [31, 18, 48], 42: [4], 43: [37, 23], 44: [10, 4, 32, 40, 31, 0, 8], 45: [9, 8, 31], 46: [26, 35], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 49 Edges= 92 	elapsed= 0.006415844000002835 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 49 Edges= 92 	elapsed= 9.322501481000018 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 92 	elapsed AVG,DEV_STD= (0.0029331422999916866, 0.0029966382981253476) 	 randGraphIndex:  4 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 49 Edges= 92 	elapsed AVG,DEV_STD= (1.1659797254000068, 0.005249208538643542) 	 randGraphIndex:  4 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 44, 7, 6], 1: [33, 15, 4, 25, 29, 31, 40], 2: [13], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29], 8: [45, 32, 29, 27, 44], 9: [37, 45, 18, 36, 30], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29, 48, 3], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48, 31, 38], 15: [3, 1, 17, 22, 10, 31, 16, 34], 16: [30, 14, 15], 17: [38, 15, 48, 42], 18: [0, 41, 34, 9, 6], 19: [38, 48], 20: [23, 34, 30, 48, 4, 46], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6], 23: [20, 4, 43, 22], 24: [35, 39, 22, 41], 25: [12, 35, 34, 13, 1], 26: [46, 21, 31], 27: [13, 47, 31, 8], 28: [14, 34], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28, 30, 15], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12, 9], 37: [43, 9, 3], 38: [19, 17, 14], 39: [7, 24], 40: [35, 44, 1], 41: [31, 18, 48, 24], 42: [4, 17], 43: [37, 23], 44: [10, 4, 32, 40, 31, 0, 8], 45: [9, 8, 31], 46: [26, 35, 20], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
iteration : 5 Graph	Undirected	{0: [18, 44, 7, 6], 1: [33, 15, 4, 25, 29, 31, 40], 2: [13], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29], 8: [45, 32, 29, 27, 44], 9: [37, 45, 18, 36, 30], 10: [29, 44, 15, 21], 11: [3], 12: [25, 36, 29, 48, 3], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48, 31, 38], 15: [3, 1, 17, 22, 10, 31, 16, 34], 16: [30, 14, 15], 17: [38, 15, 48, 42], 18: [0, 41, 34, 9, 6], 19: [38, 48], 20: [23, 34, 30, 48, 4, 46], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6], 23: [20, 4, 43, 22], 24: [35, 39, 22, 41], 25: [12, 35, 34, 13, 1], 26: [46, 21, 31], 27: [13, 47, 31, 8], 28: [14, 34], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28, 30, 15], 35: [21, 24, 25, 7, 46, 40], 36: [5, 12, 9], 37: [43, 9, 3], 38: [19, 17, 14], 39: [7, 24], 40: [35, 44, 1], 41: [31, 18, 48, 24], 42: [4, 17], 43: [37, 23], 44: [10, 4, 32, 40, 31, 0, 8], 45: [9, 8, 31], 46: [26, 35, 20], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 49 Edges= 103 	elapsed= 0.006774979000056192 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 49 Edges= 103 	elapsed= 10.320509872000002 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 103 	elapsed AVG,DEV_STD= (0.0045538648000047035, 0.0030299765311556474) 	 randGraphIndex:  5 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 49 Edges= 103 	elapsed AVG,DEV_STD= (1.2152794462999963, 0.0074416378520094275) 	 randGraphIndex:  5 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 44, 7, 6, 26], 1: [33, 15, 4, 25, 29, 31, 40, 9], 2: [13, 11, 35], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29, 30], 8: [45, 32, 29, 27, 44, 37], 9: [37, 45, 18, 36, 30, 23, 1], 10: [29, 44, 15, 21], 11: [3, 2], 12: [25, 36, 29, 48, 3], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48, 31, 38], 15: [3, 1, 17, 22, 10, 31, 16, 34, 24], 16: [30, 14, 15], 17: [38, 15, 48, 42], 18: [0, 41, 34, 9, 6], 19: [38, 48], 20: [23, 34, 30, 48, 4, 46, 25], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6], 23: [20, 4, 43, 22, 9], 24: [35, 39, 22, 41, 15], 25: [12, 35, 34, 13, 1, 20], 26: [46, 21, 31, 43, 0], 27: [13, 47, 31, 8], 28: [14, 34], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9, 46, 7], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28, 30, 15], 35: [21, 24, 25, 7, 46, 40, 2], 36: [5, 12, 9], 37: [43, 9, 3, 8], 38: [19, 17, 14], 39: [7, 24], 40: [35, 44, 1], 41: [31, 18, 48, 24], 42: [4, 17], 43: [37, 23, 26], 44: [10, 4, 32, 40, 31, 0, 8], 45: [9, 8, 31], 46: [26, 35, 20, 30], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
iteration : 6 Graph	Undirected	{0: [18, 44, 7, 6, 26], 1: [33, 15, 4, 25, 29, 31, 40, 9], 2: [13, 11, 35], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29, 30], 8: [45, 32, 29, 27, 44, 37], 9: [37, 45, 18, 36, 30, 23, 1], 10: [29, 44, 15, 21], 11: [3, 2], 12: [25, 36, 29, 48, 3], 13: [2, 5, 22, 27, 25], 14: [28, 16, 48, 31, 38], 15: [3, 1, 17, 22, 10, 31, 16, 34, 24], 16: [30, 14, 15], 17: [38, 15, 48, 42], 18: [0, 41, 34, 9, 6], 19: [38, 48], 20: [23, 34, 30, 48, 4, 46, 25], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6], 23: [20, 4, 43, 22, 9], 24: [35, 39, 22, 41, 15], 25: [12, 35, 34, 13, 1, 20], 26: [46, 21, 31, 43, 0], 27: [13, 47, 31, 8], 28: [14, 34], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9, 46, 7], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28, 30, 15], 35: [21, 24, 25, 7, 46, 40, 2], 36: [5, 12, 9], 37: [43, 9, 3, 8], 38: [19, 17, 14], 39: [7, 24], 40: [35, 44, 1], 41: [31, 18, 48, 24], 42: [4, 17], 43: [37, 23, 26], 44: [10, 4, 32, 40, 31, 0, 8], 45: [9, 8, 31], 46: [26, 35, 20, 30], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 49 Edges= 114 	elapsed= 0.00743777599996065 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  2  graph: Nodes= 49 Edges= 114 	elapsed= 11.25509988400006 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 114 	elapsed AVG,DEV_STD= (0.006115633000024445, 0.004527668346523363) 	 randGraphIndex:  6 	iteration to reach Optimal:  7
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 49 Edges= 114 	elapsed AVG,DEV_STD= (1.2589866211000185, 0.005361044858423186) 	 randGraphIndex:  6 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 44, 7, 6, 26, 37], 1: [33, 15, 4, 25, 29, 31, 40, 9], 2: [13, 11, 35], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29, 30], 8: [45, 32, 29, 27, 44, 37, 28, 13], 9: [37, 45, 18, 36, 30, 23, 1, 14], 10: [29, 44, 15, 21], 11: [3, 2], 12: [25, 36, 29, 48, 3, 22], 13: [2, 5, 22, 27, 25, 8], 14: [28, 16, 48, 31, 38, 9], 15: [3, 1, 17, 22, 10, 31, 16, 34, 24], 16: [30, 14, 15], 17: [38, 15, 48, 42], 18: [0, 41, 34, 9, 6, 22], 19: [38, 48], 20: [23, 34, 30, 48, 4, 46, 25], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6, 12, 44, 18], 23: [20, 4, 43, 22, 9, 36, 34], 24: [35, 39, 22, 41, 15], 25: [12, 35, 34, 13, 1, 20, 46], 26: [46, 21, 31, 43, 0], 27: [13, 47, 31, 8], 28: [14, 34, 8], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9, 46, 7], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28, 30, 15, 23], 35: [21, 24, 25, 7, 46, 40, 2], 36: [5, 12, 9, 23], 37: [43, 9, 3, 8, 0], 38: [19, 17, 14], 39: [7, 24], 40: [35, 44, 1, 45], 41: [31, 18, 48, 24], 42: [4, 17], 43: [37, 23, 26], 44: [10, 4, 32, 40, 31, 0, 8, 22], 45: [9, 8, 31, 40], 46: [26, 35, 20, 30, 25], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
iteration : 7 Graph	Undirected	{0: [18, 44, 7, 6, 26, 37], 1: [33, 15, 4, 25, 29, 31, 40, 9], 2: [13, 11, 35], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29, 30], 8: [45, 32, 29, 27, 44, 37, 28, 13], 9: [37, 45, 18, 36, 30, 23, 1, 14], 10: [29, 44, 15, 21], 11: [3, 2], 12: [25, 36, 29, 48, 3, 22], 13: [2, 5, 22, 27, 25, 8], 14: [28, 16, 48, 31, 38, 9], 15: [3, 1, 17, 22, 10, 31, 16, 34, 24], 16: [30, 14, 15], 17: [38, 15, 48, 42], 18: [0, 41, 34, 9, 6, 22], 19: [38, 48], 20: [23, 34, 30, 48, 4, 46, 25], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6, 12, 44, 18], 23: [20, 4, 43, 22, 9, 36, 34], 24: [35, 39, 22, 41, 15], 25: [12, 35, 34, 13, 1, 20, 46], 26: [46, 21, 31, 43, 0], 27: [13, 47, 31, 8], 28: [14, 34, 8], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9, 46, 7], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14], 32: [8, 44, 22], 33: [1, 4], 34: [18, 20, 25, 28, 30, 15, 23], 35: [21, 24, 25, 7, 46, 40, 2], 36: [5, 12, 9, 23], 37: [43, 9, 3, 8, 0], 38: [19, 17, 14], 39: [7, 24], 40: [35, 44, 1, 45], 41: [31, 18, 48, 24], 42: [4, 17], 43: [37, 23, 26], 44: [10, 4, 32, 40, 31, 0, 8, 22], 45: [9, 8, 31, 40], 46: [26, 35, 20, 30, 25], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 49 Edges= 125 	elapsed= 0.007883925999976782 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  2  graph: Nodes= 49 Edges= 125 	elapsed= 12.358843912999987 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 49 Edges= 125 	elapsed AVG,DEV_STD= (0.005746473699991839, 0.00426989579802557) 	 randGraphIndex:  7 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 49 Edges= 125 	elapsed AVG,DEV_STD= (1.2923766762000128, 0.007383797484575426) 	 randGraphIndex:  7 	iterations:  1200 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 44, 7, 6, 26, 37, 33], 1: [33, 15, 4, 25, 29, 31, 40, 9], 2: [13, 11, 35, 26], 3: [11, 15, 37, 12], 4: [42, 44, 1, 33, 23, 20], 5: [36, 13, 30], 6: [7, 31, 18, 22, 0], 7: [6, 39, 35, 47, 0, 29, 30, 42, 19], 8: [45, 32, 29, 27, 44, 37, 28, 13], 9: [37, 45, 18, 36, 30, 23, 1, 14], 10: [29, 44, 15, 21], 11: [3, 2, 17, 14], 12: [25, 36, 29, 48, 3, 22], 13: [2, 5, 22, 27, 25, 8, 32], 14: [28, 16, 48, 31, 38, 9, 11], 15: [3, 1, 17, 22, 10, 31, 16, 34, 24, 41], 16: [30, 14, 15], 17: [38, 15, 48, 42, 11, 32], 18: [0, 41, 34, 9, 6, 22], 19: [38, 48, 7], 20: [23, 34, 30, 48, 4, 46, 25], 21: [35, 10, 26, 29], 22: [15, 13, 32, 23, 24, 6, 12, 44, 18], 23: [20, 4, 43, 22, 9, 36, 34], 24: [35, 39, 22, 41, 15], 25: [12, 35, 34, 13, 1, 20, 46], 26: [46, 21, 31, 43, 0, 2], 27: [13, 47, 31, 8], 28: [14, 34, 8, 31], 29: [10, 8, 12, 1, 7, 21], 30: [20, 16, 5, 34, 9, 46, 7], 31: [44, 27, 41, 45, 6, 26, 15, 1, 14, 28], 32: [8, 44, 22, 13, 17], 33: [1, 4, 0], 34: [18, 20, 25, 28, 30, 15, 23], 35: [21, 24, 25, 7, 46, 40, 2], 36: [5, 12, 9, 23], 37: [43, 9, 3, 8, 0, 38], 38: [19, 17, 14, 37], 39: [7, 24], 40: [35, 44, 1, 45], 41: [31, 18, 48, 24, 15], 42: [4, 17, 7], 43: [37, 23, 26], 44: [10, 4, 32, 40, 31, 0, 8, 22], 45: [9, 8, 31, 40], 46: [26, 35, 20, 30, 25], 47: [27, 7], 48: [14, 17, 12, 20, 41, 19]}
exploring min cut solver algoritm with a graph of 58 with variable num of edges


iteration : 0 Graph	Undirected	{0: [18, 23], 1: [21, 40, 22, 43, 42], 2: [37, 42], 3: [34], 4: [34], 5: [36], 6: [25], 7: [11, 18], 8: [45, 22], 9: [47], 10: [49, 56, 32], 11: [7], 12: [45], 13: [45], 14: [34, 46, 30], 15: [33], 16: [30], 17: [25, 54], 18: [7, 0], 19: [50, 30], 20: [35, 50], 21: [1], 22: [8, 1], 23: [0, 55], 24: [33, 29], 25: [6, 17], 26: [34], 27: [41], 28: [29], 29: [28, 31, 24, 42], 30: [16, 14, 19, 32, 41], 31: [29], 32: [10, 30], 33: [15, 24], 34: [3, 4, 26, 14], 35: [54, 20], 36: [5, 48, 37], 37: [36, 2], 38: [48], 39: [44], 40: [1], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1], 44: [39, 47, 55, 42], 45: [12, 13, 8], 46: [14], 47: [9, 44], 48: [38, 36], 49: [10], 50: [20, 19], 51: [55], 52: [53], 53: [52, 43], 54: [17, 35], 55: [23, 51, 44], 56: [10], 57: [41]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 57 	elapsed= 0.005568837000055282 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 57 	elapsed= 9.341305447999957 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 57 	elapsed AVG,DEV_STD= (0.0039233885000271584, 0.006558425238883621) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 57 	elapsed AVG,DEV_STD= (1.7416346810999925, 0.006175014267661366) 	 randGraphIndex:  0 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23], 1: [21, 40, 22, 43, 42], 2: [37, 42], 3: [34], 4: [34, 33], 5: [36, 30], 6: [25], 7: [11, 18], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7], 12: [45, 16], 13: [45], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39], 17: [25, 54], 18: [7, 0], 19: [50, 30], 20: [35, 50], 21: [1], 22: [8, 1, 48], 23: [0, 55], 24: [33, 29], 25: [6, 17], 26: [34], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42], 30: [16, 14, 19, 32, 41, 5], 31: [29], 32: [10, 30, 14, 9], 33: [15, 24, 4], 34: [3, 4, 26, 14], 35: [54, 20], 36: [5, 48, 37], 37: [36, 2], 38: [48, 14, 27, 44], 39: [44, 16], 40: [1], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1], 44: [39, 47, 55, 42, 38], 45: [12, 13, 8], 46: [14], 47: [9, 44], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53], 53: [52, 43], 54: [17, 35], 55: [23, 51, 44], 56: [10, 16], 57: [41]}
iteration : 1 Graph	Undirected	{0: [18, 23], 1: [21, 40, 22, 43, 42], 2: [37, 42], 3: [34], 4: [34, 33], 5: [36, 30], 6: [25], 7: [11, 18], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7], 12: [45, 16], 13: [45], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39], 17: [25, 54], 18: [7, 0], 19: [50, 30], 20: [35, 50], 21: [1], 22: [8, 1, 48], 23: [0, 55], 24: [33, 29], 25: [6, 17], 26: [34], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42], 30: [16, 14, 19, 32, 41, 5], 31: [29], 32: [10, 30, 14, 9], 33: [15, 24, 4], 34: [3, 4, 26, 14], 35: [54, 20], 36: [5, 48, 37], 37: [36, 2], 38: [48, 14, 27, 44], 39: [44, 16], 40: [1], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1], 44: [39, 47, 55, 42, 38], 45: [12, 13, 8], 46: [14], 47: [9, 44], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53], 53: [52, 43], 54: [17, 35], 55: [23, 51, 44], 56: [10, 16], 57: [41]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 68 	elapsed= 0.006163624000009804 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 68 	elapsed= 10.640480163000007 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 68 	elapsed AVG,DEV_STD= (0.0025043626000069708, 0.00190810469288507) 	 randGraphIndex:  1 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 68 	elapsed AVG,DEV_STD= (1.827002199900005, 0.006309048840937128) 	 randGraphIndex:  1 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44], 3: [34], 4: [34, 33], 5: [36, 30], 6: [25, 53], 7: [11, 18], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7, 29], 12: [45, 16], 13: [45], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54], 17: [25, 54, 0, 47], 18: [7, 0], 19: [50, 30], 20: [35, 50], 21: [1], 22: [8, 1, 48, 2], 23: [0, 55, 26], 24: [33, 29], 25: [6, 17], 26: [34, 23], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42, 11], 30: [16, 14, 19, 32, 41, 5], 31: [29], 32: [10, 30, 14, 9], 33: [15, 24, 4], 34: [3, 4, 26, 14], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2], 38: [48, 14, 27, 44, 39, 56], 39: [44, 16, 38], 40: [1], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8], 46: [14], 47: [9, 44, 17], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53], 53: [52, 43, 6], 54: [17, 35, 16], 55: [23, 51, 44, 35], 56: [10, 16, 38], 57: [41]}
iteration : 2 Graph	Undirected	{0: [18, 23, 17], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44], 3: [34], 4: [34, 33], 5: [36, 30], 6: [25, 53], 7: [11, 18], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7, 29], 12: [45, 16], 13: [45], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54], 17: [25, 54, 0, 47], 18: [7, 0], 19: [50, 30], 20: [35, 50], 21: [1], 22: [8, 1, 48, 2], 23: [0, 55, 26], 24: [33, 29], 25: [6, 17], 26: [34, 23], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42, 11], 30: [16, 14, 19, 32, 41, 5], 31: [29], 32: [10, 30, 14, 9], 33: [15, 24, 4], 34: [3, 4, 26, 14], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2], 38: [48, 14, 27, 44, 39, 56], 39: [44, 16, 38], 40: [1], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8], 46: [14], 47: [9, 44, 17], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53], 53: [52, 43, 6], 54: [17, 35, 16], 55: [23, 51, 44, 35], 56: [10, 16, 38], 57: [41]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 79 	elapsed= 0.00702561900004639 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 79 	elapsed= 11.883486532999996 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 79 	elapsed AVG,DEV_STD= (0.0031683058999874445, 0.002003952728152358) 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 79 	elapsed AVG,DEV_STD= (1.917508189199998, 0.005590910405114607) 	 randGraphIndex:  2 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17, 24], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33], 5: [36, 30], 6: [25, 53], 7: [11, 18, 24], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7, 29], 12: [45, 16], 13: [45], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54], 17: [25, 54, 0, 47, 33], 18: [7, 0], 19: [50, 30, 3], 20: [35, 50, 40], 21: [1], 22: [8, 1, 48, 2], 23: [0, 55, 26], 24: [33, 29, 0, 57, 7], 25: [6, 17], 26: [34, 23], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42, 11, 52], 30: [16, 14, 19, 32, 41, 5], 31: [29, 43], 32: [10, 30, 14, 9, 2], 33: [15, 24, 4, 17, 34], 34: [3, 4, 26, 14, 33], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2], 38: [48, 14, 27, 44, 39, 56], 39: [44, 16, 38], 40: [1, 20], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8], 46: [14], 47: [9, 44, 17], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53, 29], 53: [52, 43, 6], 54: [17, 35, 16], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38], 57: [41, 24]}
iteration : 3 Graph	Undirected	{0: [18, 23, 17, 24], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33], 5: [36, 30], 6: [25, 53], 7: [11, 18, 24], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7, 29], 12: [45, 16], 13: [45], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54], 17: [25, 54, 0, 47, 33], 18: [7, 0], 19: [50, 30, 3], 20: [35, 50, 40], 21: [1], 22: [8, 1, 48, 2], 23: [0, 55, 26], 24: [33, 29, 0, 57, 7], 25: [6, 17], 26: [34, 23], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42, 11, 52], 30: [16, 14, 19, 32, 41, 5], 31: [29, 43], 32: [10, 30, 14, 9, 2], 33: [15, 24, 4, 17, 34], 34: [3, 4, 26, 14, 33], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2], 38: [48, 14, 27, 44, 39, 56], 39: [44, 16, 38], 40: [1, 20], 41: [27, 42, 30, 57], 42: [29, 2, 1, 44, 41], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8], 46: [14], 47: [9, 44, 17], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53, 29], 53: [52, 43, 6], 54: [17, 35, 16], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38], 57: [41, 24]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 90 	elapsed= 0.007878118000007817 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 90 	elapsed= 13.244312523999952 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 90 	elapsed AVG,DEV_STD= (0.00280519620001769, 0.0020268363871080533) 	 randGraphIndex:  3 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 90 	elapsed AVG,DEV_STD= (1.9913108372999886, 0.006277575652905736) 	 randGraphIndex:  3 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17, 24], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26], 5: [36, 30, 46], 6: [25, 53], 7: [11, 18, 24], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7, 29], 12: [45, 16, 25], 13: [45, 31], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54, 31], 17: [25, 54, 0, 47, 33], 18: [7, 0, 57], 19: [50, 30, 3, 32], 20: [35, 50, 40], 21: [1], 22: [8, 1, 48, 2], 23: [0, 55, 26], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5], 31: [29, 43, 13, 16], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34], 34: [3, 4, 26, 14, 33], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47], 39: [44, 16, 38], 40: [1, 20], 41: [27, 42, 30, 57, 25, 37], 42: [29, 2, 1, 44, 41], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8], 46: [14, 5], 47: [9, 44, 17, 38], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53, 29], 53: [52, 43, 6], 54: [17, 35, 16, 29], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38], 57: [41, 24, 18]}
iteration : 4 Graph	Undirected	{0: [18, 23, 17, 24], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26], 5: [36, 30, 46], 6: [25, 53], 7: [11, 18, 24], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32], 11: [7, 29], 12: [45, 16, 25], 13: [45, 31], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54, 31], 17: [25, 54, 0, 47, 33], 18: [7, 0, 57], 19: [50, 30, 3, 32], 20: [35, 50, 40], 21: [1], 22: [8, 1, 48, 2], 23: [0, 55, 26], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38], 28: [29], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5], 31: [29, 43, 13, 16], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34], 34: [3, 4, 26, 14, 33], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47], 39: [44, 16, 38], 40: [1, 20], 41: [27, 42, 30, 57, 25, 37], 42: [29, 2, 1, 44, 41], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8], 46: [14, 5], 47: [9, 44, 17, 38], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55], 52: [53, 29], 53: [52, 43, 6], 54: [17, 35, 16, 29], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38], 57: [41, 24, 18]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 101 	elapsed= 0.00795913299998574 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 101 	elapsed= 14.459668459999989 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 101 	elapsed AVG,DEV_STD= (0.003963690599982783, 0.004444880556164633) 	 randGraphIndex:  4 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 101 	elapsed AVG,DEV_STD= (2.0582441280999775, 0.00799208852341299) 	 randGraphIndex:  4 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17, 24], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26], 5: [36, 30, 46, 51], 6: [25, 53], 7: [11, 18, 24], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25], 13: [45, 31], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54, 31], 17: [25, 54, 0, 47, 33, 42], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53], 20: [35, 50, 40], 21: [1, 33], 22: [8, 1, 48, 2], 23: [0, 55, 26, 27], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38, 40, 23], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51], 31: [29, 43, 13, 16], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47], 39: [44, 16, 38], 40: [1, 20, 27, 18], 41: [27, 42, 30, 57, 25, 37], 42: [29, 2, 1, 44, 41, 17], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8, 10], 46: [14, 5, 28], 47: [9, 44, 17, 38], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55, 5, 30], 52: [53, 29], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38], 57: [41, 24, 18, 34]}
iteration : 5 Graph	Undirected	{0: [18, 23, 17, 24], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26], 5: [36, 30, 46, 51], 6: [25, 53], 7: [11, 18, 24], 8: [45, 22], 9: [47, 32], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25], 13: [45, 31], 14: [34, 46, 30, 38, 32], 15: [33], 16: [30, 56, 12, 39, 54, 31], 17: [25, 54, 0, 47, 33, 42], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53], 20: [35, 50, 40], 21: [1, 33], 22: [8, 1, 48, 2], 23: [0, 55, 26, 27], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38, 40, 23], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51], 31: [29, 43, 13, 16], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47], 39: [44, 16, 38], 40: [1, 20, 27, 18], 41: [27, 42, 30, 57, 25, 37], 42: [29, 2, 1, 44, 41, 17], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2], 45: [12, 13, 8, 10], 46: [14, 5, 28], 47: [9, 44, 17, 38], 48: [38, 36, 22], 49: [10], 50: [20, 19], 51: [55, 5, 30], 52: [53, 29], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38], 57: [41, 24, 18, 34]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 112 	elapsed= 0.008986549000042032 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 112 	elapsed= 15.820562404999919 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 112 	elapsed AVG,DEV_STD= (0.005659255199975633, 0.005236142148218147) 	 randGraphIndex:  5 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 112 	elapsed AVG,DEV_STD= (2.135154462100002, 0.008188840390203478) 	 randGraphIndex:  5 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17, 24, 14], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26, 7], 5: [36, 30, 46, 51], 6: [25, 53, 30, 23], 7: [11, 18, 24, 4], 8: [45, 22, 20], 9: [47, 32], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25], 13: [45, 31], 14: [34, 46, 30, 38, 32, 0], 15: [33], 16: [30, 56, 12, 39, 54, 31], 17: [25, 54, 0, 47, 33, 42], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53, 47], 20: [35, 50, 40, 8], 21: [1, 33], 22: [8, 1, 48, 2, 41], 23: [0, 55, 26, 27, 6], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38, 40, 23, 44], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51, 6], 31: [29, 43, 13, 16], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47], 39: [44, 16, 38], 40: [1, 20, 27, 18], 41: [27, 42, 30, 57, 25, 37, 22], 42: [29, 2, 1, 44, 41, 17], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2, 27, 49], 45: [12, 13, 8, 10], 46: [14, 5, 28], 47: [9, 44, 17, 38, 19], 48: [38, 36, 22], 49: [10, 44], 50: [20, 19, 54], 51: [55, 5, 30], 52: [53, 29, 56], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29, 50], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38, 52], 57: [41, 24, 18, 34]}
iteration : 6 Graph	Undirected	{0: [18, 23, 17, 24, 14], 1: [21, 40, 22, 43, 42], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26, 7], 5: [36, 30, 46, 51], 6: [25, 53, 30, 23], 7: [11, 18, 24, 4], 8: [45, 22, 20], 9: [47, 32], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25], 13: [45, 31], 14: [34, 46, 30, 38, 32, 0], 15: [33], 16: [30, 56, 12, 39, 54, 31], 17: [25, 54, 0, 47, 33, 42], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53, 47], 20: [35, 50, 40, 8], 21: [1, 33], 22: [8, 1, 48, 2, 41], 23: [0, 55, 26, 27, 6], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38, 40, 23, 44], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51, 6], 31: [29, 43, 13, 16], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57], 35: [54, 20, 55], 36: [5, 48, 37], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47], 39: [44, 16, 38], 40: [1, 20, 27, 18], 41: [27, 42, 30, 57, 25, 37, 22], 42: [29, 2, 1, 44, 41, 17], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2, 27, 49], 45: [12, 13, 8, 10], 46: [14, 5, 28], 47: [9, 44, 17, 38, 19], 48: [38, 36, 22], 49: [10, 44], 50: [20, 19, 54], 51: [55, 5, 30], 52: [53, 29, 56], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29, 50], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38, 52], 57: [41, 24, 18, 34]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 123 	elapsed= 0.009577261000004 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 123 	elapsed= 17.131352788000072 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 123 	elapsed AVG,DEV_STD= (0.011832958899992719, 0.00856544234405084) 	 randGraphIndex:  6 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 123 	elapsed AVG,DEV_STD= (2.2026043002999813, 0.009895291614654803) 	 randGraphIndex:  6 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17, 24, 14], 1: [21, 40, 22, 43, 42, 38], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26, 7, 49], 5: [36, 30, 46, 51], 6: [25, 53, 30, 23], 7: [11, 18, 24, 4], 8: [45, 22, 20], 9: [47, 32], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25, 27], 13: [45, 31], 14: [34, 46, 30, 38, 32, 0, 40], 15: [33], 16: [30, 56, 12, 39, 54, 31, 36], 17: [25, 54, 0, 47, 33, 42], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53, 47, 34], 20: [35, 50, 40, 8], 21: [1, 33], 22: [8, 1, 48, 2, 41], 23: [0, 55, 26, 27, 6], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38, 40, 23, 44, 12], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51, 6, 39], 31: [29, 43, 13, 16, 50], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57, 38, 19], 35: [54, 20, 55], 36: [5, 48, 37, 16], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47, 1, 34], 39: [44, 16, 38, 30], 40: [1, 20, 27, 18, 14], 41: [27, 42, 30, 57, 25, 37, 22], 42: [29, 2, 1, 44, 41, 17, 56], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2, 27, 49], 45: [12, 13, 8, 10], 46: [14, 5, 28, 48], 47: [9, 44, 17, 38, 19], 48: [38, 36, 22, 46], 49: [10, 44, 4], 50: [20, 19, 54, 31], 51: [55, 5, 30], 52: [53, 29, 56], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29, 50], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38, 52, 42], 57: [41, 24, 18, 34]}
iteration : 7 Graph	Undirected	{0: [18, 23, 17, 24, 14], 1: [21, 40, 22, 43, 42, 38], 2: [37, 42, 22, 44, 32], 3: [34, 19], 4: [34, 33, 26, 7, 49], 5: [36, 30, 46, 51], 6: [25, 53, 30, 23], 7: [11, 18, 24, 4], 8: [45, 22, 20], 9: [47, 32], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25, 27], 13: [45, 31], 14: [34, 46, 30, 38, 32, 0, 40], 15: [33], 16: [30, 56, 12, 39, 54, 31, 36], 17: [25, 54, 0, 47, 33, 42], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53, 47, 34], 20: [35, 50, 40, 8], 21: [1, 33], 22: [8, 1, 48, 2, 41], 23: [0, 55, 26, 27, 6], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12], 26: [34, 23, 4], 27: [41, 38, 40, 23, 44, 12], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51, 6, 39], 31: [29, 43, 13, 16, 50], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57, 38, 19], 35: [54, 20, 55], 36: [5, 48, 37, 16], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47, 1, 34], 39: [44, 16, 38, 30], 40: [1, 20, 27, 18, 14], 41: [27, 42, 30, 57, 25, 37, 22], 42: [29, 2, 1, 44, 41, 17, 56], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2, 27, 49], 45: [12, 13, 8, 10], 46: [14, 5, 28, 48], 47: [9, 44, 17, 38, 19], 48: [38, 36, 22, 46], 49: [10, 44, 4], 50: [20, 19, 54, 31], 51: [55, 5, 30], 52: [53, 29, 56], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29, 50], 55: [23, 51, 44, 35, 43], 56: [10, 16, 38, 52, 42], 57: [41, 24, 18, 34]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 58 Edges= 134 	elapsed= 0.009874492999983886 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  1  graph: Nodes= 58 Edges= 134 	elapsed= 18.309199948000014 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 58 Edges= 134 	elapsed AVG,DEV_STD= (0.0059510564999641245, 0.0029356143688298226) 	 randGraphIndex:  7 	iteration to reach Optimal:  6
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 58 Edges= 134 	elapsed AVG,DEV_STD= (2.2748918647000096, 0.007094770493013872) 	 randGraphIndex:  7 	iterations:  1682 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [18, 23, 17, 24, 14], 1: [21, 40, 22, 43, 42, 38], 2: [37, 42, 22, 44, 32, 17], 3: [34, 19], 4: [34, 33, 26, 7, 49], 5: [36, 30, 46, 51, 17], 6: [25, 53, 30, 23], 7: [11, 18, 24, 4], 8: [45, 22, 20], 9: [47, 32, 26], 10: [49, 56, 32, 45], 11: [7, 29], 12: [45, 16, 25, 27, 47], 13: [45, 31], 14: [34, 46, 30, 38, 32, 0, 40], 15: [33], 16: [30, 56, 12, 39, 54, 31, 36], 17: [25, 54, 0, 47, 33, 42, 2, 5], 18: [7, 0, 57, 40], 19: [50, 30, 3, 32, 53, 47, 34], 20: [35, 50, 40, 8], 21: [1, 33], 22: [8, 1, 48, 2, 41], 23: [0, 55, 26, 27, 6, 40], 24: [33, 29, 0, 57, 7], 25: [6, 17, 41, 12, 34], 26: [34, 23, 4, 9, 47], 27: [41, 38, 40, 23, 44, 12], 28: [29, 46], 29: [28, 31, 24, 42, 11, 52, 54], 30: [16, 14, 19, 32, 41, 5, 51, 6, 39], 31: [29, 43, 13, 16, 50], 32: [10, 30, 14, 9, 2, 19], 33: [15, 24, 4, 17, 34, 21], 34: [3, 4, 26, 14, 33, 57, 38, 19, 52, 25], 35: [54, 20, 55], 36: [5, 48, 37, 16], 37: [36, 2, 41], 38: [48, 14, 27, 44, 39, 56, 47, 1, 34, 55], 39: [44, 16, 38, 30], 40: [1, 20, 27, 18, 14, 23], 41: [27, 42, 30, 57, 25, 37, 22], 42: [29, 2, 1, 44, 41, 17, 56], 43: [53, 1, 31, 55], 44: [39, 47, 55, 42, 38, 2, 27, 49], 45: [12, 13, 8, 10], 46: [14, 5, 28, 48], 47: [9, 44, 17, 38, 19, 26, 12], 48: [38, 36, 22, 46], 49: [10, 44, 4], 50: [20, 19, 54, 31, 51], 51: [55, 5, 30, 50], 52: [53, 29, 56, 34], 53: [52, 43, 6, 19], 54: [17, 35, 16, 29, 50, 55], 55: [23, 51, 44, 35, 43, 38, 54], 56: [10, 16, 38, 52, 42], 57: [41, 24, 18, 34]}
exploring min cut solver algoritm with a graph of 67 with variable num of edges


iteration : 0 Graph	Undirected	{0: [55, 28, 29], 1: [11, 19], 2: [39], 3: [14, 42], 4: [35, 59, 48, 42], 5: [13, 25, 36], 6: [8, 29], 7: [59], 8: [37, 6], 9: [15, 27], 10: [22, 27, 39], 11: [33, 36, 1], 12: [37], 13: [5], 14: [24, 3], 15: [21, 9], 16: [55], 17: [47, 46, 66], 18: [26], 19: [1, 58], 20: [58], 21: [15], 22: [10], 23: [45], 24: [57, 14], 25: [5], 26: [18, 29], 27: [9, 10], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46], 30: [54, 62, 28], 31: [48], 32: [33], 33: [32, 52, 11], 34: [44, 39], 35: [4], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39], 41: [37], 42: [61, 4, 3, 36], 43: [62], 44: [34], 45: [23, 64, 38], 46: [29, 17], 47: [17], 48: [31, 63, 4], 49: [63], 50: [36], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0], 56: [55], 57: [38, 65, 24], 58: [20, 19, 51], 59: [7, 4], 60: [28], 61: [42], 62: [43, 30], 63: [49, 48], 64: [45], 65: [57], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 66 	elapsed= 0.007036158999994768 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 66 	elapsed= 14.14423521599997 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 66 	elapsed AVG,DEV_STD= (0.0032042502999956924, 0.0017404786072778356) 	 randGraphIndex:  0 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 66 	elapsed AVG,DEV_STD= (2.906911355099987, 0.00855403748147418) 	 randGraphIndex:  0 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29], 1: [11, 19, 7], 2: [39], 3: [14, 42], 4: [35, 59, 48, 42, 18], 5: [13, 25, 36], 6: [8, 29], 7: [59, 18, 1], 8: [37, 6], 9: [15, 27], 10: [22, 27, 39], 11: [33, 36, 1], 12: [37], 13: [5], 14: [24, 3], 15: [21, 9, 30], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50], 20: [58], 21: [15], 22: [10], 23: [45], 24: [57, 14, 16], 25: [5], 26: [18, 29], 27: [9, 10], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46], 30: [54, 62, 28, 15], 31: [48], 32: [33], 33: [32, 52, 11], 34: [44, 39, 61], 35: [4], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39], 41: [37, 63, 44], 42: [61, 4, 3, 36], 43: [62], 44: [34, 41], 45: [23, 64, 38], 46: [29, 17, 56, 48], 47: [17], 48: [31, 63, 4, 46], 49: [63], 50: [36, 19], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0], 56: [55, 46], 57: [38, 65, 24], 58: [20, 19, 51], 59: [7, 4], 60: [28], 61: [42, 34], 62: [43, 30], 63: [49, 48, 41], 64: [45], 65: [57], 66: [17]}
iteration : 1 Graph	Undirected	{0: [55, 28, 29], 1: [11, 19, 7], 2: [39], 3: [14, 42], 4: [35, 59, 48, 42, 18], 5: [13, 25, 36], 6: [8, 29], 7: [59, 18, 1], 8: [37, 6], 9: [15, 27], 10: [22, 27, 39], 11: [33, 36, 1], 12: [37], 13: [5], 14: [24, 3], 15: [21, 9, 30], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50], 20: [58], 21: [15], 22: [10], 23: [45], 24: [57, 14, 16], 25: [5], 26: [18, 29], 27: [9, 10], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46], 30: [54, 62, 28, 15], 31: [48], 32: [33], 33: [32, 52, 11], 34: [44, 39, 61], 35: [4], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39], 41: [37, 63, 44], 42: [61, 4, 3, 36], 43: [62], 44: [34, 41], 45: [23, 64, 38], 46: [29, 17, 56, 48], 47: [17], 48: [31, 63, 4, 46], 49: [63], 50: [36, 19], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0], 56: [55, 46], 57: [38, 65, 24], 58: [20, 19, 51], 59: [7, 4], 60: [28], 61: [42, 34], 62: [43, 30], 63: [49, 48, 41], 64: [45], 65: [57], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 77 	elapsed= 0.008362940999973034 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 77 	elapsed= 16.046061025000085 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 77 	elapsed AVG,DEV_STD= (0.003989605699985077, 0.001737860342716404) 	 randGraphIndex:  1 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 77 	elapsed AVG,DEV_STD= (3.049721780999994, 0.0093066130150308) 	 randGraphIndex:  1 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55], 4: [35, 59, 48, 42, 18], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1], 8: [37, 6], 9: [15, 27, 57], 10: [22, 27, 39, 57], 11: [33, 36, 1], 12: [37], 13: [5, 44], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50], 20: [58], 21: [15], 22: [10, 15], 23: [45], 24: [57, 14, 16, 46], 25: [5], 26: [18, 29], 27: [9, 10, 55], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46], 30: [54, 62, 28, 15], 31: [48], 32: [33], 33: [32, 52, 11], 34: [44, 39, 61], 35: [4], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39, 5], 41: [37, 63, 44], 42: [61, 4, 3, 36], 43: [62], 44: [34, 41, 13], 45: [23, 64, 38], 46: [29, 17, 56, 48, 24], 47: [17], 48: [31, 63, 4, 46], 49: [63], 50: [36, 19], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9], 58: [20, 19, 51], 59: [7, 4], 60: [28, 5, 61], 61: [42, 34, 60], 62: [43, 30], 63: [49, 48, 41], 64: [45], 65: [57], 66: [17]}
iteration : 2 Graph	Undirected	{0: [55, 28, 29], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55], 4: [35, 59, 48, 42, 18], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1], 8: [37, 6], 9: [15, 27, 57], 10: [22, 27, 39, 57], 11: [33, 36, 1], 12: [37], 13: [5, 44], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50], 20: [58], 21: [15], 22: [10, 15], 23: [45], 24: [57, 14, 16, 46], 25: [5], 26: [18, 29], 27: [9, 10, 55], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46], 30: [54, 62, 28, 15], 31: [48], 32: [33], 33: [32, 52, 11], 34: [44, 39, 61], 35: [4], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39, 5], 41: [37, 63, 44], 42: [61, 4, 3, 36], 43: [62], 44: [34, 41, 13], 45: [23, 64, 38], 46: [29, 17, 56, 48, 24], 47: [17], 48: [31, 63, 4, 46], 49: [63], 50: [36, 19], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9], 58: [20, 19, 51], 59: [7, 4], 60: [28, 5, 61], 61: [42, 34, 60], 62: [43, 30], 63: [49, 48, 41], 64: [45], 65: [57], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 88 	elapsed= 0.008901638999986972 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 88 	elapsed= 17.71457472399993 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 88 	elapsed AVG,DEV_STD= (0.0028474398999833285, 0.0014677592626796217) 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 88 	elapsed AVG,DEV_STD= (3.1828795104999927, 0.005774912739013303) 	 randGraphIndex:  2 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29, 43], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55, 40], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1], 8: [37, 6], 9: [15, 27, 57], 10: [22, 27, 39, 57], 11: [33, 36, 1], 12: [37, 13, 64], 13: [5, 44, 12], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50, 34], 20: [58, 47], 21: [15], 22: [10, 15], 23: [45], 24: [57, 14, 16, 46], 25: [5, 60], 26: [18, 29], 27: [9, 10, 55], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46, 33], 30: [54, 62, 28, 15], 31: [48], 32: [33], 33: [32, 52, 11, 29], 34: [44, 39, 61, 19], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44], 42: [61, 4, 3, 36], 43: [62, 0], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45], 47: [17, 20], 48: [31, 63, 4, 46], 49: [63], 50: [36, 19], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35], 58: [20, 19, 51], 59: [7, 4], 60: [28, 5, 61, 25], 61: [42, 34, 60], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57], 66: [17]}
iteration : 3 Graph	Undirected	{0: [55, 28, 29, 43], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55, 40], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1], 8: [37, 6], 9: [15, 27, 57], 10: [22, 27, 39, 57], 11: [33, 36, 1], 12: [37, 13, 64], 13: [5, 44, 12], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50, 34], 20: [58, 47], 21: [15], 22: [10, 15], 23: [45], 24: [57, 14, 16, 46], 25: [5, 60], 26: [18, 29], 27: [9, 10, 55], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46, 33], 30: [54, 62, 28, 15], 31: [48], 32: [33], 33: [32, 52, 11, 29], 34: [44, 39, 61, 19], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44], 42: [61, 4, 3, 36], 43: [62, 0], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45], 47: [17, 20], 48: [31, 63, 4, 46], 49: [63], 50: [36, 19], 51: [58, 29], 52: [33], 53: [36], 54: [39, 30], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35], 58: [20, 19, 51], 59: [7, 4], 60: [28, 5, 61, 25], 61: [42, 34, 60], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 99 	elapsed= 0.009837566999976843 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 99 	elapsed= 19.456305318999966 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 99 	elapsed AVG,DEV_STD= (0.0031553819000009753, 0.0018024546691523015) 	 randGraphIndex:  3 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 99 	elapsed AVG,DEV_STD= (3.3081330934000333, 0.01040033682762277) 	 randGraphIndex:  3 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29, 43], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55, 40, 48], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41], 8: [37, 6], 9: [15, 27, 57], 10: [22, 27, 39, 57], 11: [33, 36, 1], 12: [37, 13, 64], 13: [5, 44, 12], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50, 34], 20: [58, 47], 21: [15], 22: [10, 15, 27], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15], 31: [48], 32: [33, 48], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44, 7], 42: [61, 4, 3, 36], 43: [62, 0], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32], 49: [63, 61], 50: [36, 19], 51: [58, 29, 33], 52: [33], 53: [36, 57], 54: [39, 30, 27], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53], 58: [20, 19, 51], 59: [7, 4, 24], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57], 66: [17]}
iteration : 4 Graph	Undirected	{0: [55, 28, 29, 43], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55, 40, 48], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41], 8: [37, 6], 9: [15, 27, 57], 10: [22, 27, 39, 57], 11: [33, 36, 1], 12: [37, 13, 64], 13: [5, 44, 12], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4], 19: [1, 58, 50, 34], 20: [58, 47], 21: [15], 22: [10, 15, 27], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15], 31: [48], 32: [33, 48], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44, 7], 42: [61, 4, 3, 36], 43: [62, 0], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32], 49: [63, 61], 50: [36, 19], 51: [58, 29, 33], 52: [33], 53: [36, 57], 54: [39, 30, 27], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53], 58: [20, 19, 51], 59: [7, 4, 24], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 110 	elapsed= 0.011036349000050905 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 110 	elapsed= 21.371697937000135 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 110 	elapsed AVG,DEV_STD= (0.00471985709996261, 0.002177329483873607) 	 randGraphIndex:  4 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 110 	elapsed AVG,DEV_STD= (3.415987675499946, 0.007419744190631051) 	 randGraphIndex:  4 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29, 43], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55, 40, 48], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34], 8: [37, 6, 12], 9: [15, 27, 57], 10: [22, 27, 39, 57, 28], 11: [33, 36, 1], 12: [37, 13, 64, 8], 13: [5, 44, 12], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41], 21: [15], 22: [10, 15, 27, 38], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44, 7, 20], 42: [61, 4, 3, 36], 43: [62, 0], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32, 30], 49: [63, 61], 50: [36, 19], 51: [58, 29, 33, 46], 52: [33], 53: [36, 57], 54: [39, 30, 27, 18], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53, 19], 58: [20, 19, 51], 59: [7, 4, 24, 30], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57, 34], 66: [17]}
iteration : 5 Graph	Undirected	{0: [55, 28, 29, 43], 1: [11, 19, 7, 5], 2: [39], 3: [14, 42, 55, 40, 48], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34], 8: [37, 6, 12], 9: [15, 27, 57], 10: [22, 27, 39, 57, 28], 11: [33, 36, 1], 12: [37, 13, 64, 8], 13: [5, 44, 12], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41], 21: [15], 22: [10, 15, 27, 38], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44, 7, 20], 42: [61, 4, 3, 36], 43: [62, 0], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32, 30], 49: [63, 61], 50: [36, 19], 51: [58, 29, 33, 46], 52: [33], 53: [36, 57], 54: [39, 30, 27, 18], 55: [16, 56, 0, 3, 27], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53, 19], 58: [20, 19, 51], 59: [7, 4, 24, 30], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57, 34], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 121 	elapsed= 0.01130016699994485 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 121 	elapsed= 22.92703421400006 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 121 	elapsed AVG,DEV_STD= (0.0029475951999756943, 0.0019369320477377896) 	 randGraphIndex:  5 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 121 	elapsed AVG,DEV_STD= (3.521433412100032, 0.008787167931673242) 	 randGraphIndex:  5 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29, 43, 57], 1: [11, 19, 7, 5], 2: [39, 59], 3: [14, 42, 55, 40, 48], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34, 43], 8: [37, 6, 12], 9: [15, 27, 57, 53], 10: [22, 27, 39, 57, 28], 11: [33, 36, 1, 13], 12: [37, 13, 64, 8, 52], 13: [5, 44, 12, 11], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41, 21], 21: [15, 20], 22: [10, 15, 27, 38, 49, 25], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7, 22], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8, 55], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44, 7, 20], 42: [61, 4, 3, 36], 43: [62, 0, 7], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32, 30], 49: [63, 61, 22], 50: [36, 19], 51: [58, 29, 33, 46], 52: [33, 12], 53: [36, 57, 9], 54: [39, 30, 27, 18, 55], 55: [16, 56, 0, 3, 27, 37, 54], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53, 19, 0], 58: [20, 19, 51], 59: [7, 4, 24, 30, 2], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57, 34], 66: [17]}
iteration : 6 Graph	Undirected	{0: [55, 28, 29, 43, 57], 1: [11, 19, 7, 5], 2: [39, 59], 3: [14, 42, 55, 40, 48], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34, 43], 8: [37, 6, 12], 9: [15, 27, 57, 53], 10: [22, 27, 39, 57, 28], 11: [33, 36, 1, 13], 12: [37, 13, 64, 8, 52], 13: [5, 44, 12, 11], 14: [24, 3], 15: [21, 9, 30, 22], 16: [55, 24], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41, 21], 21: [15, 20], 22: [10, 15, 27, 38, 49, 25], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7, 22], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8, 55], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3], 41: [37, 63, 44, 7, 20], 42: [61, 4, 3, 36], 43: [62, 0, 7], 44: [34, 41, 13], 45: [23, 64, 38, 46], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32, 30], 49: [63, 61, 22], 50: [36, 19], 51: [58, 29, 33, 46], 52: [33, 12], 53: [36, 57, 9], 54: [39, 30, 27, 18, 55], 55: [16, 56, 0, 3, 27, 37, 54], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53, 19, 0], 58: [20, 19, 51], 59: [7, 4, 24, 30, 2], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41], 64: [45, 12], 65: [57, 34], 66: [17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 132 	elapsed= 0.011934883999856538 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 132 	elapsed= 24.703446799999938 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 132 	elapsed AVG,DEV_STD= (0.0034819636000065655, 0.002185643443271248) 	 randGraphIndex:  6 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 132 	elapsed AVG,DEV_STD= (3.618780261399979, 0.007421985417079214) 	 randGraphIndex:  6 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29, 43, 57, 52], 1: [11, 19, 7, 5], 2: [39, 59, 32], 3: [14, 42, 55, 40, 48, 13], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34, 43], 8: [37, 6, 12], 9: [15, 27, 57, 53], 10: [22, 27, 39, 57, 28], 11: [33, 36, 1, 13, 66], 12: [37, 13, 64, 8, 52, 14, 45], 13: [5, 44, 12, 11, 3], 14: [24, 3, 12], 15: [21, 9, 30, 22], 16: [55, 24, 41], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41, 21], 21: [15, 20], 22: [10, 15, 27, 38, 49, 25], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7, 22], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48, 2], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57, 49], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8, 55], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3, 64], 41: [37, 63, 44, 7, 20, 16], 42: [61, 4, 3, 36], 43: [62, 0, 7], 44: [34, 41, 13], 45: [23, 64, 38, 46, 12], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32, 30], 49: [63, 61, 22, 35], 50: [36, 19, 63], 51: [58, 29, 33, 46], 52: [33, 12, 0, 66], 53: [36, 57, 9], 54: [39, 30, 27, 18, 55], 55: [16, 56, 0, 3, 27, 37, 54], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53, 19, 0], 58: [20, 19, 51], 59: [7, 4, 24, 30, 2], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41, 50], 64: [45, 12, 40], 65: [57, 34], 66: [17, 52, 11]}
iteration : 7 Graph	Undirected	{0: [55, 28, 29, 43, 57, 52], 1: [11, 19, 7, 5], 2: [39, 59, 32], 3: [14, 42, 55, 40, 48, 13], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34, 43], 8: [37, 6, 12], 9: [15, 27, 57, 53], 10: [22, 27, 39, 57, 28], 11: [33, 36, 1, 13, 66], 12: [37, 13, 64, 8, 52, 14, 45], 13: [5, 44, 12, 11, 3], 14: [24, 3, 12], 15: [21, 9, 30, 22], 16: [55, 24, 41], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41, 21], 21: [15, 20], 22: [10, 15, 27, 38, 49, 25], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7, 22], 26: [18, 29], 27: [9, 10, 55, 54, 22], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48, 2], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57, 49], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8, 55], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3, 64], 41: [37, 63, 44, 7, 20, 16], 42: [61, 4, 3, 36], 43: [62, 0, 7], 44: [34, 41, 13], 45: [23, 64, 38, 46, 12], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20], 48: [31, 63, 4, 46, 3, 32, 30], 49: [63, 61, 22, 35], 50: [36, 19, 63], 51: [58, 29, 33, 46], 52: [33, 12, 0, 66], 53: [36, 57, 9], 54: [39, 30, 27, 18, 55], 55: [16, 56, 0, 3, 27, 37, 54], 56: [55, 46], 57: [38, 65, 24, 10, 9, 35, 53, 19, 0], 58: [20, 19, 51], 59: [7, 4, 24, 30, 2], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49], 62: [43, 30, 4], 63: [49, 48, 41, 50], 64: [45, 12, 40], 65: [57, 34], 66: [17, 52, 11]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 67 Edges= 143 	elapsed= 0.012929135999911523 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  1  graph: Nodes= 67 Edges= 143 	elapsed= 26.50421729200002 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 67 Edges= 143 	elapsed AVG,DEV_STD= (0.004980919800004813, 0.0030093609316007345) 	 randGraphIndex:  7 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 67 Edges= 143 	elapsed AVG,DEV_STD= (3.7209333372999938, 0.010595540055931793) 	 randGraphIndex:  7 	iterations:  2244 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [55, 28, 29, 43, 57, 52], 1: [11, 19, 7, 5, 35], 2: [39, 59, 32, 7, 45], 3: [14, 42, 55, 40, 48, 13], 4: [35, 59, 48, 42, 18, 62], 5: [13, 25, 36, 1, 40, 60], 6: [8, 29], 7: [59, 18, 1, 25, 41, 34, 43, 2], 8: [37, 6, 12], 9: [15, 27, 57, 53, 43], 10: [22, 27, 39, 57, 28, 41], 11: [33, 36, 1, 13, 66], 12: [37, 13, 64, 8, 52, 14, 45], 13: [5, 44, 12, 11, 3], 14: [24, 3, 12], 15: [21, 9, 30, 22], 16: [55, 24, 41, 48], 17: [47, 46, 66], 18: [26, 7, 4, 54], 19: [1, 58, 50, 34, 57], 20: [58, 47, 41, 21, 64], 21: [15, 20], 22: [10, 15, 27, 38, 49, 25], 23: [45], 24: [57, 14, 16, 46, 59], 25: [5, 60, 7, 22], 26: [18, 29], 27: [9, 10, 55, 54, 22, 65], 28: [60, 30, 0, 10], 29: [26, 6, 0, 51, 46, 33, 61], 30: [54, 62, 28, 15, 59, 48], 31: [48], 32: [33, 48, 2], 33: [32, 52, 11, 29, 51], 34: [44, 39, 61, 19, 7, 65], 35: [4, 57, 49, 1], 36: [5, 50, 53, 42, 11], 37: [12, 41, 8, 55], 38: [45, 57, 22], 39: [2, 10, 40, 34, 54], 40: [39, 5, 3, 64], 41: [37, 63, 44, 7, 20, 16, 10], 42: [61, 4, 3, 36], 43: [62, 0, 7, 9], 44: [34, 41, 13], 45: [23, 64, 38, 46, 12, 2], 46: [29, 17, 56, 48, 24, 45, 51], 47: [17, 20, 49], 48: [31, 63, 4, 46, 3, 32, 30, 16], 49: [63, 61, 22, 35, 47], 50: [36, 19, 63], 51: [58, 29, 33, 46], 52: [33, 12, 0, 66], 53: [36, 57, 9], 54: [39, 30, 27, 18, 55], 55: [16, 56, 0, 3, 27, 37, 54], 56: [55, 46, 64], 57: [38, 65, 24, 10, 9, 35, 53, 19, 0], 58: [20, 19, 51], 59: [7, 4, 24, 30, 2], 60: [28, 5, 61, 25], 61: [42, 34, 60, 29, 49, 66], 62: [43, 30, 4], 63: [49, 48, 41, 50], 64: [45, 12, 40, 56, 20], 65: [57, 34, 27], 66: [17, 52, 11, 61]}
exploring min cut solver algoritm with a graph of 76 with variable num of edges


iteration : 0 Graph	Undirected	{0: [67], 1: [8], 2: [33, 4, 50], 3: [61, 39], 4: [72, 2], 5: [55], 6: [9, 64, 58], 7: [71, 31], 8: [1, 13], 9: [56, 6], 10: [59], 11: [62], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45], 17: [19, 37], 18: [50], 19: [57, 35, 17], 20: [34], 21: [72], 22: [52], 23: [70], 24: [26, 53], 25: [13], 26: [24], 27: [36], 28: [39], 29: [70, 43], 30: [14, 12], 31: [7, 73], 32: [44, 55], 33: [2], 34: [20, 60], 35: [63, 19], 36: [27, 37, 14], 37: [17, 36], 38: [41, 56], 39: [28, 3, 60, 42], 40: [63], 41: [38], 42: [39, 69], 43: [67, 29, 54], 44: [32], 45: [16, 72], 46: [69, 66], 47: [60], 48: [60], 49: [16], 50: [18, 2, 12], 51: [73, 12], 52: [22, 14], 53: [24, 55], 54: [62, 43, 63], 55: [5, 32, 53, 12], 56: [38, 9], 57: [19], 58: [6, 59], 59: [10, 58, 15], 60: [34, 47, 48, 15, 39], 61: [3], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16], 67: [0, 43], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4], 73: [31, 51], 74: [72], 75: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 75 	elapsed= 0.00843712100004268 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 75 	elapsed= 20.589854594999906 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 75 	elapsed AVG,DEV_STD= (0.003929786600019724, 0.0019837621872041467) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 75 	elapsed AVG,DEV_STD= (4.596059448400001, 0.010439234151106364) 	 randGraphIndex:  0 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67], 1: [8], 2: [33, 4, 50, 39], 3: [61, 39, 11], 4: [72, 2], 5: [55, 67], 6: [9, 64, 58, 48], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34], 10: [59, 8, 47, 42], 11: [62, 3], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45], 17: [19, 37], 18: [50, 23], 19: [57, 35, 17], 20: [34], 21: [72], 22: [52], 23: [70, 18], 24: [26, 53], 25: [13], 26: [24], 27: [36], 28: [39], 29: [70, 43], 30: [14, 12], 31: [7, 73], 32: [44, 55], 33: [2], 34: [20, 60, 9], 35: [63, 19], 36: [27, 37, 14, 38], 37: [17, 36], 38: [41, 56, 36], 39: [28, 3, 60, 42, 2], 40: [63], 41: [38], 42: [39, 69, 10], 43: [67, 29, 54], 44: [32], 45: [16, 72], 46: [69, 66], 47: [60, 10], 48: [60, 6], 49: [16], 50: [18, 2, 12], 51: [73, 12], 52: [22, 14], 53: [24, 55], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9], 57: [19], 58: [6, 59], 59: [10, 58, 15], 60: [34, 47, 48, 15, 39], 61: [3], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16], 67: [0, 43, 5], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4], 73: [31, 51], 74: [72], 75: [12]}
iteration : 1 Graph	Undirected	{0: [67], 1: [8], 2: [33, 4, 50, 39], 3: [61, 39, 11], 4: [72, 2], 5: [55, 67], 6: [9, 64, 58, 48], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34], 10: [59, 8, 47, 42], 11: [62, 3], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45], 17: [19, 37], 18: [50, 23], 19: [57, 35, 17], 20: [34], 21: [72], 22: [52], 23: [70, 18], 24: [26, 53], 25: [13], 26: [24], 27: [36], 28: [39], 29: [70, 43], 30: [14, 12], 31: [7, 73], 32: [44, 55], 33: [2], 34: [20, 60, 9], 35: [63, 19], 36: [27, 37, 14, 38], 37: [17, 36], 38: [41, 56, 36], 39: [28, 3, 60, 42, 2], 40: [63], 41: [38], 42: [39, 69, 10], 43: [67, 29, 54], 44: [32], 45: [16, 72], 46: [69, 66], 47: [60, 10], 48: [60, 6], 49: [16], 50: [18, 2, 12], 51: [73, 12], 52: [22, 14], 53: [24, 55], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9], 57: [19], 58: [6, 59], 59: [10, 58, 15], 60: [34, 47, 48, 15, 39], 61: [3], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16], 67: [0, 43, 5], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4], 73: [31, 51], 74: [72], 75: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 86 	elapsed= 0.009673671999962608 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 86 	elapsed= 22.798035226000138 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 86 	elapsed AVG,DEV_STD= (0.0034784266999849933, 0.0018779498579130228) 	 randGraphIndex:  1 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 86 	elapsed AVG,DEV_STD= (4.806242561499971, 0.012637987001529878) 	 randGraphIndex:  1 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39], 3: [61, 39, 11], 4: [72, 2], 5: [55, 67], 6: [9, 64, 58, 48], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34], 10: [59, 8, 47, 42], 11: [62, 3, 61], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66], 19: [57, 35, 17], 20: [34], 21: [72, 57], 22: [52, 50], 23: [70, 18], 24: [26, 53], 25: [13], 26: [24, 27], 27: [36, 26], 28: [39], 29: [70, 43], 30: [14, 12], 31: [7, 73, 36], 32: [44, 55, 72], 33: [2], 34: [20, 60, 9], 35: [63, 19], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2], 40: [63], 41: [38], 42: [39, 69, 10], 43: [67, 29, 54], 44: [32, 0, 57], 45: [16, 72], 46: [69, 66], 47: [60, 10], 48: [60, 6], 49: [16], 50: [18, 2, 12, 22], 51: [73, 12], 52: [22, 14], 53: [24, 55], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15], 60: [34, 47, 48, 15, 39], 61: [3, 11], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16, 18], 67: [0, 43, 5], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32], 73: [31, 51], 74: [72, 37], 75: [12]}
iteration : 2 Graph	Undirected	{0: [67, 44], 1: [8], 2: [33, 4, 50, 39], 3: [61, 39, 11], 4: [72, 2], 5: [55, 67], 6: [9, 64, 58, 48], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34], 10: [59, 8, 47, 42], 11: [62, 3, 61], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66], 19: [57, 35, 17], 20: [34], 21: [72, 57], 22: [52, 50], 23: [70, 18], 24: [26, 53], 25: [13], 26: [24, 27], 27: [36, 26], 28: [39], 29: [70, 43], 30: [14, 12], 31: [7, 73, 36], 32: [44, 55, 72], 33: [2], 34: [20, 60, 9], 35: [63, 19], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2], 40: [63], 41: [38], 42: [39, 69, 10], 43: [67, 29, 54], 44: [32, 0, 57], 45: [16, 72], 46: [69, 66], 47: [60, 10], 48: [60, 6], 49: [16], 50: [18, 2, 12, 22], 51: [73, 12], 52: [22, 14], 53: [24, 55], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15], 60: [34, 47, 48, 15, 39], 61: [3, 11], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16, 18], 67: [0, 43, 5], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32], 73: [31, 51], 74: [72, 37], 75: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 97 	elapsed= 0.011615679999977147 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 97 	elapsed= 25.305570157000147 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 97 	elapsed AVG,DEV_STD= (0.0030601868999383442, 0.0016245316616949827) 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 97 	elapsed AVG,DEV_STD= (4.987297370600049, 0.00994124068963885) 	 randGraphIndex:  2 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39], 3: [61, 39, 11], 4: [72, 2], 5: [55, 67, 30], 6: [9, 64, 58, 48], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34], 10: [59, 8, 47, 42, 73], 11: [62, 3, 61], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72, 53], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66], 19: [57, 35, 17], 20: [34], 21: [72, 57], 22: [52, 50], 23: [70, 18], 24: [26, 53], 25: [13], 26: [24, 27], 27: [36, 26], 28: [39], 29: [70, 43], 30: [14, 12, 5], 31: [7, 73, 36], 32: [44, 55, 72], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2], 40: [63], 41: [38, 43], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41], 44: [32, 0, 57], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42], 48: [60, 6, 72], 49: [16], 50: [18, 2, 12, 22], 51: [73, 12, 59], 52: [22, 14], 53: [24, 55, 13], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15, 51], 60: [34, 47, 48, 15, 39, 37], 61: [3, 11, 56], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16, 18], 67: [0, 43, 5], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32, 48], 73: [31, 51, 10], 74: [72, 37], 75: [12, 42]}
iteration : 3 Graph	Undirected	{0: [67, 44], 1: [8], 2: [33, 4, 50, 39], 3: [61, 39, 11], 4: [72, 2], 5: [55, 67, 30], 6: [9, 64, 58, 48], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34], 10: [59, 8, 47, 42, 73], 11: [62, 3, 61], 12: [55, 65, 30, 51, 50, 75], 13: [8, 25, 72, 53], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66], 19: [57, 35, 17], 20: [34], 21: [72, 57], 22: [52, 50], 23: [70, 18], 24: [26, 53], 25: [13], 26: [24, 27], 27: [36, 26], 28: [39], 29: [70, 43], 30: [14, 12, 5], 31: [7, 73, 36], 32: [44, 55, 72], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2], 40: [63], 41: [38, 43], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41], 44: [32, 0, 57], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42], 48: [60, 6, 72], 49: [16], 50: [18, 2, 12, 22], 51: [73, 12, 59], 52: [22, 14], 53: [24, 55, 13], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15, 51], 60: [34, 47, 48, 15, 39, 37], 61: [3, 11, 56], 62: [11, 54], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16, 18], 67: [0, 43, 5], 68: [15], 69: [42, 46], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32, 48], 73: [31, 51, 10], 74: [72, 37], 75: [12, 42]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 108 	elapsed= 0.012101141000130156 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 108 	elapsed= 27.508823854999946 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 108 	elapsed AVG,DEV_STD= (0.004583818400010387, 0.0033722513406608755) 	 randGraphIndex:  3 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 108 	elapsed AVG,DEV_STD= (5.165086346399994, 0.010371193373897388) 	 randGraphIndex:  3 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49], 13: [8, 25, 72, 53], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66], 19: [57, 35, 17], 20: [34], 21: [72, 57], 22: [52, 50], 23: [70, 18, 72], 24: [26, 53], 25: [13], 26: [24, 27], 27: [36, 26], 28: [39, 43], 29: [70, 43, 68], 30: [14, 12, 5], 31: [7, 73, 36, 39], 32: [44, 55, 72], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41, 28], 44: [32, 0, 57], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59], 52: [22, 14], 53: [24, 55, 13, 35], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15, 51], 60: [34, 47, 48, 15, 39, 37], 61: [3, 11, 56], 62: [11, 54, 69], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16, 18, 6], 67: [0, 43, 5], 68: [15, 9, 29], 69: [42, 46, 62], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32, 48, 23], 73: [31, 51, 10], 74: [72, 37], 75: [12, 42]}
iteration : 4 Graph	Undirected	{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55], 8: [1, 13, 10], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49], 13: [8, 25, 72, 53], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66], 19: [57, 35, 17], 20: [34], 21: [72, 57], 22: [52, 50], 23: [70, 18, 72], 24: [26, 53], 25: [13], 26: [24, 27], 27: [36, 26], 28: [39, 43], 29: [70, 43, 68], 30: [14, 12, 5], 31: [7, 73, 36, 39], 32: [44, 55, 72], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41, 28], 44: [32, 0, 57], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59], 52: [22, 14], 53: [24, 55, 13, 35], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15, 51], 60: [34, 47, 48, 15, 39, 37], 61: [3, 11, 56], 62: [11, 54, 69], 63: [40, 54, 35], 64: [6], 65: [12], 66: [46, 16, 18, 6], 67: [0, 43, 5], 68: [15, 9, 29], 69: [42, 46, 62], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32, 48, 23], 73: [31, 51, 10], 74: [72, 37], 75: [12, 42]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 119 	elapsed= 0.013376146999917182 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 119 	elapsed= 29.764952354999878 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 119 	elapsed AVG,DEV_STD= (0.00568416850005633, 0.00462085290567173) 	 randGraphIndex:  4 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 119 	elapsed AVG,DEV_STD= (5.354420767900047, 0.013121526238279701) 	 randGraphIndex:  4 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29], 8: [1, 13, 10, 63], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49], 13: [8, 25, 72, 53], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66, 56, 24], 19: [57, 35, 17], 20: [34, 25], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72], 24: [26, 53, 18], 25: [13, 20], 26: [24, 27], 27: [36, 26], 28: [39, 43], 29: [70, 43, 68, 7], 30: [14, 12, 5], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41, 28, 59], 44: [32, 0, 57, 5], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59, 56], 52: [22, 14], 53: [24, 55, 13, 35], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61, 18, 51], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37], 61: [3, 11, 56], 62: [11, 54, 69, 32], 63: [40, 54, 35, 8], 64: [6], 65: [12], 66: [46, 16, 18, 6], 67: [0, 43, 5], 68: [15, 9, 29], 69: [42, 46, 62], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10], 74: [72, 37], 75: [12, 42]}
iteration : 5 Graph	Undirected	{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29], 8: [1, 13, 10, 63], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49], 13: [8, 25, 72, 53], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37], 18: [50, 23, 66, 56, 24], 19: [57, 35, 17], 20: [34, 25], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72], 24: [26, 53, 18], 25: [13, 20], 26: [24, 27], 27: [36, 26], 28: [39, 43], 29: [70, 43, 68, 7], 30: [14, 12, 5], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53], 36: [27, 37, 14, 38, 31], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41, 28, 59], 44: [32, 0, 57, 5], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59, 56], 52: [22, 14], 53: [24, 55, 13, 35], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61, 18, 51], 57: [19, 21, 44], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37], 61: [3, 11, 56], 62: [11, 54, 69, 32], 63: [40, 54, 35, 8], 64: [6], 65: [12], 66: [46, 16, 18, 6], 67: [0, 43, 5], 68: [15, 9, 29], 69: [42, 46, 62], 70: [23, 29], 71: [7], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10], 74: [72, 37], 75: [12, 42]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 130 	elapsed= 0.013740113000039855 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 130 	elapsed= 31.897784552000076 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 130 	elapsed AVG,DEV_STD= (0.004671778299939433, 0.003221506917776264) 	 randGraphIndex:  5 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 130 	elapsed AVG,DEV_STD= (5.533438304499986, 0.01287475698644329) 	 randGraphIndex:  5 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29], 8: [1, 13, 10, 63], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49, 60], 13: [8, 25, 72, 53, 17], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37, 73, 13], 18: [50, 23, 66, 56, 24], 19: [57, 35, 17], 20: [34, 25, 68, 30], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72], 24: [26, 53, 18], 25: [13, 20], 26: [24, 27], 27: [36, 26], 28: [39, 43], 29: [70, 43, 68, 7, 63], 30: [14, 12, 5, 20], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53], 36: [27, 37, 14, 38, 31, 62, 47], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41, 28, 59], 44: [32, 0, 57, 5], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42, 36, 63], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59, 56], 52: [22, 14, 57], 53: [24, 55, 13, 35], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61, 18, 51], 57: [19, 21, 44, 52], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37, 12], 61: [3, 11, 56], 62: [11, 54, 69, 32, 36], 63: [40, 54, 35, 8, 29, 47], 64: [6], 65: [12, 71], 66: [46, 16, 18, 6], 67: [0, 43, 5], 68: [15, 9, 29, 20], 69: [42, 46, 62], 70: [23, 29], 71: [7, 65], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10, 17], 74: [72, 37], 75: [12, 42]}
iteration : 6 Graph	Undirected	{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29], 8: [1, 13, 10, 63], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49, 60], 13: [8, 25, 72, 53, 17], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37, 73, 13], 18: [50, 23, 66, 56, 24], 19: [57, 35, 17], 20: [34, 25, 68, 30], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72], 24: [26, 53, 18], 25: [13, 20], 26: [24, 27], 27: [36, 26], 28: [39, 43], 29: [70, 43, 68, 7, 63], 30: [14, 12, 5, 20], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53], 36: [27, 37, 14, 38, 31, 62, 47], 37: [17, 36, 74, 60], 38: [41, 56, 36, 16], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4], 42: [39, 69, 10, 75, 47], 43: [67, 29, 54, 33, 41, 28, 59], 44: [32, 0, 57, 5], 45: [16, 72], 46: [69, 66], 47: [60, 10, 42, 36, 63], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59, 56], 52: [22, 14, 57], 53: [24, 55, 13, 35], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61, 18, 51], 57: [19, 21, 44, 52], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37, 12], 61: [3, 11, 56], 62: [11, 54, 69, 32, 36], 63: [40, 54, 35, 8, 29, 47], 64: [6], 65: [12, 71], 66: [46, 16, 18, 6], 67: [0, 43, 5], 68: [15, 9, 29, 20], 69: [42, 46, 62], 70: [23, 29], 71: [7, 65], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10, 17], 74: [72, 37], 75: [12, 42]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 141 	elapsed= 0.014627423999854727 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 141 	elapsed= 34.17728762899992 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 141 	elapsed AVG,DEV_STD= (0.008064484200031075, 0.009601056374683486) 	 randGraphIndex:  6 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 141 	elapsed AVG,DEV_STD= (5.68299471170003, 0.008994062652742277) 	 randGraphIndex:  6 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29], 8: [1, 13, 10, 63, 68], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49, 60], 13: [8, 25, 72, 53, 17, 37], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37, 73, 13], 18: [50, 23, 66, 56, 24, 28, 43], 19: [57, 35, 17, 42], 20: [34, 25, 68, 30], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72, 53], 24: [26, 53, 18], 25: [13, 20, 35], 26: [24, 27, 38], 27: [36, 26], 28: [39, 43, 18], 29: [70, 43, 68, 7, 63], 30: [14, 12, 5, 20], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53, 25], 36: [27, 37, 14, 38, 31, 62, 47], 37: [17, 36, 74, 60, 13], 38: [41, 56, 36, 16, 26], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4, 45], 42: [39, 69, 10, 75, 47, 19], 43: [67, 29, 54, 33, 41, 28, 59, 18], 44: [32, 0, 57, 5], 45: [16, 72, 41], 46: [69, 66], 47: [60, 10, 42, 36, 63], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59, 56], 52: [22, 14, 57, 66], 53: [24, 55, 13, 35, 23], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61, 18, 51], 57: [19, 21, 44, 52], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37, 12], 61: [3, 11, 56], 62: [11, 54, 69, 32, 36], 63: [40, 54, 35, 8, 29, 47], 64: [6], 65: [12, 71], 66: [46, 16, 18, 6, 52], 67: [0, 43, 5, 68], 68: [15, 9, 29, 20, 67, 8], 69: [42, 46, 62], 70: [23, 29], 71: [7, 65], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10, 17], 74: [72, 37], 75: [12, 42]}
iteration : 7 Graph	Undirected	{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29], 8: [1, 13, 10, 63, 68], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49, 60], 13: [8, 25, 72, 53, 17, 37], 14: [52, 36, 30], 15: [59, 68, 60], 16: [49, 66, 45, 38], 17: [19, 37, 73, 13], 18: [50, 23, 66, 56, 24, 28, 43], 19: [57, 35, 17, 42], 20: [34, 25, 68, 30], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72, 53], 24: [26, 53, 18], 25: [13, 20, 35], 26: [24, 27, 38], 27: [36, 26], 28: [39, 43, 18], 29: [70, 43, 68, 7, 63], 30: [14, 12, 5, 20], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9], 35: [63, 19, 53, 25], 36: [27, 37, 14, 38, 31, 62, 47], 37: [17, 36, 74, 60, 13], 38: [41, 56, 36, 16, 26], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4, 45], 42: [39, 69, 10, 75, 47, 19], 43: [67, 29, 54, 33, 41, 28, 59, 18], 44: [32, 0, 57, 5], 45: [16, 72, 41], 46: [69, 66], 47: [60, 10, 42, 36, 63], 48: [60, 6, 72], 49: [16, 12], 50: [18, 2, 12, 22], 51: [73, 12, 59, 56], 52: [22, 14, 57, 66], 53: [24, 55, 13, 35, 23], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7], 56: [38, 9, 61, 18, 51], 57: [19, 21, 44, 52], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37, 12], 61: [3, 11, 56], 62: [11, 54, 69, 32, 36], 63: [40, 54, 35, 8, 29, 47], 64: [6], 65: [12, 71], 66: [46, 16, 18, 6, 52], 67: [0, 43, 5, 68], 68: [15, 9, 29, 20, 67, 8], 69: [42, 46, 62], 70: [23, 29], 71: [7, 65], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10, 17], 74: [72, 37], 75: [12, 42]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 76 Edges= 152 	elapsed= 0.016427072999931625 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  1  graph: Nodes= 76 Edges= 152 	elapsed= 36.42818745499994 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 76 Edges= 152 	elapsed AVG,DEV_STD= (0.0064632209999672344, 0.004535378740974858) 	 randGraphIndex:  7 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 76 Edges= 152 	elapsed AVG,DEV_STD= (5.825130945299952, 0.013209134366089021) 	 randGraphIndex:  7 	iterations:  2888 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [67, 44], 1: [8], 2: [33, 4, 50, 39, 11], 3: [61, 39, 11], 4: [72, 2, 41], 5: [55, 67, 30, 10, 44], 6: [9, 64, 58, 48, 66], 7: [71, 31, 55, 29, 43], 8: [1, 13, 10, 63, 68], 9: [56, 6, 34, 68], 10: [59, 8, 47, 42, 73, 5, 34], 11: [62, 3, 61, 2], 12: [55, 65, 30, 51, 50, 75, 49, 60], 13: [8, 25, 72, 53, 17, 37], 14: [52, 36, 30, 41], 15: [59, 68, 60], 16: [49, 66, 45, 38, 74], 17: [19, 37, 73, 13], 18: [50, 23, 66, 56, 24, 28, 43], 19: [57, 35, 17, 42], 20: [34, 25, 68, 30], 21: [72, 57], 22: [52, 50, 72], 23: [70, 18, 72, 53], 24: [26, 53, 18], 25: [13, 20, 35], 26: [24, 27, 38], 27: [36, 26, 47], 28: [39, 43, 18], 29: [70, 43, 68, 7, 63], 30: [14, 12, 5, 20], 31: [7, 73, 36, 39], 32: [44, 55, 72, 62], 33: [2, 43], 34: [20, 60, 9, 65, 10], 35: [63, 19, 53, 25], 36: [27, 37, 14, 38, 31, 62, 47], 37: [17, 36, 74, 60, 13, 56], 38: [41, 56, 36, 16, 26], 39: [28, 3, 60, 42, 2, 31], 40: [63], 41: [38, 43, 4, 45, 14], 42: [39, 69, 10, 75, 47, 19], 43: [67, 29, 54, 33, 41, 28, 59, 18, 7], 44: [32, 0, 57, 5], 45: [16, 72, 41, 60], 46: [69, 66], 47: [60, 10, 42, 36, 63, 27], 48: [60, 6, 72], 49: [16, 12, 55], 50: [18, 2, 12, 22, 73], 51: [73, 12, 59, 56], 52: [22, 14, 57, 66], 53: [24, 55, 13, 35, 23, 74], 54: [62, 43, 63], 55: [5, 32, 53, 12, 7, 49], 56: [38, 9, 61, 18, 51, 37], 57: [19, 21, 44, 52], 58: [6, 59], 59: [10, 58, 15, 51, 43], 60: [34, 47, 48, 15, 39, 37, 12, 45], 61: [3, 11, 56], 62: [11, 54, 69, 32, 36], 63: [40, 54, 35, 8, 29, 47], 64: [6], 65: [12, 71, 34], 66: [46, 16, 18, 6, 52], 67: [0, 43, 5, 68], 68: [15, 9, 29, 20, 67, 8], 69: [42, 46, 62], 70: [23, 29], 71: [7, 65], 72: [21, 13, 45, 74, 4, 32, 48, 23, 22], 73: [31, 51, 10, 17, 50], 74: [72, 37, 53, 16], 75: [12, 42]}
exploring min cut solver algoritm with a graph of 85 with variable num of edges


iteration : 0 Graph	Undirected	{0: [12], 1: [6], 2: [13, 35], 3: [52], 4: [62, 70], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51], 8: [26, 19], 9: [66], 10: [38, 5], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33], 15: [43], 16: [20], 17: [54], 18: [53], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49], 23: [35], 24: [48], 25: [67, 34], 26: [11, 8], 27: [29, 74], 28: [49, 33], 29: [21, 27], 30: [31, 79, 83, 32], 31: [30], 32: [53, 30, 22], 33: [14, 28, 62], 34: [25, 84], 35: [2, 23, 46], 36: [59, 14], 37: [67], 38: [10], 39: [81], 40: [57, 61], 41: [52, 73, 78, 45], 42: [6, 64, 63], 43: [15, 69, 74], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7], 47: [61, 70], 48: [24, 60, 7], 49: [22, 28], 50: [45], 51: [7, 76], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40], 58: [71], 59: [36], 60: [48], 61: [40, 47], 62: [33, 4], 63: [56, 42, 44], 64: [42], 65: [11], 66: [9, 80, 5, 57], 67: [37, 55, 12, 25], 68: [45, 5], 69: [43], 70: [54, 47, 4, 77], 71: [58, 82, 45], 72: [75], 73: [41], 74: [27, 43, 55], 75: [72, 45], 76: [51, 53], 77: [70, 12], 78: [41], 79: [30], 80: [66], 81: [20, 39, 45], 82: [71], 83: [30], 84: [34]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 84 	elapsed= 0.01070776400001705 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 84 	elapsed= 28.612928646 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 84 	elapsed AVG,DEV_STD= (0.006363058600027216, 0.005469836953930361) 	 randGraphIndex:  0 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 84 	elapsed AVG,DEV_STD= (6.926542935600037, 0.012084450455119005) 	 randGraphIndex:  0 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12], 1: [6, 27], 2: [13, 35], 3: [52], 4: [62, 70], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51], 8: [26, 19], 9: [66, 83], 10: [38, 5], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33, 60], 15: [43, 32], 16: [20], 17: [54], 18: [53], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49], 23: [35], 24: [48], 25: [67, 34], 26: [11, 8, 37], 27: [29, 74, 1], 28: [49, 33], 29: [21, 27], 30: [31, 79, 83, 32], 31: [30], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84], 35: [2, 23, 46], 36: [59, 14], 37: [67, 26], 38: [10], 39: [81], 40: [57, 61], 41: [52, 73, 78, 45], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7], 47: [61, 70], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48], 58: [71], 59: [36], 60: [48, 14], 61: [40, 47], 62: [33, 4], 63: [56, 42, 44, 43], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57], 67: [37, 55, 12, 25], 68: [45, 5], 69: [43, 51], 70: [54, 47, 4, 77], 71: [58, 82, 45], 72: [75, 48], 73: [41], 74: [27, 43, 55], 75: [72, 45], 76: [51, 53], 77: [70, 12, 57], 78: [41], 79: [30], 80: [66], 81: [20, 39, 45], 82: [71], 83: [30, 9], 84: [34]}
iteration : 1 Graph	Undirected	{0: [12], 1: [6, 27], 2: [13, 35], 3: [52], 4: [62, 70], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51], 8: [26, 19], 9: [66, 83], 10: [38, 5], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33, 60], 15: [43, 32], 16: [20], 17: [54], 18: [53], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49], 23: [35], 24: [48], 25: [67, 34], 26: [11, 8, 37], 27: [29, 74, 1], 28: [49, 33], 29: [21, 27], 30: [31, 79, 83, 32], 31: [30], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84], 35: [2, 23, 46], 36: [59, 14], 37: [67, 26], 38: [10], 39: [81], 40: [57, 61], 41: [52, 73, 78, 45], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7], 47: [61, 70], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48], 58: [71], 59: [36], 60: [48, 14], 61: [40, 47], 62: [33, 4], 63: [56, 42, 44, 43], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57], 67: [37, 55, 12, 25], 68: [45, 5], 69: [43, 51], 70: [54, 47, 4, 77], 71: [58, 82, 45], 72: [75, 48], 73: [41], 74: [27, 43, 55], 75: [72, 45], 76: [51, 53], 77: [70, 12, 57], 78: [41], 79: [30], 80: [66], 81: [20, 39, 45], 82: [71], 83: [30, 9], 84: [34]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 95 	elapsed= 0.01326786199979324 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 95 	elapsed= 31.861057197000264 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 95 	elapsed AVG,DEV_STD= (0.006350240300116638, 0.004679258304451188) 	 randGraphIndex:  1 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 95 	elapsed AVG,DEV_STD= (7.292532949299994, 0.012550727241294028) 	 randGraphIndex:  1 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12], 1: [6, 27], 2: [13, 35], 3: [52], 4: [62, 70, 28], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51], 8: [26, 19], 9: [66, 83], 10: [38, 5], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33, 60], 15: [43, 32], 16: [20], 17: [54, 62], 18: [53], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37], 27: [29, 74, 1], 28: [49, 33, 4], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84, 75], 35: [2, 23, 46], 36: [59, 14, 82], 37: [67, 26], 38: [10], 39: [81], 40: [57, 61], 41: [52, 73, 78, 45], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7], 47: [61, 70, 29], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48], 58: [71, 31], 59: [36], 60: [48, 14, 84], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76], 67: [37, 55, 12, 25], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77], 71: [58, 82, 45], 72: [75, 48], 73: [41], 74: [27, 43, 55], 75: [72, 45, 34], 76: [51, 53, 66], 77: [70, 12, 57], 78: [41], 79: [30, 22], 80: [66], 81: [20, 39, 45], 82: [71, 36], 83: [30, 9], 84: [34, 60]}
iteration : 2 Graph	Undirected	{0: [12], 1: [6, 27], 2: [13, 35], 3: [52], 4: [62, 70, 28], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51], 8: [26, 19], 9: [66, 83], 10: [38, 5], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33, 60], 15: [43, 32], 16: [20], 17: [54, 62], 18: [53], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37], 27: [29, 74, 1], 28: [49, 33, 4], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84, 75], 35: [2, 23, 46], 36: [59, 14, 82], 37: [67, 26], 38: [10], 39: [81], 40: [57, 61], 41: [52, 73, 78, 45], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7], 47: [61, 70, 29], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48], 58: [71, 31], 59: [36], 60: [48, 14, 84], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76], 67: [37, 55, 12, 25], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77], 71: [58, 82, 45], 72: [75, 48], 73: [41], 74: [27, 43, 55], 75: [72, 45, 34], 76: [51, 53, 66], 77: [70, 12, 57], 78: [41], 79: [30, 22], 80: [66], 81: [20, 39, 45], 82: [71, 36], 83: [30, 9], 84: [34, 60]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 106 	elapsed= 0.013168606999897747 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 106 	elapsed= 34.57382572999995 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 106 	elapsed AVG,DEV_STD= (0.004559888099993259, 0.0030594941401838886) 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 106 	elapsed AVG,DEV_STD= (7.506459136800004, 0.009080827574780627) 	 randGraphIndex:  2 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12], 1: [6, 27], 2: [13, 35], 3: [52], 4: [62, 70, 28], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51, 16], 8: [26, 19, 46], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26], 18: [53, 10], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84, 75], 35: [2, 23, 46], 36: [59, 14, 82], 37: [67, 26], 38: [10], 39: [81, 78], 40: [57, 61], 41: [52, 73, 78, 45, 57], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7, 8], 47: [61, 70, 29], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69, 80], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48, 41], 58: [71, 31], 59: [36], 60: [48, 14, 84], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77, 67], 71: [58, 82, 45], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34], 76: [51, 53, 66, 63], 77: [70, 12, 57], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74], 82: [71, 36], 83: [30, 9], 84: [34, 60]}
iteration : 3 Graph	Undirected	{0: [12], 1: [6, 27], 2: [13, 35], 3: [52], 4: [62, 70, 28], 5: [10, 44, 68, 66], 6: [1, 42], 7: [46, 48, 51, 16], 8: [26, 19, 46], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26], 18: [53, 10], 19: [8, 55], 20: [16, 81], 21: [29], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84, 75], 35: [2, 23, 46], 36: [59, 14, 82], 37: [67, 26], 38: [10], 39: [81, 78], 40: [57, 61], 41: [52, 73, 78, 45, 57], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7, 8], 47: [61, 70, 29], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69, 80], 52: [3, 41], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48, 41], 58: [71, 31], 59: [36], 60: [48, 14, 84], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77, 67], 71: [58, 82, 45], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34], 76: [51, 53, 66, 63], 77: [70, 12, 57], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74], 82: [71, 36], 83: [30, 9], 84: [34, 60]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 117 	elapsed= 0.014258863000122801 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 117 	elapsed= 37.23003284000015 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 117 	elapsed AVG,DEV_STD= (0.005995845200004624, 0.004130050899823906) 	 randGraphIndex:  3 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 117 	elapsed AVG,DEV_STD= (7.7864763311000385, 0.00804501981786308) 	 randGraphIndex:  3 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12], 1: [6, 27], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28], 5: [10, 44, 68, 66], 6: [1, 42, 70], 7: [46, 48, 51, 16], 8: [26, 19, 46], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26], 18: [53, 10], 19: [8, 55, 31], 20: [16, 81], 21: [29, 40], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84, 75], 35: [2, 23, 46, 66], 36: [59, 14, 82], 37: [67, 26], 38: [10], 39: [81, 78, 46], 40: [57, 61, 41, 21], 41: [52, 73, 78, 45, 57, 40], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69, 80], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48, 41, 75], 58: [71, 31, 47], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77, 67, 6], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63], 77: [70, 12, 57], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74], 82: [71, 36], 83: [30, 9], 84: [34, 60]}
iteration : 4 Graph	Undirected	{0: [12], 1: [6, 27], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28], 5: [10, 44, 68, 66], 6: [1, 42, 70], 7: [46, 48, 51, 16], 8: [26, 19, 46], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26], 18: [53, 10], 19: [8, 55, 31], 20: [16, 81], 21: [29, 40], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15], 33: [14, 28, 62, 65], 34: [25, 84, 75], 35: [2, 23, 46, 66], 36: [59, 14, 82], 37: [67, 26], 38: [10], 39: [81, 78, 46], 40: [57, 61, 41, 21], 41: [52, 73, 78, 45, 57, 40], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45], 51: [7, 76, 69, 80], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48, 41, 75], 58: [71, 31, 47], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77, 67, 6], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63], 77: [70, 12, 57], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74], 82: [71, 36], 83: [30, 9], 84: [34, 60]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 128 	elapsed= 0.016708011999980954 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 128 	elapsed= 40.23092025699998 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 128 	elapsed AVG,DEV_STD= (0.0060593574999984415, 0.0033905504056886537) 	 randGraphIndex:  4 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 128 	elapsed AVG,DEV_STD= (7.994722755699968, 0.009813593175312194) 	 randGraphIndex:  4 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12], 1: [6, 27, 51], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28], 5: [10, 44, 68, 66, 34], 6: [1, 42, 70, 19], 7: [46, 48, 51, 16], 8: [26, 19, 46, 57], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26], 18: [53, 10], 19: [8, 55, 31, 36, 6], 20: [16, 81], 21: [29, 40], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63], 33: [14, 28, 62, 65], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26], 38: [10, 50], 39: [81, 78, 46], 40: [57, 61, 41, 21, 34], 41: [52, 73, 78, 45, 57, 40], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5, 84], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48, 41, 75, 8], 58: [71, 31, 47], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36], 83: [30, 9], 84: [34, 60, 44]}
iteration : 5 Graph	Undirected	{0: [12], 1: [6, 27, 51], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28], 5: [10, 44, 68, 66, 34], 6: [1, 42, 70, 19], 7: [46, 48, 51, 16], 8: [26, 19, 46, 57], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26], 18: [53, 10], 19: [8, 55, 31, 36, 6], 20: [16, 81], 21: [29, 40], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63], 33: [14, 28, 62, 65], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26], 38: [10, 50], 39: [81, 78, 46], 40: [57, 61, 41, 21, 34], 41: [52, 73, 78, 45, 57, 40], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5, 84], 45: [50, 75, 41, 81, 71, 68], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63], 57: [66, 40, 77, 48, 41, 75, 8], 58: [71, 31, 47], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36], 83: [30, 9], 84: [34, 60, 44]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 139 	elapsed= 0.016667711999616586 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 139 	elapsed= 42.889334244999645 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 139 	elapsed AVG,DEV_STD= (0.007273730200040518, 0.008641756570197381) 	 randGraphIndex:  5 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 139 	elapsed AVG,DEV_STD= (8.22478699029989, 0.013125887340123354) 	 randGraphIndex:  5 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 48], 1: [6, 27, 51], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28, 77], 5: [10, 44, 68, 66, 34], 6: [1, 42, 70, 19], 7: [46, 48, 51, 16], 8: [26, 19, 46, 57], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26, 32], 18: [53, 10, 82], 19: [8, 55, 31, 36, 6, 69], 20: [16, 81, 32], 21: [29, 40], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1, 39], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30, 57], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63, 17, 20, 45], 33: [14, 28, 62, 65, 57], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26, 56], 38: [10, 50], 39: [81, 78, 46, 27], 40: [57, 61, 41, 21, 34], 41: [52, 73, 78, 45, 57, 40], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5, 84], 45: [50, 75, 41, 81, 71, 68, 32], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57, 0], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63, 37], 57: [66, 40, 77, 48, 41, 75, 8, 33, 29], 58: [71, 31, 47], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23, 19], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57, 4], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36, 18], 83: [30, 9], 84: [34, 60, 44]}
iteration : 6 Graph	Undirected	{0: [12, 48], 1: [6, 27, 51], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28, 77], 5: [10, 44, 68, 66, 34], 6: [1, 42, 70, 19], 7: [46, 48, 51, 16], 8: [26, 19, 46, 57], 9: [66, 83], 10: [38, 5, 18], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26, 32], 18: [53, 10, 82], 19: [8, 55, 31, 36, 6, 69], 20: [16, 81, 32], 21: [29, 40], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17], 27: [29, 74, 1, 39], 28: [49, 33, 4, 63], 29: [21, 27, 47, 30, 57], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63, 17, 20, 45], 33: [14, 28, 62, 65, 57], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26, 56], 38: [10, 50], 39: [81, 78, 46, 27], 40: [57, 61, 41, 21, 34], 41: [52, 73, 78, 45, 57, 40], 42: [6, 64, 63], 43: [15, 69, 74, 63], 44: [63, 5, 84], 45: [50, 75, 41, 81, 71, 68, 32], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57, 0], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70], 55: [19, 74, 67], 56: [63, 37], 57: [66, 40, 77, 48, 41, 75, 8, 33, 29], 58: [71, 31, 47], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23, 19], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57, 4], 78: [41, 39], 79: [30, 22], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36, 18], 83: [30, 9], 84: [34, 60, 44]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 150 	elapsed= 0.018833344000086072 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 150 	elapsed= 45.344401600999845 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 150 	elapsed AVG,DEV_STD= (0.008999404900032459, 0.006004523778838574) 	 randGraphIndex:  6 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 150 	elapsed AVG,DEV_STD= (8.471324528700052, 0.013589650893716856) 	 randGraphIndex:  6 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 48], 1: [6, 27, 51, 55], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28, 77], 5: [10, 44, 68, 66, 34, 21], 6: [1, 42, 70, 19, 37], 7: [46, 48, 51, 16], 8: [26, 19, 46, 57], 9: [66, 83], 10: [38, 5, 18, 54], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60, 44], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26, 32], 18: [53, 10, 82], 19: [8, 55, 31, 36, 6, 69], 20: [16, 81, 32], 21: [29, 40, 5, 66], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17, 58], 27: [29, 74, 1, 39], 28: [49, 33, 4, 63, 42], 29: [21, 27, 47, 30, 57], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63, 17, 20, 45], 33: [14, 28, 62, 65, 57], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26, 56, 6], 38: [10, 50, 39], 39: [81, 78, 46, 27, 38], 40: [57, 61, 41, 21, 34], 41: [52, 73, 78, 45, 57, 40, 79, 64], 42: [6, 64, 63, 28], 43: [15, 69, 74, 63], 44: [63, 5, 84, 13], 45: [50, 75, 41, 81, 71, 68, 32], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57, 0], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70, 10], 55: [19, 74, 67, 1], 56: [63, 37], 57: [66, 40, 77, 48, 41, 75, 8, 33, 29], 58: [71, 31, 47, 26], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42, 41], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35, 21], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23, 19], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57, 4], 78: [41, 39], 79: [30, 22, 41], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36, 18], 83: [30, 9], 84: [34, 60, 44]}
iteration : 7 Graph	Undirected	{0: [12, 48], 1: [6, 27, 51, 55], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28, 77], 5: [10, 44, 68, 66, 34, 21], 6: [1, 42, 70, 19, 37], 7: [46, 48, 51, 16], 8: [26, 19, 46, 57], 9: [66, 83], 10: [38, 5, 18, 54], 11: [65, 26], 12: [0, 77, 67], 13: [2, 60, 44], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26, 32], 18: [53, 10, 82], 19: [8, 55, 31, 36, 6, 69], 20: [16, 81, 32], 21: [29, 40, 5, 66], 22: [32, 49, 79], 23: [35, 69], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17, 58], 27: [29, 74, 1, 39], 28: [49, 33, 4, 63, 42], 29: [21, 27, 47, 30, 57], 30: [31, 79, 83, 32, 29], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63, 17, 20, 45], 33: [14, 28, 62, 65, 57], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26, 56, 6], 38: [10, 50, 39], 39: [81, 78, 46, 27, 38], 40: [57, 61, 41, 21, 34], 41: [52, 73, 78, 45, 57, 40, 79, 64], 42: [6, 64, 63, 28], 43: [15, 69, 74, 63], 44: [63, 5, 84, 13], 45: [50, 75, 41, 81, 71, 68, 32], 46: [35, 7, 8, 39], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57, 0], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70, 10], 55: [19, 74, 67, 1], 56: [63, 37], 57: [66, 40, 77, 48, 41, 75, 8, 33, 29], 58: [71, 31, 47, 26], 59: [36], 60: [48, 14, 84, 13], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42, 41], 65: [11, 33], 66: [9, 80, 5, 57, 76, 35, 21], 67: [37, 55, 12, 25, 70], 68: [45, 5], 69: [43, 51, 23, 19], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57, 4], 78: [41, 39], 79: [30, 22, 41], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36, 18], 83: [30, 9], 84: [34, 60, 44]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 85 Edges= 161 	elapsed= 0.0181341750003412 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  1  graph: Nodes= 85 Edges= 161 	elapsed= 48.42311285799997 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 85 Edges= 161 	elapsed AVG,DEV_STD= (0.01323727419999159, 0.011307805365361011) 	 randGraphIndex:  7 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 85 Edges= 161 	elapsed AVG,DEV_STD= (8.652990890399996, 0.01163173018834712) 	 randGraphIndex:  7 	iterations:  3612 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 48], 1: [6, 27, 51, 55], 2: [13, 35, 52], 3: [52, 71], 4: [62, 70, 28, 77], 5: [10, 44, 68, 66, 34, 21], 6: [1, 42, 70, 19, 37], 7: [46, 48, 51, 16, 30], 8: [26, 19, 46, 57], 9: [66, 83, 78], 10: [38, 5, 18, 54], 11: [65, 26], 12: [0, 77, 67, 59], 13: [2, 60, 44], 14: [36, 33, 60], 15: [43, 32], 16: [20, 7], 17: [54, 62, 26, 32], 18: [53, 10, 82], 19: [8, 55, 31, 36, 6, 69, 40], 20: [16, 81, 32], 21: [29, 40, 5, 66, 38, 74, 55], 22: [32, 49, 79], 23: [35, 69, 55], 24: [48], 25: [67, 34], 26: [11, 8, 37, 17, 58], 27: [29, 74, 1, 39], 28: [49, 33, 4, 63, 42], 29: [21, 27, 47, 30, 57], 30: [31, 79, 83, 32, 29, 7], 31: [30, 58, 19], 32: [53, 30, 22, 15, 63, 17, 20, 45], 33: [14, 28, 62, 65, 57], 34: [25, 84, 75, 5, 40], 35: [2, 23, 46, 66, 70], 36: [59, 14, 82, 19], 37: [67, 26, 56, 6], 38: [10, 50, 39, 21], 39: [81, 78, 46, 27, 38], 40: [57, 61, 41, 21, 34, 19], 41: [52, 73, 78, 45, 57, 40, 79, 64], 42: [6, 64, 63, 28], 43: [15, 69, 74, 63, 46], 44: [63, 5, 84, 13], 45: [50, 75, 41, 81, 71, 68, 32], 46: [35, 7, 8, 39, 43], 47: [61, 70, 29, 58], 48: [24, 60, 7, 72, 57, 0], 49: [22, 28], 50: [45, 38], 51: [7, 76, 69, 80, 1], 52: [3, 41, 2], 53: [18, 76, 32], 54: [17, 70, 10], 55: [19, 74, 67, 1, 23, 21], 56: [63, 37], 57: [66, 40, 77, 48, 41, 75, 8, 33, 29], 58: [71, 31, 47, 26], 59: [36, 12], 60: [48, 14, 84, 13, 68], 61: [40, 47], 62: [33, 4, 17], 63: [56, 42, 44, 43, 76, 28, 32], 64: [42, 41, 65], 65: [11, 33, 64], 66: [9, 80, 5, 57, 76, 35, 21], 67: [37, 55, 12, 25, 70], 68: [45, 5, 60], 69: [43, 51, 23, 19], 70: [54, 47, 4, 77, 67, 6, 35], 71: [58, 82, 45, 3], 72: [75, 48], 73: [41], 74: [27, 43, 55, 81, 21], 75: [72, 45, 34, 57], 76: [51, 53, 66, 63, 81], 77: [70, 12, 57, 4], 78: [41, 39, 9], 79: [30, 22, 41], 80: [66, 51], 81: [20, 39, 45, 74, 76], 82: [71, 36, 18], 83: [30, 9], 84: [34, 60, 44]}
