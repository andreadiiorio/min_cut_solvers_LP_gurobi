
LOGGING TEST WITH:
startN_22_rebuildsN_3_edgeTickenning_8_nodesStep_9_edgeStep_22_statisticsIter_10.log
exploring min cut solver algoritm with a graph of 4 with variable num of edges


iteration : 0 Graph	Undirected	{0: [1, 3], 1: [2, 0], 2: [1], 3: [0]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 4 Edges= 3 	elapsed= 0.00022957300006964942 	 randGraphIndex:  0
Academic license - for non-commercial use only
@minCutLPIterative	minCutVal=  1  graph: Nodes= 4 Edges= 3 	elapsed= 0.02598800600026152 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 3 	elapsed AVG,DEV_STD= (7.065049994707806e-05, 2.3839935537588916e-05) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 4 Edges= 3 	elapsed AVG,DEV_STD= (0.00032412249984190564, 1.1968184422837829e-05) 	 randGraphIndex:  0 	iterations:  8 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 3, 2], 1: [2, 0, 3], 2: [1, 0, 3], 3: [0, 1, 2]}
iteration : 1 Graph	Undirected	{0: [1, 3, 2], 1: [2, 0, 3], 2: [1, 0, 3], 3: [0, 1, 2]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 4 Edges= 6 	elapsed= 0.00021787600053357892 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  3  graph: Nodes= 4 Edges= 6 	elapsed= 0.008473009999761416 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 6 	elapsed AVG,DEV_STD= (7.117709992598975e-05, 3.4711115994468635e-05) 	 randGraphIndex:  1 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 4 Edges= 6 	elapsed AVG,DEV_STD= (0.0003523596000377438, 1.8618905177574853e-05) 	 randGraphIndex:  1 	iterations:  8 	delta between founded sol and Opt one:  0
max num of edges reached for  4  graph
exploring min cut solver algoritm with a graph of 13 with variable num of edges


iteration : 0 Graph	Undirected	{0: [7, 3], 1: [5], 2: [6], 3: [0, 9, 12], 4: [9], 5: [1, 6], 6: [2, 5, 11, 8], 7: [0], 8: [10, 6, 9], 9: [4, 8, 3], 10: [8], 11: [6], 12: [3]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 13 Edges= 12 	elapsed= 0.0006072950000088895 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 13 Edges= 12 	elapsed= 0.13086673599991627 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 12 	elapsed AVG,DEV_STD= (0.0002409629999419849, 0.0001384175950076983) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 13 Edges= 12 	elapsed AVG,DEV_STD= (0.011205777600116562, 3.745603106934369e-05) 	 randGraphIndex:  0 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5], 1: [5, 2, 9, 11, 4, 10, 12], 2: [6, 1, 7, 8, 3, 11], 3: [0, 9, 12, 2, 11], 4: [9, 11, 6, 1], 5: [1, 6, 9, 7, 0], 6: [2, 5, 11, 8, 4, 12, 7], 7: [0, 8, 6, 5, 10, 2], 8: [10, 6, 9, 7, 2], 9: [4, 8, 3, 10, 5, 1], 10: [8, 9, 7, 1], 11: [6, 4, 1, 2, 12, 3], 12: [3, 0, 6, 1, 11]}
iteration : 1 Graph	Undirected	{0: [7, 3, 12, 5], 1: [5, 2, 9, 11, 4, 10, 12], 2: [6, 1, 7, 8, 3, 11], 3: [0, 9, 12, 2, 11], 4: [9, 11, 6, 1], 5: [1, 6, 9, 7, 0], 6: [2, 5, 11, 8, 4, 12, 7], 7: [0, 8, 6, 5, 10, 2], 8: [10, 6, 9, 7, 2], 9: [4, 8, 3, 10, 5, 1], 10: [8, 9, 7, 1], 11: [6, 4, 1, 2, 12, 3], 12: [3, 0, 6, 1, 11]}
@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 13 Edges= 35 	elapsed= 0.0007510539999202592 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  4  graph: Nodes= 13 Edges= 35 	elapsed= 0.24313425699983782 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 35 	elapsed AVG,DEV_STD= (0.0025850426998658806, 0.0017338861101300234) 	 randGraphIndex:  1 	iteration to reach Optimal:  13
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 13 Edges= 35 	elapsed AVG,DEV_STD= (0.014588340200043603, 3.6163458284432436e-05) 	 randGraphIndex:  1 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6], 1: [5, 2, 9, 11, 4, 10, 12, 0], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4], 3: [0, 9, 12, 2, 11, 5], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3], 6: [2, 5, 11, 8, 4, 12, 7, 0], 7: [0, 8, 6, 5, 10, 2, 12, 4], 8: [10, 6, 9, 7, 2], 9: [4, 8, 3, 10, 5, 1], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2]}
iteration : 2 Graph	Undirected	{0: [7, 3, 12, 5, 11, 1, 6], 1: [5, 2, 9, 11, 4, 10, 12, 0], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4], 3: [0, 9, 12, 2, 11, 5], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3], 6: [2, 5, 11, 8, 4, 12, 7, 0], 7: [0, 8, 6, 5, 10, 2, 12, 4], 8: [10, 6, 9, 7, 2], 9: [4, 8, 3, 10, 5, 1], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2]}
@stoer_wagner_minCut	minCutval=  5  graph: Nodes= 13 Edges= 52 	elapsed= 0.0009003480008686893 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  5  graph: Nodes= 13 Edges= 52 	elapsed= 0.33182423500056757 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 52 	elapsed AVG,DEV_STD= (0.005778500999986136, 0.0076650608330758735) 	 randGraphIndex:  2 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  5  graph: Nodes= 13 Edges= 52 	elapsed AVG,DEV_STD= (0.0181302823997612, 0.0048065251481783245) 	 randGraphIndex:  2 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2], 9: [4, 8, 3, 10, 5, 1, 2], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5]}
iteration : 3 Graph	Undirected	{0: [7, 3, 12, 5, 11, 1, 6], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2], 9: [4, 8, 3, 10, 5, 1, 2], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5]}
@stoer_wagner_minCut	minCutval=  5  graph: Nodes= 13 Edges= 56 	elapsed= 0.0009229930001311004 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  5  graph: Nodes= 13 Edges= 56 	elapsed= 0.35146622299998853 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 56 	elapsed AVG,DEV_STD= (0.013578671000232134, 0.011552830038962694) 	 randGraphIndex:  3 	iteration to reach Optimal:  93
@randMinCut-fixedIter	minCutVal=  5  graph: Nodes= 13 Edges= 56 	elapsed AVG,DEV_STD= (0.016874628700043103, 6.051648696284899e-05) 	 randGraphIndex:  3 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6, 9], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
iteration : 4 Graph	Undirected	{0: [7, 3, 12, 5, 11, 1, 6, 9], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
@stoer_wagner_minCut	minCutval=  6  graph: Nodes= 13 Edges= 60 	elapsed= 0.0009591489997546887 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  6  graph: Nodes= 13 Edges= 60 	elapsed= 0.4351596309998058 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 60 	elapsed AVG,DEV_STD= (0.006427381099911145, 0.004377697155049304) 	 randGraphIndex:  4 	iteration to reach Optimal:  7
@randMinCut-fixedIter	minCutVal=  6  graph: Nodes= 13 Edges= 60 	elapsed AVG,DEV_STD= (0.017409994900026503, 0.00011538684404747553) 	 randGraphIndex:  4 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
iteration : 5 Graph	Undirected	{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
@stoer_wagner_minCut	minCutval=  7  graph: Nodes= 13 Edges= 62 	elapsed= 0.0010209179999947082 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  7  graph: Nodes= 13 Edges= 62 	elapsed= 0.39377327599959244 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 62 	elapsed AVG,DEV_STD= (0.01112099660003878, 0.009115905511612381) 	 randGraphIndex:  5 	iteration to reach Optimal:  20
@randMinCut-fixedIter	minCutVal=  8  graph: Nodes= 13 Edges= 62 	elapsed AVG,DEV_STD= (0.017772619900006247, 8.384563574347975e-05) 	 randGraphIndex:  5 	iterations:  84 	delta between founded sol and Opt one:  1
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1, 10], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0, 11], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11, 6], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10, 9], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
iteration : 6 Graph	Undirected	{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1, 10], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0, 11], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11, 6], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10, 9], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
@stoer_wagner_minCut	minCutval=  7  graph: Nodes= 13 Edges= 64 	elapsed= 0.0009950960002242937 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  7  graph: Nodes= 13 Edges= 64 	elapsed= 0.41975241500040283 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 64 	elapsed AVG,DEV_STD= (0.01651594339991789, 0.01492356103664457) 	 randGraphIndex:  6 	iteration to reach Optimal:  15
@randMinCut-fixedIter	minCutVal=  7  graph: Nodes= 13 Edges= 64 	elapsed AVG,DEV_STD= (0.017888574999778938, 0.0001738722556422343) 	 randGraphIndex:  6 	iterations:  84 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4, 10], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3, 8], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1, 10], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0, 4], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0, 11], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11, 6, 3], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10, 9], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
iteration : 7 Graph	Undirected	{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4, 10], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3, 8], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1, 10], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0, 4], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0, 11], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11, 6, 3], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10, 9], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
@stoer_wagner_minCut	minCutval=  8  graph: Nodes= 13 Edges= 66 	elapsed= 0.00103048300024966 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  8  graph: Nodes= 13 Edges= 66 	elapsed= 0.40985709599954134 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 13 Edges= 66 	elapsed AVG,DEV_STD= (0.013844285599861905, 0.008194952151783591) 	 randGraphIndex:  7 	iteration to reach Optimal:  65
@randMinCut-fixedIter	minCutVal=  9  graph: Nodes= 13 Edges= 66 	elapsed AVG,DEV_STD= (0.018129153300014876, 6.395277006819595e-05) 	 randGraphIndex:  7 	iterations:  84 	delta between founded sol and Opt one:  1
Added  0  nodes and  0  edges to the graph
{0: [7, 3, 12, 5, 11, 1, 6, 9, 8], 1: [5, 2, 9, 11, 4, 10, 12, 0, 3, 7, 6, 8], 2: [6, 1, 7, 8, 3, 11, 12, 10, 5, 4, 9], 3: [0, 9, 12, 2, 11, 5, 1, 4, 10], 4: [9, 11, 6, 1, 10, 12, 5, 2, 7, 3, 8], 5: [1, 6, 9, 7, 0, 10, 4, 11, 2, 3, 12, 8], 6: [2, 5, 11, 8, 4, 12, 7, 0, 9, 1, 10], 7: [0, 8, 6, 5, 10, 2, 12, 4, 1], 8: [10, 6, 9, 7, 2, 12, 0, 4, 1, 11, 5], 9: [4, 8, 3, 10, 5, 1, 2, 6, 0, 11], 10: [8, 9, 7, 1, 5, 4, 12, 2, 11, 6, 3], 11: [6, 4, 1, 2, 12, 3, 0, 5, 10, 9, 8], 12: [3, 0, 6, 1, 11, 4, 10, 7, 2, 5, 8]}
exploring min cut solver algoritm with a graph of 22 with variable num of edges


iteration : 0 Graph	Undirected	{0: [1, 11], 1: [3, 0], 2: [17, 21], 3: [9, 8, 10, 1], 4: [19, 5], 5: [4, 17], 6: [18, 8], 7: [19], 8: [16, 6, 3], 9: [3], 10: [12, 14, 3], 11: [0, 19], 12: [10], 13: [17], 14: [20, 10], 15: [16], 16: [15, 8], 17: [13, 5, 2], 18: [6], 19: [7, 11, 4], 20: [14], 21: [2]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 22 Edges= 21 	elapsed= 0.0010207880004600156 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 22 Edges= 21 	elapsed= 0.5617457349999313 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 21 	elapsed AVG,DEV_STD= (0.0008222910999393207, 0.0006114666334751079) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 22 Edges= 21 	elapsed AVG,DEV_STD= (0.06183807520010305, 0.00011842545401550879) 	 randGraphIndex:  0 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5], 1: [3, 0, 20], 2: [17, 21, 18, 8], 3: [9, 8, 10, 1, 0], 4: [19, 5, 0, 9], 5: [4, 17, 18, 0], 6: [18, 8], 7: [19, 8, 15], 8: [16, 6, 3, 13, 7, 2, 20], 9: [3, 11, 4], 10: [12, 14, 3, 11, 15, 19], 11: [0, 19, 10, 9], 12: [10], 13: [17, 8, 19], 14: [20, 10, 16], 15: [16, 21, 17, 0, 7, 10], 16: [15, 8, 0, 14, 19], 17: [13, 5, 2, 15], 18: [6, 5, 2], 19: [7, 11, 4, 13, 16, 10], 20: [14, 8, 1], 21: [2, 15]}
iteration : 1 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5], 1: [3, 0, 20], 2: [17, 21, 18, 8], 3: [9, 8, 10, 1, 0], 4: [19, 5, 0, 9], 5: [4, 17, 18, 0], 6: [18, 8], 7: [19, 8, 15], 8: [16, 6, 3, 13, 7, 2, 20], 9: [3, 11, 4], 10: [12, 14, 3, 11, 15, 19], 11: [0, 19, 10, 9], 12: [10], 13: [17, 8, 19], 14: [20, 10, 16], 15: [16, 21, 17, 0, 7, 10], 16: [15, 8, 0, 14, 19], 17: [13, 5, 2, 15], 18: [6, 5, 2], 19: [7, 11, 4, 13, 16, 10], 20: [14, 8, 1], 21: [2, 15]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 22 Edges= 44 	elapsed= 0.0015135339999687858 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 22 Edges= 44 	elapsed= 0.9285541210001611 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 44 	elapsed AVG,DEV_STD= (0.0024391223001657635, 0.001350586831763986) 	 randGraphIndex:  1 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 22 Edges= 44 	elapsed AVG,DEV_STD= (0.07603640970000924, 0.00030670788218974506) 	 randGraphIndex:  1 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20], 1: [3, 0, 20, 6, 19, 18], 2: [17, 21, 18, 8, 15, 19], 3: [9, 8, 10, 1, 0, 17, 13], 4: [19, 5, 0, 9], 5: [4, 17, 18, 0, 6, 12], 6: [18, 8, 1, 17, 5], 7: [19, 8, 15, 21, 18], 8: [16, 6, 3, 13, 7, 2, 20, 11], 9: [3, 11, 4, 15], 10: [12, 14, 3, 11, 15, 19], 11: [0, 19, 10, 9, 20, 8], 12: [10, 17, 5, 21], 13: [17, 8, 19, 3, 20, 21], 14: [20, 10, 16], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2], 16: [15, 8, 0, 14, 19], 17: [13, 5, 2, 15, 3, 18, 6, 12], 18: [6, 5, 2, 15, 17, 1, 7], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2], 20: [14, 8, 1, 11, 13, 0], 21: [2, 15, 12, 13, 7]}
iteration : 2 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5, 19, 20], 1: [3, 0, 20, 6, 19, 18], 2: [17, 21, 18, 8, 15, 19], 3: [9, 8, 10, 1, 0, 17, 13], 4: [19, 5, 0, 9], 5: [4, 17, 18, 0, 6, 12], 6: [18, 8, 1, 17, 5], 7: [19, 8, 15, 21, 18], 8: [16, 6, 3, 13, 7, 2, 20, 11], 9: [3, 11, 4, 15], 10: [12, 14, 3, 11, 15, 19], 11: [0, 19, 10, 9, 20, 8], 12: [10, 17, 5, 21], 13: [17, 8, 19, 3, 20, 21], 14: [20, 10, 16], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2], 16: [15, 8, 0, 14, 19], 17: [13, 5, 2, 15, 3, 18, 6, 12], 18: [6, 5, 2, 15, 17, 1, 7], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2], 20: [14, 8, 1, 11, 13, 0], 21: [2, 15, 12, 13, 7]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 22 Edges= 67 	elapsed= 0.002241270999547851 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  3  graph: Nodes= 22 Edges= 67 	elapsed= 1.310101220999968 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 67 	elapsed AVG,DEV_STD= (0.008793582999896899, 0.006176833980428928) 	 randGraphIndex:  2 	iteration to reach Optimal:  22
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 22 Edges= 67 	elapsed AVG,DEV_STD= (0.08761278609999863, 0.0003040536020208065) 	 randGraphIndex:  2 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14], 1: [3, 0, 20, 6, 19, 18, 5], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19], 4: [19, 5, 0, 9, 3], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15], 6: [18, 8, 1, 17, 5, 15, 10], 7: [19, 8, 15, 21, 18, 5], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19], 9: [3, 11, 4, 15, 10], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6], 11: [0, 19, 10, 9, 20, 8], 12: [10, 17, 5, 21, 2, 8], 13: [17, 8, 19, 3, 20, 21, 5], 14: [20, 10, 16, 5, 0], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5], 16: [15, 8, 0, 14, 19, 3, 17], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16], 18: [6, 5, 2, 15, 17, 1, 7], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8], 20: [14, 8, 1, 11, 13, 0, 3], 21: [2, 15, 12, 13, 7, 3]}
iteration : 3 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14], 1: [3, 0, 20, 6, 19, 18, 5], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19], 4: [19, 5, 0, 9, 3], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15], 6: [18, 8, 1, 17, 5, 15, 10], 7: [19, 8, 15, 21, 18, 5], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19], 9: [3, 11, 4, 15, 10], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6], 11: [0, 19, 10, 9, 20, 8], 12: [10, 17, 5, 21, 2, 8], 13: [17, 8, 19, 3, 20, 21, 5], 14: [20, 10, 16, 5, 0], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5], 16: [15, 8, 0, 14, 19, 3, 17], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16], 18: [6, 5, 2, 15, 17, 1, 7], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8], 20: [14, 8, 1, 11, 13, 0, 3], 21: [2, 15, 12, 13, 7, 3]}
@stoer_wagner_minCut	minCutval=  5  graph: Nodes= 22 Edges= 90 	elapsed= 0.002269145999889588 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  5  graph: Nodes= 22 Edges= 90 	elapsed= 1.7185406440003135 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 90 	elapsed AVG,DEV_STD= (0.009063099400191277, 0.004172850330866982) 	 randGraphIndex:  3 	iteration to reach Optimal:  21
@randMinCut-fixedIter	minCutVal=  5  graph: Nodes= 22 Edges= 90 	elapsed AVG,DEV_STD= (0.09598150639994855, 0.00034751549532914956) 	 randGraphIndex:  3 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10], 1: [3, 0, 20, 6, 19, 18, 5], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19], 4: [19, 5, 0, 9, 3], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13], 7: [19, 8, 15, 21, 18, 5, 16], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10], 9: [3, 11, 4, 15, 10, 18, 5], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17], 12: [10, 17, 5, 21, 2, 8, 15, 13], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6], 14: [20, 10, 16, 5, 0, 15], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15], 21: [2, 15, 12, 13, 7, 3, 5, 16]}
iteration : 4 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10], 1: [3, 0, 20, 6, 19, 18, 5], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19], 4: [19, 5, 0, 9, 3], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13], 7: [19, 8, 15, 21, 18, 5, 16], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10], 9: [3, 11, 4, 15, 10, 18, 5], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17], 12: [10, 17, 5, 21, 2, 8, 15, 13], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6], 14: [20, 10, 16, 5, 0, 15], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15], 21: [2, 15, 12, 13, 7, 3, 5, 16]}
@stoer_wagner_minCut	minCutval=  5  graph: Nodes= 22 Edges= 109 	elapsed= 0.0025866750002023764 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  5  graph: Nodes= 22 Edges= 109 	elapsed= 1.9420739119996142 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 109 	elapsed AVG,DEV_STD= (0.034507242900053824, 0.03005690259577766) 	 randGraphIndex:  4 	iteration to reach Optimal:  62
@randMinCut-fixedIter	minCutVal=  5  graph: Nodes= 22 Edges= 109 	elapsed AVG,DEV_STD= (0.10354043620000083, 0.0009110474813338948) 	 randGraphIndex:  4 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8], 1: [3, 0, 20, 6, 19, 18, 5, 9], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7], 4: [19, 5, 0, 9, 3, 16, 12], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18], 14: [20, 10, 16, 5, 0, 15], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9]}
iteration : 5 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8], 1: [3, 0, 20, 6, 19, 18, 5, 9], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7], 4: [19, 5, 0, 9, 3, 16, 12], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18], 14: [20, 10, 16, 5, 0, 15], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9]}
@stoer_wagner_minCut	minCutval=  6  graph: Nodes= 22 Edges= 132 	elapsed= 0.0028664510000453447 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  6  graph: Nodes= 22 Edges= 132 	elapsed= 2.351850973999717 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 132 	elapsed AVG,DEV_STD= (0.03475915559993155, 0.0384679967744086) 	 randGraphIndex:  5 	iteration to reach Optimal:  98
@randMinCut-fixedIter	minCutVal=  6  graph: Nodes= 22 Edges= 132 	elapsed AVG,DEV_STD= (0.11132332229990424, 0.0005428498869167916) 	 randGraphIndex:  5 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8, 21], 1: [3, 0, 20, 6, 19, 18, 5, 9, 14, 11], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7, 5, 11], 4: [19, 5, 0, 9, 3, 16, 12, 11], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8, 3, 20], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9, 16, 20], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3, 11], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1, 16], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16, 4, 3, 1, 7], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18], 14: [20, 10, 16, 5, 0, 15, 21, 1], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11, 18, 9, 6], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13, 16], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10, 6, 5], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9, 14, 0]}
iteration : 6 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8, 21], 1: [3, 0, 20, 6, 19, 18, 5, 9, 14, 11], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7, 5, 11], 4: [19, 5, 0, 9, 3, 16, 12, 11], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8, 3, 20], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9, 16, 20], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3, 11], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1, 16], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16, 4, 3, 1, 7], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18], 14: [20, 10, 16, 5, 0, 15, 21, 1], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11, 18, 9, 6], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13, 16], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10, 6, 5], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9, 14, 0]}
@stoer_wagner_minCut	minCutval=  8  graph: Nodes= 22 Edges= 145 	elapsed= 0.0030554479999409523 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  8  graph: Nodes= 22 Edges= 145 	elapsed= 2.571023643999979 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 145 	elapsed AVG,DEV_STD= (0.03240774349987987, 0.02361039130498638) 	 randGraphIndex:  6 	iteration to reach Optimal:  114
@randMinCut-fixedIter	minCutVal=  8  graph: Nodes= 22 Edges= 145 	elapsed AVG,DEV_STD= (0.11527203140003621, 0.00028351306542973476) 	 randGraphIndex:  6 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8, 21, 18], 1: [3, 0, 20, 6, 19, 18, 5, 9, 14, 11], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10, 4, 9], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7, 5, 11], 4: [19, 5, 0, 9, 3, 16, 12, 11, 2, 13, 7], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8, 3, 20], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9, 16, 20], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3, 11, 10, 4], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1, 16, 2], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20, 7, 21], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16, 4, 3, 1, 7], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7, 18], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18, 4], 14: [20, 10, 16, 5, 0, 15, 21, 1], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11, 18, 9, 6], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13, 16, 0, 12], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10, 6, 5], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9, 14, 0, 10]}
iteration : 7 Graph	Undirected	{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8, 21, 18], 1: [3, 0, 20, 6, 19, 18, 5, 9, 14, 11], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10, 4, 9], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7, 5, 11], 4: [19, 5, 0, 9, 3, 16, 12, 11, 2, 13, 7], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8, 3, 20], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9, 16, 20], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3, 11, 10, 4], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1, 16, 2], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20, 7, 21], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16, 4, 3, 1, 7], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7, 18], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18, 4], 14: [20, 10, 16, 5, 0, 15, 21, 1], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11, 18, 9, 6], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13, 16, 0, 12], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10, 6, 5], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9, 14, 0, 10]}
@stoer_wagner_minCut	minCutval=  8  graph: Nodes= 22 Edges= 153 	elapsed= 0.003133178000098269 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  8  graph: Nodes= 22 Edges= 153 	elapsed= 2.6727174810002907 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 22 Edges= 153 	elapsed AVG,DEV_STD= (0.15038923050024094, 0.14480496430853204) 	 randGraphIndex:  7 	iteration to reach Optimal:  168
@randMinCut-fixedIter	minCutVal=  8  graph: Nodes= 22 Edges= 153 	elapsed AVG,DEV_STD= (0.12010595610017845, 0.002282454063256033) 	 randGraphIndex:  7 	iterations:  242 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 11, 16, 4, 3, 15, 5, 19, 20, 17, 2, 14, 10, 8, 21, 18], 1: [3, 0, 20, 6, 19, 18, 5, 9, 14, 11, 4, 7, 10, 16], 2: [17, 21, 18, 8, 15, 19, 3, 12, 0, 11, 5, 6, 16, 10, 4, 9, 14], 3: [9, 8, 10, 1, 0, 17, 13, 2, 4, 20, 16, 21, 19, 7, 5, 11, 15], 4: [19, 5, 0, 9, 3, 16, 12, 11, 2, 13, 7, 6, 17, 1, 21], 5: [4, 17, 18, 0, 6, 12, 1, 14, 7, 13, 15, 9, 21, 2, 16, 8, 3, 20], 6: [18, 8, 1, 17, 5, 15, 10, 11, 13, 12, 19, 2, 9, 16, 20, 4], 7: [19, 8, 15, 21, 18, 5, 16, 17, 12, 3, 11, 10, 4, 1], 8: [16, 6, 3, 13, 7, 2, 20, 11, 12, 19, 10, 5, 0, 21], 9: [3, 11, 4, 15, 10, 18, 5, 6, 21, 1, 16, 2], 10: [12, 14, 3, 11, 15, 19, 17, 9, 6, 8, 16, 0, 13, 18, 2, 20, 7, 21, 1], 11: [0, 19, 10, 9, 20, 8, 6, 2, 17, 16, 4, 3, 1, 7, 13, 18], 12: [10, 17, 5, 21, 2, 8, 15, 13, 20, 6, 4, 7, 18], 13: [17, 8, 19, 3, 20, 21, 5, 12, 15, 6, 10, 18, 4, 11], 14: [20, 10, 16, 5, 0, 15, 21, 1, 2], 15: [16, 21, 17, 0, 7, 10, 18, 9, 2, 6, 5, 12, 20, 13, 14, 3], 16: [15, 8, 0, 14, 19, 3, 17, 10, 21, 7, 4, 5, 2, 11, 18, 9, 6, 1], 17: [13, 5, 2, 15, 3, 18, 6, 12, 10, 19, 0, 16, 11, 7, 4], 18: [6, 5, 2, 15, 17, 1, 7, 20, 9, 10, 13, 16, 0, 12, 11], 19: [7, 11, 4, 13, 16, 10, 0, 1, 2, 17, 3, 8, 20, 6], 20: [14, 8, 1, 11, 13, 0, 3, 18, 15, 12, 19, 10, 6, 5, 21], 21: [2, 15, 12, 13, 7, 3, 5, 16, 9, 14, 0, 10, 8, 20, 4]}
