
LOGGING TEST WITH:
startN_4_rebuildsN_3_edgeTickenning_8_nodesStep_9_edgeStep_50_statisticsIter_10.log
exploring min cut solver algoritm with a graph of 50 with variable num of edges


iteration : 0 


@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 50 Edges= 49 	elapsed= 0.00503718299933098 	 randGraphIndex:  0
Academic license - for non-commercial use only
@minCutLPIterative	minCutVal=  1  graph: Nodes= 50 Edges= 49 	elapsed= 6.186285618000511 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 49 	elapsed AVG,DEV_STD= (0.0022477461000562473, 0.0015888298585575414) 	 randGraphIndex:  0 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 50 Edges= 49 	elapsed AVG,DEV_STD= (1.050193166200097, 0.007560844683557363) 	 randGraphIndex:  0 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34], 1: [6, 5, 44, 21, 23, 20], 2: [20, 32, 26, 49, 37], 3: [12, 15, 10, 33], 4: [44, 7], 5: [1, 17, 12, 47, 41, 48], 6: [1], 7: [39, 29, 24, 4, 47], 8: [25, 30], 9: [30, 15], 10: [0, 13, 3], 11: [37, 32, 36, 13, 35], 12: [3, 34, 46, 5], 13: [28, 10, 11, 18, 20], 14: [30, 29, 47, 21, 25, 19], 15: [18, 3, 40, 9], 16: [20, 25, 33, 21, 43, 40, 32], 17: [5, 45, 43], 18: [15, 22, 19, 49, 40, 13], 19: [47, 18, 14, 40], 20: [2, 16, 1, 13], 21: [16, 32, 14, 1, 31], 22: [18, 30], 23: [40, 1], 24: [42, 27, 36, 25, 7, 41], 25: [8, 16, 24, 31, 14, 44], 26: [45, 27, 46, 2], 27: [26, 24, 47], 28: [13, 0, 49], 29: [31, 7, 40, 35, 14, 38], 30: [9, 44, 14, 8, 22], 31: [29, 45, 25, 21, 34], 32: [21, 38, 11, 46, 2, 16], 33: [16, 3], 34: [12, 41, 0, 31], 35: [11, 29], 36: [24, 11, 43], 37: [11, 2], 38: [32, 29], 39: [7, 41], 40: [23, 29, 18, 15, 16, 19], 41: [47, 0, 34, 5, 24, 39], 42: [24], 43: [44, 16, 46, 17, 36], 44: [4, 43, 30, 1, 25], 45: [26, 17, 31], 46: [12, 32, 26, 43], 47: [41, 5, 14, 19, 27, 7], 48: [0, 5], 49: [18, 2, 28]}
iteration : 1 


@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 50 Edges= 100 	elapsed= 0.0067564969995146384 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 50 Edges= 100 	elapsed= 10.586289057999238 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 100 	elapsed AVG,DEV_STD= (0.008934718500131566, 0.007863641250336171) 	 randGraphIndex:  1 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 50 Edges= 100 	elapsed AVG,DEV_STD= (1.292636577599933, 0.007648606336578402) 	 randGraphIndex:  1 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18], 1: [6, 5, 44, 21, 23, 20, 30, 2], 2: [20, 32, 26, 49, 37, 1], 3: [12, 15, 10, 33, 7], 4: [44, 7, 38, 16, 49], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21], 6: [1, 31, 0, 44, 7], 7: [39, 29, 24, 4, 47, 3, 6], 8: [25, 30, 10], 9: [30, 15, 10, 26, 27], 10: [0, 13, 3, 34, 9, 8, 26, 12], 11: [37, 32, 36, 13, 35, 20], 12: [3, 34, 46, 5, 42, 33, 10], 13: [28, 10, 11, 18, 20, 19, 39], 14: [30, 29, 47, 21, 25, 19, 33], 15: [18, 3, 40, 9, 17, 34, 20], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46], 17: [5, 45, 43, 48, 15, 37], 18: [15, 22, 19, 49, 40, 13, 26, 0], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44], 20: [2, 16, 1, 13, 11, 48, 15], 21: [16, 32, 14, 1, 31, 27, 5], 22: [18, 30, 40, 29], 23: [40, 1], 24: [42, 27, 36, 25, 7, 41], 25: [8, 16, 24, 31, 14, 44, 41], 26: [45, 27, 46, 2, 18, 34, 9, 10], 27: [26, 24, 47, 21, 31, 9], 28: [13, 0, 49], 29: [31, 7, 40, 35, 14, 38, 22], 30: [9, 44, 14, 8, 22, 1], 31: [29, 45, 25, 21, 34, 6, 27], 32: [21, 38, 11, 46, 2, 16, 5], 33: [16, 3, 49, 42, 14, 12], 34: [12, 41, 0, 31, 10, 15, 26], 35: [11, 29, 19], 36: [24, 11, 43], 37: [11, 2, 17], 38: [32, 29, 4], 39: [7, 41, 49, 5, 13, 43], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41], 41: [47, 0, 34, 5, 24, 39, 25, 40], 42: [24, 12, 33], 43: [44, 16, 46, 17, 36, 39], 44: [4, 43, 30, 1, 25, 6, 19], 45: [26, 17, 31, 40], 46: [12, 32, 26, 43, 19, 16], 47: [41, 5, 14, 19, 27, 7], 48: [0, 5, 17, 20], 49: [18, 2, 28, 39, 33, 4]}
iteration : 2 


@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 50 Edges= 151 	elapsed= 0.008968185999947309 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  2  graph: Nodes= 50 Edges= 151 	elapsed= 14.993710427000224 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 151 	elapsed AVG,DEV_STD= (0.02848424730009356, 0.020626201342135764) 	 randGraphIndex:  2 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 50 Edges= 151 	elapsed AVG,DEV_STD= (1.4920271530997524, 0.006413198200705089) 	 randGraphIndex:  2 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18, 2, 26], 1: [6, 5, 44, 21, 23, 20, 30, 2, 8, 46], 2: [20, 32, 26, 49, 37, 1, 0], 3: [12, 15, 10, 33, 7, 48, 46, 20], 4: [44, 7, 38, 16, 49, 21, 33, 39, 35, 6], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21, 10, 49, 24], 6: [1, 31, 0, 44, 7, 4, 41], 7: [39, 29, 24, 4, 47, 3, 6], 8: [25, 30, 10, 1, 36], 9: [30, 15, 10, 26, 27, 46, 45], 10: [0, 13, 3, 34, 9, 8, 26, 12, 5], 11: [37, 32, 36, 13, 35, 20, 12, 24], 12: [3, 34, 46, 5, 42, 33, 10, 11, 13], 13: [28, 10, 11, 18, 20, 19, 39, 27, 30, 12], 14: [30, 29, 47, 21, 25, 19, 33], 15: [18, 3, 40, 9, 17, 34, 20, 26, 43], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46], 17: [5, 45, 43, 48, 15, 37, 46, 23], 18: [15, 22, 19, 49, 40, 13, 26, 0, 25, 27, 47], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44, 32], 20: [2, 16, 1, 13, 11, 48, 15, 3], 21: [16, 32, 14, 1, 31, 27, 5, 4], 22: [18, 30, 40, 29, 43], 23: [40, 1, 27, 17], 24: [42, 27, 36, 25, 7, 41, 46, 11, 5], 25: [8, 16, 24, 31, 14, 44, 41, 18, 27], 26: [45, 27, 46, 2, 18, 34, 9, 10, 15, 49, 0], 27: [26, 24, 47, 21, 31, 9, 33, 23, 13, 44, 29, 25, 18], 28: [13, 0, 49], 29: [31, 7, 40, 35, 14, 38, 22, 27, 37], 30: [9, 44, 14, 8, 22, 1, 42, 46, 13], 31: [29, 45, 25, 21, 34, 6, 27, 33], 32: [21, 38, 11, 46, 2, 16, 5, 19], 33: [16, 3, 49, 42, 14, 12, 27, 4, 31], 34: [12, 41, 0, 31, 10, 15, 26, 44], 35: [11, 29, 19, 44, 4], 36: [24, 11, 43, 8, 49], 37: [11, 2, 17, 29], 38: [32, 29, 4], 39: [7, 41, 49, 5, 13, 43, 4], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41, 44, 46], 41: [47, 0, 34, 5, 24, 39, 25, 40, 48, 6], 42: [24, 12, 33, 30], 43: [44, 16, 46, 17, 36, 39, 22, 15], 44: [4, 43, 30, 1, 25, 6, 19, 40, 35, 34, 27], 45: [26, 17, 31, 40, 9], 46: [12, 32, 26, 43, 19, 16, 24, 30, 40, 1, 9, 17, 3], 47: [41, 5, 14, 19, 27, 7, 49, 18], 48: [0, 5, 17, 20, 41, 3], 49: [18, 2, 28, 39, 33, 4, 36, 47, 26, 5]}
iteration : 3 


@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 50 Edges= 202 	elapsed= 0.011208252999495016 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  3  graph: Nodes= 50 Edges= 202 	elapsed= 23.03135759199995 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 202 	elapsed AVG,DEV_STD= (0.020962862899887115, 0.015854036555837593) 	 randGraphIndex:  3 	iteration to reach Optimal:  15
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 50 Edges= 202 	elapsed AVG,DEV_STD= (1.669885333900038, 0.00724439098007778) 	 randGraphIndex:  3 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18, 2, 26, 49], 1: [6, 5, 44, 21, 23, 20, 30, 2, 8, 46, 24], 2: [20, 32, 26, 49, 37, 1, 0, 3], 3: [12, 15, 10, 33, 7, 48, 46, 20, 18, 43, 2], 4: [44, 7, 38, 16, 49, 21, 33, 39, 35, 6, 19, 29], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21, 10, 49, 24, 8, 29, 31], 6: [1, 31, 0, 44, 7, 4, 41, 35], 7: [39, 29, 24, 4, 47, 3, 6, 31], 8: [25, 30, 10, 1, 36, 5, 18, 29, 13], 9: [30, 15, 10, 26, 27, 46, 45, 39], 10: [0, 13, 3, 34, 9, 8, 26, 12, 5, 45, 39, 43], 11: [37, 32, 36, 13, 35, 20, 12, 24, 14], 12: [3, 34, 46, 5, 42, 33, 10, 11, 13, 45, 39], 13: [28, 10, 11, 18, 20, 19, 39, 27, 30, 12, 8], 14: [30, 29, 47, 21, 25, 19, 33, 11, 42, 24], 15: [18, 3, 40, 9, 17, 34, 20, 26, 43], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46, 30], 17: [5, 45, 43, 48, 15, 37, 46, 23, 40], 18: [15, 22, 19, 49, 40, 13, 26, 0, 25, 27, 47, 36, 3, 8], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44, 32, 4, 33], 20: [2, 16, 1, 13, 11, 48, 15, 3, 26, 39, 28], 21: [16, 32, 14, 1, 31, 27, 5, 4, 33, 23, 28], 22: [18, 30, 40, 29, 43, 23], 23: [40, 1, 27, 17, 26, 21, 22], 24: [42, 27, 36, 25, 7, 41, 46, 11, 5, 49, 47, 1, 14], 25: [8, 16, 24, 31, 14, 44, 41, 18, 27], 26: [45, 27, 46, 2, 18, 34, 9, 10, 15, 49, 0, 23, 36, 20, 32], 27: [26, 24, 47, 21, 31, 9, 33, 23, 13, 44, 29, 25, 18, 49, 28], 28: [13, 0, 49, 27, 20, 21], 29: [31, 7, 40, 35, 14, 38, 22, 27, 37, 43, 5, 8, 4, 33], 30: [9, 44, 14, 8, 22, 1, 42, 46, 13, 33, 16], 31: [29, 45, 25, 21, 34, 6, 27, 33, 7, 5], 32: [21, 38, 11, 46, 2, 16, 5, 19, 42, 26], 33: [16, 3, 49, 42, 14, 12, 27, 4, 31, 30, 21, 19, 29], 34: [12, 41, 0, 31, 10, 15, 26, 44], 35: [11, 29, 19, 44, 4, 6], 36: [24, 11, 43, 8, 49, 18, 26, 45], 37: [11, 2, 17, 29], 38: [32, 29, 4, 40], 39: [7, 41, 49, 5, 13, 43, 4, 9, 10, 20, 12], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41, 44, 46, 38, 47, 17], 41: [47, 0, 34, 5, 24, 39, 25, 40, 48, 6], 42: [24, 12, 33, 30, 32, 14], 43: [44, 16, 46, 17, 36, 39, 22, 15, 29, 48, 3, 10], 44: [4, 43, 30, 1, 25, 6, 19, 40, 35, 34, 27], 45: [26, 17, 31, 40, 9, 12, 10, 36], 46: [12, 32, 26, 43, 19, 16, 24, 30, 40, 1, 9, 17, 3, 49], 47: [41, 5, 14, 19, 27, 7, 49, 18, 24, 40], 48: [0, 5, 17, 20, 41, 3, 43], 49: [18, 2, 28, 39, 33, 4, 36, 47, 26, 5, 46, 24, 27, 0]}
iteration : 4 


@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 50 Edges= 253 	elapsed= 0.013785223000013502 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  4  graph: Nodes= 50 Edges= 253 	elapsed= 24.453656770000634 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 253 	elapsed AVG,DEV_STD= (0.06807733299983738, 0.06030897984920503) 	 randGraphIndex:  4 	iteration to reach Optimal:  13
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 50 Edges= 253 	elapsed AVG,DEV_STD= (1.8277094911001768, 0.013286942281341092) 	 randGraphIndex:  4 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18, 2, 26, 49, 1, 35, 22, 29], 1: [6, 5, 44, 21, 23, 20, 30, 2, 8, 46, 24, 0, 31, 35, 26], 2: [20, 32, 26, 49, 37, 1, 0, 3, 43, 4], 3: [12, 15, 10, 33, 7, 48, 46, 20, 18, 43, 2], 4: [44, 7, 38, 16, 49, 21, 33, 39, 35, 6, 19, 29, 5, 2, 10, 11], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21, 10, 49, 24, 8, 29, 31, 4], 6: [1, 31, 0, 44, 7, 4, 41, 35, 42], 7: [39, 29, 24, 4, 47, 3, 6, 31, 43, 20, 26, 14], 8: [25, 30, 10, 1, 36, 5, 18, 29, 13, 17, 21, 24], 9: [30, 15, 10, 26, 27, 46, 45, 39, 19, 13], 10: [0, 13, 3, 34, 9, 8, 26, 12, 5, 45, 39, 43, 29, 4, 21], 11: [37, 32, 36, 13, 35, 20, 12, 24, 14, 39, 4, 16], 12: [3, 34, 46, 5, 42, 33, 10, 11, 13, 45, 39], 13: [28, 10, 11, 18, 20, 19, 39, 27, 30, 12, 8, 41, 9, 26], 14: [30, 29, 47, 21, 25, 19, 33, 11, 42, 24, 36, 7, 43], 15: [18, 3, 40, 9, 17, 34, 20, 26, 43, 47, 38, 42, 31], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46, 30, 22, 11], 17: [5, 45, 43, 48, 15, 37, 46, 23, 40, 8], 18: [15, 22, 19, 49, 40, 13, 26, 0, 25, 27, 47, 36, 3, 8, 43, 38], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44, 32, 4, 33, 31, 48, 9, 20], 20: [2, 16, 1, 13, 11, 48, 15, 3, 26, 39, 28, 46, 7, 19], 21: [16, 32, 14, 1, 31, 27, 5, 4, 33, 23, 28, 48, 8, 10], 22: [18, 30, 40, 29, 43, 23, 37, 16, 0], 23: [40, 1, 27, 17, 26, 21, 22, 36, 45], 24: [42, 27, 36, 25, 7, 41, 46, 11, 5, 49, 47, 1, 14, 8], 25: [8, 16, 24, 31, 14, 44, 41, 18, 27], 26: [45, 27, 46, 2, 18, 34, 9, 10, 15, 49, 0, 23, 36, 20, 32, 7, 13, 1], 27: [26, 24, 47, 21, 31, 9, 33, 23, 13, 44, 29, 25, 18, 49, 28], 28: [13, 0, 49, 27, 20, 21, 40, 29, 42], 29: [31, 7, 40, 35, 14, 38, 22, 27, 37, 43, 5, 8, 4, 33, 10, 28, 0], 30: [9, 44, 14, 8, 22, 1, 42, 46, 13, 33, 16], 31: [29, 45, 25, 21, 34, 6, 27, 33, 7, 5, 19, 1, 15], 32: [21, 38, 11, 46, 2, 16, 5, 19, 42, 26, 39], 33: [16, 3, 49, 42, 14, 12, 27, 4, 31, 30, 21, 19, 29, 48], 34: [12, 41, 0, 31, 10, 15, 26, 44], 35: [11, 29, 19, 44, 4, 6, 0, 1], 36: [24, 11, 43, 8, 49, 18, 26, 45, 23, 38, 14], 37: [11, 2, 17, 29, 22], 38: [32, 29, 4, 40, 15, 36, 18], 39: [7, 41, 49, 5, 13, 43, 4, 9, 10, 20, 12, 11, 32], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41, 44, 46, 38, 47, 17, 28], 41: [47, 0, 34, 5, 24, 39, 25, 40, 48, 6, 13], 42: [24, 12, 33, 30, 32, 14, 15, 28, 6], 43: [44, 16, 46, 17, 36, 39, 22, 15, 29, 48, 3, 10, 18, 7, 2, 14], 44: [4, 43, 30, 1, 25, 6, 19, 40, 35, 34, 27], 45: [26, 17, 31, 40, 9, 12, 10, 36, 23], 46: [12, 32, 26, 43, 19, 16, 24, 30, 40, 1, 9, 17, 3, 49, 20], 47: [41, 5, 14, 19, 27, 7, 49, 18, 24, 40, 15], 48: [0, 5, 17, 20, 41, 3, 43, 33, 19, 21], 49: [18, 2, 28, 39, 33, 4, 36, 47, 26, 5, 46, 24, 27, 0]}
iteration : 5 


@stoer_wagner_minCut	minCutval=  5  graph: Nodes= 50 Edges= 304 	elapsed= 0.01472487400042155 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  5  graph: Nodes= 50 Edges= 304 	elapsed= 29.196411212000385 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 304 	elapsed AVG,DEV_STD= (0.2857549239000036, 0.30564772819897384) 	 randGraphIndex:  5 	iteration to reach Optimal:  124
@randMinCut-fixedIter	minCutVal=  5  graph: Nodes= 50 Edges= 304 	elapsed AVG,DEV_STD= (1.9857661988998188, 0.00636887134456692) 	 randGraphIndex:  5 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18, 2, 26, 49, 1, 35, 22, 29, 47, 39, 38], 1: [6, 5, 44, 21, 23, 20, 30, 2, 8, 46, 24, 0, 31, 35, 26, 7], 2: [20, 32, 26, 49, 37, 1, 0, 3, 43, 4], 3: [12, 15, 10, 33, 7, 48, 46, 20, 18, 43, 2, 49, 8, 14], 4: [44, 7, 38, 16, 49, 21, 33, 39, 35, 6, 19, 29, 5, 2, 10, 11, 22], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21, 10, 49, 24, 8, 29, 31, 4, 15, 23], 6: [1, 31, 0, 44, 7, 4, 41, 35, 42, 32, 29, 23], 7: [39, 29, 24, 4, 47, 3, 6, 31, 43, 20, 26, 14, 1], 8: [25, 30, 10, 1, 36, 5, 18, 29, 13, 17, 21, 24, 12, 3, 38], 9: [30, 15, 10, 26, 27, 46, 45, 39, 19, 13, 16, 31, 32], 10: [0, 13, 3, 34, 9, 8, 26, 12, 5, 45, 39, 43, 29, 4, 21, 18], 11: [37, 32, 36, 13, 35, 20, 12, 24, 14, 39, 4, 16, 29], 12: [3, 34, 46, 5, 42, 33, 10, 11, 13, 45, 39, 25, 8, 40], 13: [28, 10, 11, 18, 20, 19, 39, 27, 30, 12, 8, 41, 9, 26, 35, 34, 40], 14: [30, 29, 47, 21, 25, 19, 33, 11, 42, 24, 36, 7, 43, 44, 3], 15: [18, 3, 40, 9, 17, 34, 20, 26, 43, 47, 38, 42, 31, 5, 36], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46, 30, 22, 11, 9, 41], 17: [5, 45, 43, 48, 15, 37, 46, 23, 40, 8, 31, 29, 27], 18: [15, 22, 19, 49, 40, 13, 26, 0, 25, 27, 47, 36, 3, 8, 43, 38, 10], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44, 32, 4, 33, 31, 48, 9, 20], 20: [2, 16, 1, 13, 11, 48, 15, 3, 26, 39, 28, 46, 7, 19], 21: [16, 32, 14, 1, 31, 27, 5, 4, 33, 23, 28, 48, 8, 10, 34, 29, 44], 22: [18, 30, 40, 29, 43, 23, 37, 16, 0, 44, 4], 23: [40, 1, 27, 17, 26, 21, 22, 36, 45, 5, 32, 6], 24: [42, 27, 36, 25, 7, 41, 46, 11, 5, 49, 47, 1, 14, 8], 25: [8, 16, 24, 31, 14, 44, 41, 18, 27, 12, 49], 26: [45, 27, 46, 2, 18, 34, 9, 10, 15, 49, 0, 23, 36, 20, 32, 7, 13, 1, 43, 48], 27: [26, 24, 47, 21, 31, 9, 33, 23, 13, 44, 29, 25, 18, 49, 28, 32, 37, 17, 43], 28: [13, 0, 49, 27, 20, 21, 40, 29, 42], 29: [31, 7, 40, 35, 14, 38, 22, 27, 37, 43, 5, 8, 4, 33, 10, 28, 0, 17, 21, 6, 11], 30: [9, 44, 14, 8, 22, 1, 42, 46, 13, 33, 16, 38], 31: [29, 45, 25, 21, 34, 6, 27, 33, 7, 5, 19, 1, 15, 17, 9, 43, 40], 32: [21, 38, 11, 46, 2, 16, 5, 19, 42, 26, 39, 27, 6, 9, 23, 49], 33: [16, 3, 49, 42, 14, 12, 27, 4, 31, 30, 21, 19, 29, 48], 34: [12, 41, 0, 31, 10, 15, 26, 44, 43, 13, 21], 35: [11, 29, 19, 44, 4, 6, 0, 1, 13], 36: [24, 11, 43, 8, 49, 18, 26, 45, 23, 38, 14, 42, 15], 37: [11, 2, 17, 29, 22, 49, 27], 38: [32, 29, 4, 40, 15, 36, 18, 30, 8, 0], 39: [7, 41, 49, 5, 13, 43, 4, 9, 10, 20, 12, 11, 32, 0], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41, 44, 46, 38, 47, 17, 28, 31, 12, 13], 41: [47, 0, 34, 5, 24, 39, 25, 40, 48, 6, 13, 45, 46, 16], 42: [24, 12, 33, 30, 32, 14, 15, 28, 6, 36], 43: [44, 16, 46, 17, 36, 39, 22, 15, 29, 48, 3, 10, 18, 7, 2, 14, 26, 31, 34, 27], 44: [4, 43, 30, 1, 25, 6, 19, 40, 35, 34, 27, 22, 14, 21], 45: [26, 17, 31, 40, 9, 12, 10, 36, 23, 41], 46: [12, 32, 26, 43, 19, 16, 24, 30, 40, 1, 9, 17, 3, 49, 20, 41], 47: [41, 5, 14, 19, 27, 7, 49, 18, 24, 40, 15, 0], 48: [0, 5, 17, 20, 41, 3, 43, 33, 19, 21, 26], 49: [18, 2, 28, 39, 33, 4, 36, 47, 26, 5, 46, 24, 27, 0, 37, 3, 25, 32]}
iteration : 6 


@stoer_wagner_minCut	minCutval=  7  graph: Nodes= 50 Edges= 355 	elapsed= 0.016832915999657416 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  7  graph: Nodes= 50 Edges= 355 	elapsed= 36.692433093000545 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 355 	elapsed AVG,DEV_STD= (0.517444828400221, 0.3665765563225602) 	 randGraphIndex:  6 	iteration to reach Optimal:  37
@randMinCut-fixedIter	minCutVal=  7  graph: Nodes= 50 Edges= 355 	elapsed AVG,DEV_STD= (2.395597505300157, 0.15792129258886473) 	 randGraphIndex:  6 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18, 2, 26, 49, 1, 35, 22, 29, 47, 39, 38], 1: [6, 5, 44, 21, 23, 20, 30, 2, 8, 46, 24, 0, 31, 35, 26, 7, 15, 25], 2: [20, 32, 26, 49, 37, 1, 0, 3, 43, 4, 9, 41], 3: [12, 15, 10, 33, 7, 48, 46, 20, 18, 43, 2, 49, 8, 14, 39], 4: [44, 7, 38, 16, 49, 21, 33, 39, 35, 6, 19, 29, 5, 2, 10, 11, 22, 43, 18], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21, 10, 49, 24, 8, 29, 31, 4, 15, 23], 6: [1, 31, 0, 44, 7, 4, 41, 35, 42, 32, 29, 23, 37], 7: [39, 29, 24, 4, 47, 3, 6, 31, 43, 20, 26, 14, 1], 8: [25, 30, 10, 1, 36, 5, 18, 29, 13, 17, 21, 24, 12, 3, 38, 22], 9: [30, 15, 10, 26, 27, 46, 45, 39, 19, 13, 16, 31, 32, 2, 23], 10: [0, 13, 3, 34, 9, 8, 26, 12, 5, 45, 39, 43, 29, 4, 21, 18, 36, 20], 11: [37, 32, 36, 13, 35, 20, 12, 24, 14, 39, 4, 16, 29, 19, 23, 17], 12: [3, 34, 46, 5, 42, 33, 10, 11, 13, 45, 39, 25, 8, 40, 30], 13: [28, 10, 11, 18, 20, 19, 39, 27, 30, 12, 8, 41, 9, 26, 35, 34, 40, 44], 14: [30, 29, 47, 21, 25, 19, 33, 11, 42, 24, 36, 7, 43, 44, 3, 37], 15: [18, 3, 40, 9, 17, 34, 20, 26, 43, 47, 38, 42, 31, 5, 36, 49, 35, 1], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46, 30, 22, 11, 9, 41, 19], 17: [5, 45, 43, 48, 15, 37, 46, 23, 40, 8, 31, 29, 27, 25, 11, 18], 18: [15, 22, 19, 49, 40, 13, 26, 0, 25, 27, 47, 36, 3, 8, 43, 38, 10, 4, 17, 39], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44, 32, 4, 33, 31, 48, 9, 20, 11, 16], 20: [2, 16, 1, 13, 11, 48, 15, 3, 26, 39, 28, 46, 7, 19, 21, 10], 21: [16, 32, 14, 1, 31, 27, 5, 4, 33, 23, 28, 48, 8, 10, 34, 29, 44, 20], 22: [18, 30, 40, 29, 43, 23, 37, 16, 0, 44, 4, 49, 8], 23: [40, 1, 27, 17, 26, 21, 22, 36, 45, 5, 32, 6, 11, 39, 48, 9], 24: [42, 27, 36, 25, 7, 41, 46, 11, 5, 49, 47, 1, 14, 8, 32, 43, 34], 25: [8, 16, 24, 31, 14, 44, 41, 18, 27, 12, 49, 1, 17], 26: [45, 27, 46, 2, 18, 34, 9, 10, 15, 49, 0, 23, 36, 20, 32, 7, 13, 1, 43, 48, 29], 27: [26, 24, 47, 21, 31, 9, 33, 23, 13, 44, 29, 25, 18, 49, 28, 32, 37, 17, 43], 28: [13, 0, 49, 27, 20, 21, 40, 29, 42], 29: [31, 7, 40, 35, 14, 38, 22, 27, 37, 43, 5, 8, 4, 33, 10, 28, 0, 17, 21, 6, 11, 26], 30: [9, 44, 14, 8, 22, 1, 42, 46, 13, 33, 16, 38, 45, 12], 31: [29, 45, 25, 21, 34, 6, 27, 33, 7, 5, 19, 1, 15, 17, 9, 43, 40], 32: [21, 38, 11, 46, 2, 16, 5, 19, 42, 26, 39, 27, 6, 9, 23, 49, 24, 34, 41], 33: [16, 3, 49, 42, 14, 12, 27, 4, 31, 30, 21, 19, 29, 48], 34: [12, 41, 0, 31, 10, 15, 26, 44, 43, 13, 21, 38, 45, 32, 24], 35: [11, 29, 19, 44, 4, 6, 0, 1, 13, 15, 43], 36: [24, 11, 43, 8, 49, 18, 26, 45, 23, 38, 14, 42, 15, 44, 40, 10], 37: [11, 2, 17, 29, 22, 49, 27, 6, 47, 14], 38: [32, 29, 4, 40, 15, 36, 18, 30, 8, 0, 34, 41], 39: [7, 41, 49, 5, 13, 43, 4, 9, 10, 20, 12, 11, 32, 0, 44, 47, 3, 40, 23, 18], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41, 44, 46, 38, 47, 17, 28, 31, 12, 13, 36, 39], 41: [47, 0, 34, 5, 24, 39, 25, 40, 48, 6, 13, 45, 46, 16, 38, 2, 32], 42: [24, 12, 33, 30, 32, 14, 15, 28, 6, 36], 43: [44, 16, 46, 17, 36, 39, 22, 15, 29, 48, 3, 10, 18, 7, 2, 14, 26, 31, 34, 27, 4, 24, 35], 44: [4, 43, 30, 1, 25, 6, 19, 40, 35, 34, 27, 22, 14, 21, 36, 39, 13, 47], 45: [26, 17, 31, 40, 9, 12, 10, 36, 23, 41, 30, 34], 46: [12, 32, 26, 43, 19, 16, 24, 30, 40, 1, 9, 17, 3, 49, 20, 41], 47: [41, 5, 14, 19, 27, 7, 49, 18, 24, 40, 15, 0, 39, 37, 44], 48: [0, 5, 17, 20, 41, 3, 43, 33, 19, 21, 26, 23], 49: [18, 2, 28, 39, 33, 4, 36, 47, 26, 5, 46, 24, 27, 0, 37, 3, 25, 32, 15, 22]}
iteration : 7 


@stoer_wagner_minCut	minCutval=  9  graph: Nodes= 50 Edges= 401 	elapsed= 0.02043686399974831 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  9  graph: Nodes= 50 Edges= 401 	elapsed= 42.09496205599953 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 50 Edges= 401 	elapsed AVG,DEV_STD= (1.3510979659000442, 1.177843123997003) 	 randGraphIndex:  7 	iteration to reach Optimal:  159
@randMinCut-fixedIter	minCutVal=  9  graph: Nodes= 50 Edges= 401 	elapsed AVG,DEV_STD= (2.493279489300039, 0.17402115763239132) 	 randGraphIndex:  7 	iterations:  1250 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [48, 10, 28, 41, 34, 6, 19, 18, 2, 26, 49, 1, 35, 22, 29, 47, 39, 38, 17, 14], 1: [6, 5, 44, 21, 23, 20, 30, 2, 8, 46, 24, 0, 31, 35, 26, 7, 15, 25, 43, 16], 2: [20, 32, 26, 49, 37, 1, 0, 3, 43, 4, 9, 41, 47], 3: [12, 15, 10, 33, 7, 48, 46, 20, 18, 43, 2, 49, 8, 14, 39, 13, 41, 25, 23], 4: [44, 7, 38, 16, 49, 21, 33, 39, 35, 6, 19, 29, 5, 2, 10, 11, 22, 43, 18], 5: [1, 17, 12, 47, 41, 48, 39, 32, 21, 10, 49, 24, 8, 29, 31, 4, 15, 23, 44], 6: [1, 31, 0, 44, 7, 4, 41, 35, 42, 32, 29, 23, 37, 11, 38], 7: [39, 29, 24, 4, 47, 3, 6, 31, 43, 20, 26, 14, 1, 15, 49, 44], 8: [25, 30, 10, 1, 36, 5, 18, 29, 13, 17, 21, 24, 12, 3, 38, 22], 9: [30, 15, 10, 26, 27, 46, 45, 39, 19, 13, 16, 31, 32, 2, 23, 37], 10: [0, 13, 3, 34, 9, 8, 26, 12, 5, 45, 39, 43, 29, 4, 21, 18, 36, 20, 35, 14], 11: [37, 32, 36, 13, 35, 20, 12, 24, 14, 39, 4, 16, 29, 19, 23, 17, 28, 6], 12: [3, 34, 46, 5, 42, 33, 10, 11, 13, 45, 39, 25, 8, 40, 30, 49], 13: [28, 10, 11, 18, 20, 19, 39, 27, 30, 12, 8, 41, 9, 26, 35, 34, 40, 44, 25, 3], 14: [30, 29, 47, 21, 25, 19, 33, 11, 42, 24, 36, 7, 43, 44, 3, 37, 22, 10, 0], 15: [18, 3, 40, 9, 17, 34, 20, 26, 43, 47, 38, 42, 31, 5, 36, 49, 35, 1, 7], 16: [20, 25, 33, 21, 43, 40, 32, 4, 46, 30, 22, 11, 9, 41, 19, 29, 1, 48], 17: [5, 45, 43, 48, 15, 37, 46, 23, 40, 8, 31, 29, 27, 25, 11, 18, 0], 18: [15, 22, 19, 49, 40, 13, 26, 0, 25, 27, 47, 36, 3, 8, 43, 38, 10, 4, 17, 39], 19: [47, 18, 14, 40, 13, 35, 0, 46, 44, 32, 4, 33, 31, 48, 9, 20, 11, 16, 34], 20: [2, 16, 1, 13, 11, 48, 15, 3, 26, 39, 28, 46, 7, 19, 21, 10, 31], 21: [16, 32, 14, 1, 31, 27, 5, 4, 33, 23, 28, 48, 8, 10, 34, 29, 44, 20, 37], 22: [18, 30, 40, 29, 43, 23, 37, 16, 0, 44, 4, 49, 8, 14, 31], 23: [40, 1, 27, 17, 26, 21, 22, 36, 45, 5, 32, 6, 11, 39, 48, 9, 3], 24: [42, 27, 36, 25, 7, 41, 46, 11, 5, 49, 47, 1, 14, 8, 32, 43, 34], 25: [8, 16, 24, 31, 14, 44, 41, 18, 27, 12, 49, 1, 17, 13, 3], 26: [45, 27, 46, 2, 18, 34, 9, 10, 15, 49, 0, 23, 36, 20, 32, 7, 13, 1, 43, 48, 29, 40], 27: [26, 24, 47, 21, 31, 9, 33, 23, 13, 44, 29, 25, 18, 49, 28, 32, 37, 17, 43], 28: [13, 0, 49, 27, 20, 21, 40, 29, 42, 11, 44], 29: [31, 7, 40, 35, 14, 38, 22, 27, 37, 43, 5, 8, 4, 33, 10, 28, 0, 17, 21, 6, 11, 26, 16, 44], 30: [9, 44, 14, 8, 22, 1, 42, 46, 13, 33, 16, 38, 45, 12], 31: [29, 45, 25, 21, 34, 6, 27, 33, 7, 5, 19, 1, 15, 17, 9, 43, 40, 20, 22, 44], 32: [21, 38, 11, 46, 2, 16, 5, 19, 42, 26, 39, 27, 6, 9, 23, 49, 24, 34, 41], 33: [16, 3, 49, 42, 14, 12, 27, 4, 31, 30, 21, 19, 29, 48], 34: [12, 41, 0, 31, 10, 15, 26, 44, 43, 13, 21, 38, 45, 32, 24, 19], 35: [11, 29, 19, 44, 4, 6, 0, 1, 13, 15, 43, 10], 36: [24, 11, 43, 8, 49, 18, 26, 45, 23, 38, 14, 42, 15, 44, 40, 10, 47, 41], 37: [11, 2, 17, 29, 22, 49, 27, 6, 47, 14, 21, 9], 38: [32, 29, 4, 40, 15, 36, 18, 30, 8, 0, 34, 41, 46, 6], 39: [7, 41, 49, 5, 13, 43, 4, 9, 10, 20, 12, 11, 32, 0, 44, 47, 3, 40, 23, 18, 45], 40: [23, 29, 18, 15, 16, 19, 45, 22, 41, 44, 46, 38, 47, 17, 28, 31, 12, 13, 36, 39, 26], 41: [47, 0, 34, 5, 24, 39, 25, 40, 48, 6, 13, 45, 46, 16, 38, 2, 32, 36, 3], 42: [24, 12, 33, 30, 32, 14, 15, 28, 6, 36], 43: [44, 16, 46, 17, 36, 39, 22, 15, 29, 48, 3, 10, 18, 7, 2, 14, 26, 31, 34, 27, 4, 24, 35, 1], 44: [4, 43, 30, 1, 25, 6, 19, 40, 35, 34, 27, 22, 14, 21, 36, 39, 13, 47, 28, 29, 31, 5, 7], 45: [26, 17, 31, 40, 9, 12, 10, 36, 23, 41, 30, 34, 39, 47], 46: [12, 32, 26, 43, 19, 16, 24, 30, 40, 1, 9, 17, 3, 49, 20, 41, 38], 47: [41, 5, 14, 19, 27, 7, 49, 18, 24, 40, 15, 0, 39, 37, 44, 36, 45, 2], 48: [0, 5, 17, 20, 41, 3, 43, 33, 19, 21, 26, 23, 16], 49: [18, 2, 28, 39, 33, 4, 36, 47, 26, 5, 46, 24, 27, 0, 37, 3, 25, 32, 15, 22, 12, 7]}
exploring min cut solver algoritm with a graph of 59 with variable num of edges


iteration : 0 


@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 59 Edges= 58 	elapsed= 0.0054998300001898315 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 59 Edges= 58 	elapsed= 10.113988264999534 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 59 Edges= 58 	elapsed AVG,DEV_STD= (0.0035483306000969606, 0.0030746634828806136) 	 randGraphIndex:  0 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 59 Edges= 58 	elapsed AVG,DEV_STD= (1.9499501241999497, 0.07048465112875767) 	 randGraphIndex:  0 	iterations:  1740 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [14, 18], 1: [21, 6, 56, 42], 2: [9, 52, 11, 3, 14], 3: [33, 47, 36, 4, 55, 2, 27], 4: [42, 36, 32, 18, 25, 3], 5: [10, 31, 34], 6: [31, 41, 1, 10], 7: [53, 49, 12], 8: [39, 27, 57, 50], 9: [20, 2], 10: [5, 39, 6, 23, 21], 11: [2, 32, 18, 13], 12: [25, 7, 34], 13: [53, 37, 58, 56, 11], 14: [23, 32, 0, 30, 36, 2], 15: [26, 37], 16: [26, 31], 17: [28, 37, 42, 47, 24], 18: [0, 24, 11, 4, 27, 50, 38], 19: [47, 34, 55, 38, 45, 24, 52, 54], 20: [40, 9, 42, 27], 21: [1, 10], 22: [36, 32], 23: [49, 14, 41, 35, 10], 24: [18, 51, 19, 57, 17, 34], 25: [12, 48, 34, 4, 39, 33, 40], 26: [15, 16, 35, 41, 51], 27: [51, 8, 18, 3, 20], 28: [46, 17], 29: [32], 30: [33, 14, 34], 31: [6, 16, 5, 35, 49], 32: [29, 11, 22, 14, 4], 33: [30, 3, 49, 25], 34: [25, 19, 5, 12, 24, 30], 35: [45, 26, 23, 31], 36: [4, 22, 3, 14], 37: [44, 13, 17, 42, 15], 38: [19, 52, 47, 18], 39: [10, 8, 25], 40: [43, 20, 25], 41: [26, 6, 23], 42: [17, 1, 4, 37, 20], 43: [40, 55], 44: [37], 45: [35, 19], 46: [28], 47: [3, 19, 17, 38], 48: [25], 49: [23, 7, 33, 31], 50: [8, 58, 18], 51: [24, 27, 26], 52: [38, 2, 19], 53: [7, 13], 54: [56, 19], 55: [19, 3, 43], 56: [54, 1, 13], 57: [8, 24], 58: [50, 13]}
iteration : 1 


@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 59 Edges= 109 	elapsed= 0.00899671400020452 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 59 Edges= 109 	elapsed= 16.910891923000236 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 59 Edges= 109 	elapsed AVG,DEV_STD= (0.003474456000003556, 0.0021401905216161857) 	 randGraphIndex:  1 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 59 Edges= 109 	elapsed AVG,DEV_STD= (2.3313224471001375, 0.06804401921526317) 	 randGraphIndex:  1 	iterations:  1740 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [14, 18, 53, 1], 1: [21, 6, 56, 42, 14, 0], 2: [9, 52, 11, 3, 14, 27, 38, 7], 3: [33, 47, 36, 4, 55, 2, 27, 34, 38, 21, 5], 4: [42, 36, 32, 18, 25, 3, 35, 8], 5: [10, 31, 34, 3], 6: [31, 41, 1, 10], 7: [53, 49, 12, 45, 41, 58, 2], 8: [39, 27, 57, 50, 4], 9: [20, 2, 51, 47, 25], 10: [5, 39, 6, 23, 21, 40], 11: [2, 32, 18, 13, 45], 12: [25, 7, 34], 13: [53, 37, 58, 56, 11, 33, 32], 14: [23, 32, 0, 30, 36, 2, 1, 54, 49], 15: [26, 37, 56], 16: [26, 31], 17: [28, 37, 42, 47, 24, 35, 46], 18: [0, 24, 11, 4, 27, 50, 38], 19: [47, 34, 55, 38, 45, 24, 52, 54, 43], 20: [40, 9, 42, 27, 34], 21: [1, 10, 3], 22: [36, 32, 29], 23: [49, 14, 41, 35, 10, 34], 24: [18, 51, 19, 57, 17, 34], 25: [12, 48, 34, 4, 39, 33, 40, 32, 9], 26: [15, 16, 35, 41, 51, 33], 27: [51, 8, 18, 3, 20, 2], 28: [46, 17], 29: [32, 53, 40, 22], 30: [33, 14, 34, 35], 31: [6, 16, 5, 35, 49, 57], 32: [29, 11, 22, 14, 4, 25, 13, 41], 33: [30, 3, 49, 25, 26, 13], 34: [25, 19, 5, 12, 24, 30, 20, 23, 3], 35: [45, 26, 23, 31, 4, 17, 49, 30], 36: [4, 22, 3, 14, 37, 54], 37: [44, 13, 17, 42, 15, 36, 50], 38: [19, 52, 47, 18, 2, 3, 40], 39: [10, 8, 25], 40: [43, 20, 25, 29, 10, 38], 41: [26, 6, 23, 54, 50, 7, 32], 42: [17, 1, 4, 37, 20, 54], 43: [40, 55, 19], 44: [37, 49], 45: [35, 19, 7, 11, 56], 46: [28, 17], 47: [3, 19, 17, 38, 49, 9], 48: [25, 58], 49: [23, 7, 33, 31, 14, 47, 44, 35], 50: [8, 58, 18, 41, 37], 51: [24, 27, 26, 9], 52: [38, 2, 19, 57], 53: [7, 13, 29, 0], 54: [56, 19, 41, 14, 36, 42], 55: [19, 3, 43], 56: [54, 1, 13, 15, 45], 57: [8, 24, 52, 31], 58: [50, 13, 48, 7]}