
LOGGING TEST WITH:
startN_4_rebuildsN_5_edgeTickenning_10_nodesStep_7_edgeStep_3_statisticsIter_3.log
exploring min cut solver algoritm with a graph of 4 with variable num of edges


iteration : 0 Graph	Undirected	{0: [1, 3], 1: [2, 0], 2: [1], 3: [0]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 4 Edges= 3 	elapsed= 0.00021870599994144868 	 randGraphIndex:  0
Academic license - for non-commercial use only
@minCutLPIterative	minCutVal=  1  graph: Nodes= 4 Edges= 3 	elapsed= 0.02520163700046396 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 3 	elapsed AVG,DEV_STD= (9.123233364031573e-05, 4.325408626163688e-05) 	 randGraphIndex:  0 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 4 Edges= 3 	elapsed AVG,DEV_STD= (0.0003128689998751118, 3.921183735401526e-05) 	 randGraphIndex:  0 	iterations:  8 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [1, 3, 2], 1: [2, 0, 3], 2: [1, 0, 3], 3: [0, 1, 2]}
iteration : 1 Graph	Undirected	{0: [1, 3, 2], 1: [2, 0, 3], 2: [1, 0, 3], 3: [0, 1, 2]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 4 Edges= 6 	elapsed= 0.0001784940004654345 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  3  graph: Nodes= 4 Edges= 6 	elapsed= 0.0057567919993744 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 6 	elapsed AVG,DEV_STD= (7.271066685158682e-05, 4.325143284482033e-05) 	 randGraphIndex:  1 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 4 Edges= 6 	elapsed AVG,DEV_STD= (0.00032977533373923507, 1.3795790904778297e-05) 	 randGraphIndex:  1 	iterations:  8 	delta between founded sol and Opt one:  0
max num of edges reached for  4  graph
exploring min cut solver algoritm with a graph of 11 with variable num of edges


iteration : 0 Graph	Undirected	{0: [7, 2], 1: [9, 5], 2: [0, 6], 3: [5, 7], 4: [6, 8], 5: [1, 3], 6: [2, 4], 7: [3, 0], 8: [4, 10], 9: [1], 10: [8]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 11 Edges= 10 	elapsed= 0.000364464000085718 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 11 Edges= 10 	elapsed= 0.07605244799924549 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 10 	elapsed AVG,DEV_STD= (0.0013613763333826985, 0.0006592506886210573) 	 randGraphIndex:  0 	iteration to reach Optimal:  9
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 11 Edges= 10 	elapsed AVG,DEV_STD= (0.006363438333513234, 1.0439458333210555e-05) 	 randGraphIndex:  0 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10], 1: [9, 5, 10], 2: [0, 6], 3: [5, 7], 4: [6, 8], 5: [1, 3, 9], 6: [2, 4], 7: [3, 0], 8: [4, 10, 9], 9: [1, 8, 5], 10: [8, 0, 1]}
iteration : 1 Graph	Undirected	{0: [7, 2, 10], 1: [9, 5, 10], 2: [0, 6], 3: [5, 7], 4: [6, 8], 5: [1, 3, 9], 6: [2, 4], 7: [3, 0], 8: [4, 10, 9], 9: [1, 8, 5], 10: [8, 0, 1]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 11 Edges= 14 	elapsed= 0.00042077900070580654 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  2  graph: Nodes= 11 Edges= 14 	elapsed= 0.09183431299970835 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 14 	elapsed AVG,DEV_STD= (0.0009622990000934806, 0.0006501322945244586) 	 randGraphIndex:  1 	iteration to reach Optimal:  12
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 11 Edges= 14 	elapsed AVG,DEV_STD= (0.007052542999796667, 1.5131151861892471e-05) 	 randGraphIndex:  1 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10], 1: [9, 5, 10, 3, 8], 2: [0, 6, 9], 3: [5, 7, 1], 4: [6, 8], 5: [1, 3, 9], 6: [2, 4, 10], 7: [3, 0], 8: [4, 10, 9, 1], 9: [1, 8, 5, 2], 10: [8, 0, 1, 6]}
iteration : 2 Graph	Undirected	{0: [7, 2, 10], 1: [9, 5, 10, 3, 8], 2: [0, 6, 9], 3: [5, 7, 1], 4: [6, 8], 5: [1, 3, 9], 6: [2, 4, 10], 7: [3, 0], 8: [4, 10, 9, 1], 9: [1, 8, 5, 2], 10: [8, 0, 1, 6]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 11 Edges= 18 	elapsed= 0.0004634530005205306 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  2  graph: Nodes= 11 Edges= 18 	elapsed= 0.1701042349995987 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 18 	elapsed AVG,DEV_STD= (0.0007439649998559617, 0.0006359016888516856) 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 11 Edges= 18 	elapsed AVG,DEV_STD= (0.007438561333704759, 5.4073163902606455e-05) 	 randGraphIndex:  2 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5], 1: [9, 5, 10, 3, 8], 2: [0, 6, 9], 3: [5, 7, 1], 4: [6, 8], 5: [1, 3, 9, 6, 0], 6: [2, 4, 10, 9, 5], 7: [3, 0], 8: [4, 10, 9, 1], 9: [1, 8, 5, 2, 6, 10], 10: [8, 0, 1, 6, 9]}
iteration : 3 Graph	Undirected	{0: [7, 2, 10, 5], 1: [9, 5, 10, 3, 8], 2: [0, 6, 9], 3: [5, 7, 1], 4: [6, 8], 5: [1, 3, 9, 6, 0], 6: [2, 4, 10, 9, 5], 7: [3, 0], 8: [4, 10, 9, 1], 9: [1, 8, 5, 2, 6, 10], 10: [8, 0, 1, 6, 9]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 11 Edges= 22 	elapsed= 0.000506068000504456 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  2  graph: Nodes= 11 Edges= 22 	elapsed= 0.1215514859995892 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 22 	elapsed AVG,DEV_STD= (0.0003154593335542207, 0.00015641076392493958) 	 randGraphIndex:  3 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 11 Edges= 22 	elapsed AVG,DEV_STD= (0.00783139666691568, 4.856942609042538e-05) 	 randGraphIndex:  3 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5], 1: [9, 5, 10, 3, 8], 2: [0, 6, 9, 8, 5], 3: [5, 7, 1], 4: [6, 8], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7], 7: [3, 0, 10, 6], 8: [4, 10, 9, 1, 2], 9: [1, 8, 5, 2, 6, 10], 10: [8, 0, 1, 6, 9, 7]}
iteration : 4 Graph	Undirected	{0: [7, 2, 10, 5], 1: [9, 5, 10, 3, 8], 2: [0, 6, 9, 8, 5], 3: [5, 7, 1], 4: [6, 8], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7], 7: [3, 0, 10, 6], 8: [4, 10, 9, 1, 2], 9: [1, 8, 5, 2, 6, 10], 10: [8, 0, 1, 6, 9, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 11 Edges= 26 	elapsed= 0.0005628049993902096 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  2  graph: Nodes= 11 Edges= 26 	elapsed= 0.13775676899967948 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 26 	elapsed AVG,DEV_STD= (0.005908936333374489, 0.0037742604965984973) 	 randGraphIndex:  4 	iteration to reach Optimal:  56
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 11 Edges= 26 	elapsed AVG,DEV_STD= (0.00885774066682643, 0.000750077247575225) 	 randGraphIndex:  4 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5], 1: [9, 5, 10, 3, 8, 7], 2: [0, 6, 9, 8, 5], 3: [5, 7, 1], 4: [6, 8, 10, 7], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7], 7: [3, 0, 10, 6, 1, 8, 4], 8: [4, 10, 9, 1, 2, 7], 9: [1, 8, 5, 2, 6, 10], 10: [8, 0, 1, 6, 9, 7, 4]}
iteration : 5 Graph	Undirected	{0: [7, 2, 10, 5], 1: [9, 5, 10, 3, 8, 7], 2: [0, 6, 9, 8, 5], 3: [5, 7, 1], 4: [6, 8, 10, 7], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7], 7: [3, 0, 10, 6, 1, 8, 4], 8: [4, 10, 9, 1, 2, 7], 9: [1, 8, 5, 2, 6, 10], 10: [8, 0, 1, 6, 9, 7, 4]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 11 Edges= 30 	elapsed= 0.000559376999262895 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  3  graph: Nodes= 11 Edges= 30 	elapsed= 0.15202836899970862 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 30 	elapsed AVG,DEV_STD= (0.004422366333528771, 0.003288543752093614) 	 randGraphIndex:  5 	iteration to reach Optimal:  48
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 11 Edges= 30 	elapsed AVG,DEV_STD= (0.008504382000258678, 6.010427073515793e-05) 	 randGraphIndex:  5 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5, 4], 1: [9, 5, 10, 3, 8, 7], 2: [0, 6, 9, 8, 5, 3, 7], 3: [5, 7, 1, 2], 4: [6, 8, 10, 7, 0, 9], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7], 7: [3, 0, 10, 6, 1, 8, 4, 2], 8: [4, 10, 9, 1, 2, 7], 9: [1, 8, 5, 2, 6, 10, 4], 10: [8, 0, 1, 6, 9, 7, 4]}
iteration : 6 Graph	Undirected	{0: [7, 2, 10, 5, 4], 1: [9, 5, 10, 3, 8, 7], 2: [0, 6, 9, 8, 5, 3, 7], 3: [5, 7, 1, 2], 4: [6, 8, 10, 7, 0, 9], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7], 7: [3, 0, 10, 6, 1, 8, 4, 2], 8: [4, 10, 9, 1, 2, 7], 9: [1, 8, 5, 2, 6, 10, 4], 10: [8, 0, 1, 6, 9, 7, 4]}
@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 11 Edges= 34 	elapsed= 0.0006480140000348911 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  4  graph: Nodes= 11 Edges= 34 	elapsed= 0.17573775299933914 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 34 	elapsed AVG,DEV_STD= (0.0014859570004167229, 0.0009035130135839981) 	 randGraphIndex:  6 	iteration to reach Optimal:  14
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 11 Edges= 34 	elapsed AVG,DEV_STD= (0.00884438333317424, 6.28866365836908e-05) 	 randGraphIndex:  6 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5, 4, 1], 1: [9, 5, 10, 3, 8, 7, 0], 2: [0, 6, 9, 8, 5, 3, 7, 4], 3: [5, 7, 1, 2, 6, 8], 4: [6, 8, 10, 7, 0, 9, 2], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2], 8: [4, 10, 9, 1, 2, 7, 3], 9: [1, 8, 5, 2, 6, 10, 4], 10: [8, 0, 1, 6, 9, 7, 4]}
iteration : 7 Graph	Undirected	{0: [7, 2, 10, 5, 4, 1], 1: [9, 5, 10, 3, 8, 7, 0], 2: [0, 6, 9, 8, 5, 3, 7, 4], 3: [5, 7, 1, 2, 6, 8], 4: [6, 8, 10, 7, 0, 9, 2], 5: [1, 3, 9, 6, 0, 2], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2], 8: [4, 10, 9, 1, 2, 7, 3], 9: [1, 8, 5, 2, 6, 10, 4], 10: [8, 0, 1, 6, 9, 7, 4]}
@stoer_wagner_minCut	minCutval=  6  graph: Nodes= 11 Edges= 38 	elapsed= 0.0006392439991032006 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  6  graph: Nodes= 11 Edges= 38 	elapsed= 0.18211058599990793 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 38 	elapsed AVG,DEV_STD= (0.0013336680003703805, 0.0008412495674101627) 	 randGraphIndex:  7 	iteration to reach Optimal:  8
@randMinCut-fixedIter	minCutVal=  7  graph: Nodes= 11 Edges= 38 	elapsed AVG,DEV_STD= (0.009330784666720623, 0.00019845803735409986) 	 randGraphIndex:  7 	iterations:  60 	delta between founded sol and Opt one:  1
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5, 4, 1, 9, 3], 1: [9, 5, 10, 3, 8, 7, 0], 2: [0, 6, 9, 8, 5, 3, 7, 4], 3: [5, 7, 1, 2, 6, 8, 0], 4: [6, 8, 10, 7, 0, 9, 2, 5], 5: [1, 3, 9, 6, 0, 2, 4], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2, 9], 8: [4, 10, 9, 1, 2, 7, 3], 9: [1, 8, 5, 2, 6, 10, 4, 0, 7], 10: [8, 0, 1, 6, 9, 7, 4]}
iteration : 8 Graph	Undirected	{0: [7, 2, 10, 5, 4, 1, 9, 3], 1: [9, 5, 10, 3, 8, 7, 0], 2: [0, 6, 9, 8, 5, 3, 7, 4], 3: [5, 7, 1, 2, 6, 8, 0], 4: [6, 8, 10, 7, 0, 9, 2, 5], 5: [1, 3, 9, 6, 0, 2, 4], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2, 9], 8: [4, 10, 9, 1, 2, 7, 3], 9: [1, 8, 5, 2, 6, 10, 4, 0, 7], 10: [8, 0, 1, 6, 9, 7, 4]}
@stoer_wagner_minCut	minCutval=  7  graph: Nodes= 11 Edges= 42 	elapsed= 0.0007030030001260457 	 randGraphIndex:  8
@minCutLPIterative	minCutVal=  7  graph: Nodes= 11 Edges= 42 	elapsed= 0.19666783599950577 	 randGraphIndex:  8
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 42 	elapsed AVG,DEV_STD= (0.003972232666455966, 0.0032854665526015334) 	 randGraphIndex:  8 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  7  graph: Nodes= 11 Edges= 42 	elapsed AVG,DEV_STD= (0.009444638333358549, 5.690409206115509e-05) 	 randGraphIndex:  8 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5, 4, 1, 9, 3], 1: [9, 5, 10, 3, 8, 7, 0, 4], 2: [0, 6, 9, 8, 5, 3, 7, 4], 3: [5, 7, 1, 2, 6, 8, 0], 4: [6, 8, 10, 7, 0, 9, 2, 5, 1], 5: [1, 3, 9, 6, 0, 2, 4], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2, 9], 8: [4, 10, 9, 1, 2, 7, 3], 9: [1, 8, 5, 2, 6, 10, 4, 0, 7], 10: [8, 0, 1, 6, 9, 7, 4]}
iteration : 9 Graph	Undirected	{0: [7, 2, 10, 5, 4, 1, 9, 3], 1: [9, 5, 10, 3, 8, 7, 0, 4], 2: [0, 6, 9, 8, 5, 3, 7, 4], 3: [5, 7, 1, 2, 6, 8, 0], 4: [6, 8, 10, 7, 0, 9, 2, 5, 1], 5: [1, 3, 9, 6, 0, 2, 4], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2, 9], 8: [4, 10, 9, 1, 2, 7, 3], 9: [1, 8, 5, 2, 6, 10, 4, 0, 7], 10: [8, 0, 1, 6, 9, 7, 4]}
@stoer_wagner_minCut	minCutval=  7  graph: Nodes= 11 Edges= 43 	elapsed= 0.0006731229996148613 	 randGraphIndex:  9
@minCutLPIterative	minCutVal=  7  graph: Nodes= 11 Edges= 43 	elapsed= 0.2002596550000817 	 randGraphIndex:  9
@randMinCut-untilOpt	graph: Nodes= 11 Edges= 43 	elapsed AVG,DEV_STD= (0.004499475999485488, 0.0035981749529573575) 	 randGraphIndex:  9 	iteration to reach Optimal:  35
@randMinCut-fixedIter	minCutVal=  7  graph: Nodes= 11 Edges= 43 	elapsed AVG,DEV_STD= (0.009453868000188473, 5.3415606220244064e-05) 	 randGraphIndex:  9 	iterations:  60 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [7, 2, 10, 5, 4, 1, 9, 3], 1: [9, 5, 10, 3, 8, 7, 0, 4, 2], 2: [0, 6, 9, 8, 5, 3, 7, 4, 1], 3: [5, 7, 1, 2, 6, 8, 0], 4: [6, 8, 10, 7, 0, 9, 2, 5, 1], 5: [1, 3, 9, 6, 0, 2, 4, 7, 8], 6: [2, 4, 10, 9, 5, 7, 3], 7: [3, 0, 10, 6, 1, 8, 4, 2, 9, 5], 8: [4, 10, 9, 1, 2, 7, 3, 5], 9: [1, 8, 5, 2, 6, 10, 4, 0, 7], 10: [8, 0, 1, 6, 9, 7, 4]}
exploring min cut solver algoritm with a graph of 18 with variable num of edges


iteration : 0 Graph	Undirected	{0: [12, 6], 1: [4, 12], 2: [13, 7], 3: [8, 5], 4: [9, 1], 5: [3, 10], 6: [0, 17], 7: [2, 15], 8: [11, 3], 9: [10, 4], 10: [5, 9], 11: [14, 8], 12: [1, 0], 13: [16, 2], 14: [15, 11], 15: [7, 14], 16: [13], 17: [6]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 18 Edges= 17 	elapsed= 0.0006473559997175471 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 18 Edges= 17 	elapsed= 0.3094334630004596 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 17 	elapsed AVG,DEV_STD= (0.0016896929998135117, 0.0013971781124967164) 	 randGraphIndex:  0 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 18 Edges= 17 	elapsed AVG,DEV_STD= (0.03139190533299067, 1.3124602218393544e-05) 	 randGraphIndex:  0 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6], 1: [4, 12, 6], 2: [13, 7], 3: [8, 5, 10, 9], 4: [9, 1], 5: [3, 10], 6: [0, 17, 1], 7: [2, 15], 8: [11, 3], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8], 12: [1, 0], 13: [16, 2], 14: [15, 11], 15: [7, 14, 9], 16: [13], 17: [6]}
iteration : 1 Graph	Undirected	{0: [12, 6], 1: [4, 12, 6], 2: [13, 7], 3: [8, 5, 10, 9], 4: [9, 1], 5: [3, 10], 6: [0, 17, 1], 7: [2, 15], 8: [11, 3], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8], 12: [1, 0], 13: [16, 2], 14: [15, 11], 15: [7, 14, 9], 16: [13], 17: [6]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 18 Edges= 21 	elapsed= 0.0007817280002200278 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 18 Edges= 21 	elapsed= 0.35448535599971365 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 21 	elapsed AVG,DEV_STD= (0.001199806666894195, 0.0004710282835168403) 	 randGraphIndex:  1 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 18 Edges= 21 	elapsed AVG,DEV_STD= (0.033255719666764584, 0.00018822660310809783) 	 randGraphIndex:  1 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6], 1: [4, 12, 6], 2: [13, 7], 3: [8, 5, 10, 9], 4: [9, 1], 5: [3, 10], 6: [0, 17, 1], 7: [2, 15, 14, 17], 8: [11, 3, 17], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8], 12: [1, 0, 16], 13: [16, 2], 14: [15, 11, 7], 15: [7, 14, 9], 16: [13, 12], 17: [6, 8, 7]}
iteration : 2 Graph	Undirected	{0: [12, 6], 1: [4, 12, 6], 2: [13, 7], 3: [8, 5, 10, 9], 4: [9, 1], 5: [3, 10], 6: [0, 17, 1], 7: [2, 15, 14, 17], 8: [11, 3, 17], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8], 12: [1, 0, 16], 13: [16, 2], 14: [15, 11, 7], 15: [7, 14, 9], 16: [13, 12], 17: [6, 8, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 18 Edges= 25 	elapsed= 0.0009321439993073 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  2  graph: Nodes= 18 Edges= 25 	elapsed= 0.3995097300003181 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 25 	elapsed AVG,DEV_STD= (0.002676104000177778, 0.002734957796030676) 	 randGraphIndex:  2 	iteration to reach Optimal:  24
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 18 Edges= 25 	elapsed AVG,DEV_STD= (0.0349007149998215, 0.00012504505560351111) 	 randGraphIndex:  2 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1], 3: [8, 5, 10, 9], 4: [9, 1, 11], 5: [3, 10], 6: [0, 17, 1], 7: [2, 15, 14, 17], 8: [11, 3, 17, 12], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8, 4], 12: [1, 0, 16, 8], 13: [16, 2, 1], 14: [15, 11, 7], 15: [7, 14, 9], 16: [13, 12], 17: [6, 8, 7]}
iteration : 3 Graph	Undirected	{0: [12, 6], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1], 3: [8, 5, 10, 9], 4: [9, 1, 11], 5: [3, 10], 6: [0, 17, 1], 7: [2, 15, 14, 17], 8: [11, 3, 17, 12], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8, 4], 12: [1, 0, 16, 8], 13: [16, 2, 1], 14: [15, 11, 7], 15: [7, 14, 9], 16: [13, 12], 17: [6, 8, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 18 Edges= 29 	elapsed= 0.0010775619994092267 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  2  graph: Nodes= 18 Edges= 29 	elapsed= 0.4532947690004221 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 29 	elapsed AVG,DEV_STD= (0.0013917979995312635, 0.0003343163014930936) 	 randGraphIndex:  3 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 18 Edges= 29 	elapsed AVG,DEV_STD= (0.03714276566643093, 0.0001388001283681412) 	 randGraphIndex:  3 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16], 3: [8, 5, 10, 9, 6], 4: [9, 1, 11, 14], 5: [3, 10], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17], 8: [11, 3, 17, 12], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8, 4], 12: [1, 0, 16, 8], 13: [16, 2, 1], 14: [15, 11, 7, 4], 15: [7, 14, 9], 16: [13, 12, 2], 17: [6, 8, 7]}
iteration : 4 Graph	Undirected	{0: [12, 6], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16], 3: [8, 5, 10, 9, 6], 4: [9, 1, 11, 14], 5: [3, 10], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17], 8: [11, 3, 17, 12], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8, 4], 12: [1, 0, 16, 8], 13: [16, 2, 1], 14: [15, 11, 7, 4], 15: [7, 14, 9], 16: [13, 12, 2], 17: [6, 8, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 18 Edges= 33 	elapsed= 0.0009698559997559641 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  2  graph: Nodes= 18 Edges= 33 	elapsed= 0.48541385599946807 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 33 	elapsed AVG,DEV_STD= (0.0044392326666032505, 0.0034672815691464765) 	 randGraphIndex:  4 	iteration to reach Optimal:  9
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 18 Edges= 33 	elapsed AVG,DEV_STD= (0.0381086483330364, 0.0002652412104733183) 	 randGraphIndex:  4 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6, 16], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17], 8: [11, 3, 17, 12, 5], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8, 4], 12: [1, 0, 16, 8], 13: [16, 2, 1], 14: [15, 11, 7, 4], 15: [7, 14, 9], 16: [13, 12, 2, 4, 0], 17: [6, 8, 7]}
iteration : 5 Graph	Undirected	{0: [12, 6, 16], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17], 8: [11, 3, 17, 12, 5], 9: [10, 4, 3, 15], 10: [5, 9, 3], 11: [14, 8, 4], 12: [1, 0, 16, 8], 13: [16, 2, 1], 14: [15, 11, 7, 4], 15: [7, 14, 9], 16: [13, 12, 2, 4, 0], 17: [6, 8, 7]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 18 Edges= 37 	elapsed= 0.0010586509997665416 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  3  graph: Nodes= 18 Edges= 37 	elapsed= 0.528908956000123 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 37 	elapsed AVG,DEV_STD= (0.0007818466665412416, 0.0005404265528192643) 	 randGraphIndex:  5 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 18 Edges= 37 	elapsed AVG,DEV_STD= (0.03924254033336183, 0.00025732569342709296) 	 randGraphIndex:  5 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17, 12], 8: [11, 3, 17, 12, 5], 9: [10, 4, 3, 15], 10: [5, 9, 3, 14], 11: [14, 8, 4], 12: [1, 0, 16, 8, 7], 13: [16, 2, 1], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9], 16: [13, 12, 2, 4, 0, 14], 17: [6, 8, 7]}
iteration : 6 Graph	Undirected	{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17, 12], 8: [11, 3, 17, 12, 5], 9: [10, 4, 3, 15], 10: [5, 9, 3, 14], 11: [14, 8, 4], 12: [1, 0, 16, 8, 7], 13: [16, 2, 1], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9], 16: [13, 12, 2, 4, 0, 14], 17: [6, 8, 7]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 18 Edges= 41 	elapsed= 0.001124591000007058 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  3  graph: Nodes= 18 Edges= 41 	elapsed= 0.6064717170002041 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 41 	elapsed AVG,DEV_STD= (0.0034628366665856447, 0.002763274086813245) 	 randGraphIndex:  6 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 18 Edges= 41 	elapsed AVG,DEV_STD= (0.04211092199996832, 0.0009815941459787264) 	 randGraphIndex:  6 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17, 12], 8: [11, 3, 17, 12, 5], 9: [10, 4, 3, 15], 10: [5, 9, 3, 14], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7], 13: [16, 2, 1], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3], 16: [13, 12, 2, 4, 0, 14, 17], 17: [6, 8, 7, 11, 16]}
iteration : 7 Graph	Undirected	{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15], 6: [0, 17, 1, 3, 2], 7: [2, 15, 14, 17, 12], 8: [11, 3, 17, 12, 5], 9: [10, 4, 3, 15], 10: [5, 9, 3, 14], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7], 13: [16, 2, 1], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3], 16: [13, 12, 2, 4, 0, 14, 17], 17: [6, 8, 7, 11, 16]}
@stoer_wagner_minCut	minCutval=  3  graph: Nodes= 18 Edges= 45 	elapsed= 0.0011647749997791834 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  3  graph: Nodes= 18 Edges= 45 	elapsed= 0.6159222020005473 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 45 	elapsed AVG,DEV_STD= (0.004512570333645272, 0.0037022971019902216) 	 randGraphIndex:  7 	iteration to reach Optimal:  27
@randMinCut-fixedIter	minCutVal=  3  graph: Nodes= 18 Edges= 45 	elapsed AVG,DEV_STD= (0.042069026000111386, 0.00034132108595208416) 	 randGraphIndex:  7 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15, 13], 6: [0, 17, 1, 3, 2, 12], 7: [2, 15, 14, 17, 12, 8], 8: [11, 3, 17, 12, 5, 7], 9: [10, 4, 3, 15], 10: [5, 9, 3, 14, 15], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7, 6], 13: [16, 2, 1, 5], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3, 10], 16: [13, 12, 2, 4, 0, 14, 17], 17: [6, 8, 7, 11, 16]}
iteration : 8 Graph	Undirected	{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15, 13], 6: [0, 17, 1, 3, 2, 12], 7: [2, 15, 14, 17, 12, 8], 8: [11, 3, 17, 12, 5, 7], 9: [10, 4, 3, 15], 10: [5, 9, 3, 14, 15], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7, 6], 13: [16, 2, 1, 5], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3, 10], 16: [13, 12, 2, 4, 0, 14, 17], 17: [6, 8, 7, 11, 16]}
@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 18 Edges= 49 	elapsed= 0.0011854809999931604 	 randGraphIndex:  8
@minCutLPIterative	minCutVal=  4  graph: Nodes= 18 Edges= 49 	elapsed= 0.655389120000109 	 randGraphIndex:  8
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 49 	elapsed AVG,DEV_STD= (0.0036983860002995548, 0.003285602824477203) 	 randGraphIndex:  8 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 18 Edges= 49 	elapsed AVG,DEV_STD= (0.04563343533330529, 0.0033136544143914275) 	 randGraphIndex:  8 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15, 13], 6: [0, 17, 1, 3, 2, 12], 7: [2, 15, 14, 17, 12, 8], 8: [11, 3, 17, 12, 5, 7], 9: [10, 4, 3, 15, 16], 10: [5, 9, 3, 14, 15], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7, 6, 13], 13: [16, 2, 1, 5, 12, 15], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3, 10, 16, 13], 16: [13, 12, 2, 4, 0, 14, 17, 9, 15], 17: [6, 8, 7, 11, 16]}
iteration : 9 Graph	Undirected	{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15, 13], 6: [0, 17, 1, 3, 2, 12], 7: [2, 15, 14, 17, 12, 8], 8: [11, 3, 17, 12, 5, 7], 9: [10, 4, 3, 15, 16], 10: [5, 9, 3, 14, 15], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7, 6, 13], 13: [16, 2, 1, 5, 12, 15], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3, 10, 16, 13], 16: [13, 12, 2, 4, 0, 14, 17, 9, 15], 17: [6, 8, 7, 11, 16]}
@stoer_wagner_minCut	minCutval=  4  graph: Nodes= 18 Edges= 53 	elapsed= 0.001319476000389841 	 randGraphIndex:  9
@minCutLPIterative	minCutVal=  4  graph: Nodes= 18 Edges= 53 	elapsed= 0.7011818920000223 	 randGraphIndex:  9
@randMinCut-untilOpt	graph: Nodes= 18 Edges= 53 	elapsed AVG,DEV_STD= (0.0073006473330679, 0.009223248235882126) 	 randGraphIndex:  9 	iteration to reach Optimal:  53
@randMinCut-fixedIter	minCutVal=  4  graph: Nodes= 18 Edges= 53 	elapsed AVG,DEV_STD= (0.04373317033332569, 0.00011179126028938988) 	 randGraphIndex:  9 	iterations:  162 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [12, 6, 16, 5], 1: [4, 12, 6, 2, 13, 15], 2: [13, 7, 1, 6, 16, 3], 3: [8, 5, 10, 9, 6, 2, 15], 4: [9, 1, 11, 14, 16], 5: [3, 10, 8, 0, 15, 13, 9], 6: [0, 17, 1, 3, 2, 12, 15, 16], 7: [2, 15, 14, 17, 12, 8], 8: [11, 3, 17, 12, 5, 7], 9: [10, 4, 3, 15, 16, 5], 10: [5, 9, 3, 14, 15], 11: [14, 8, 4, 17], 12: [1, 0, 16, 8, 7, 6, 13], 13: [16, 2, 1, 5, 12, 15], 14: [15, 11, 7, 4, 16, 10], 15: [7, 14, 9, 5, 3, 10, 16, 13, 6, 1], 16: [13, 12, 2, 4, 0, 14, 17, 9, 15, 6], 17: [6, 8, 7, 11, 16]}
exploring min cut solver algoritm with a graph of 25 with variable num of edges


iteration : 0 Graph	Undirected	{0: [9, 3], 1: [4, 15], 2: [20, 21], 3: [0, 4], 4: [3, 1], 5: [6, 19], 6: [12, 5], 7: [17, 14], 8: [15, 13], 9: [10, 0], 10: [11, 9], 11: [18, 10], 12: [21, 6], 13: [8, 24], 14: [7, 22], 15: [1, 8], 16: [23, 17], 17: [16, 7], 18: [19, 11], 19: [5, 18], 20: [22, 2], 21: [2, 12], 22: [14, 20], 23: [16], 24: [13]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 25 Edges= 24 	elapsed= 0.0012245150001035654 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 25 Edges= 24 	elapsed= 0.7984246309997616 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 24 	elapsed AVG,DEV_STD= (0.0029267179997987114, 0.0012302628491936808) 	 randGraphIndex:  0 	iteration to reach Optimal:  13
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 25 Edges= 24 	elapsed AVG,DEV_STD= (0.09217903833359742, 0.00040128344225149953) 	 randGraphIndex:  0 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1], 4: [3, 1, 13], 5: [6, 19], 6: [12, 5], 7: [17, 14], 8: [15, 13], 9: [10, 0], 10: [11, 9], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15], 14: [7, 22], 15: [1, 8, 13], 16: [23, 17], 17: [16, 7, 18], 18: [19, 11, 17], 19: [5, 18], 20: [22, 2], 21: [2, 12], 22: [14, 20], 23: [16], 24: [13]}
iteration : 1 Graph	Undirected	{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1], 4: [3, 1, 13], 5: [6, 19], 6: [12, 5], 7: [17, 14], 8: [15, 13], 9: [10, 0], 10: [11, 9], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15], 14: [7, 22], 15: [1, 8, 13], 16: [23, 17], 17: [16, 7, 18], 18: [19, 11, 17], 19: [5, 18], 20: [22, 2], 21: [2, 12], 22: [14, 20], 23: [16], 24: [13]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 25 Edges= 28 	elapsed= 0.0012970509997103363 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 25 Edges= 28 	elapsed= 0.9230014729992035 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 28 	elapsed AVG,DEV_STD= (0.0016257443330687238, 0.0009627794047492491) 	 randGraphIndex:  1 	iteration to reach Optimal:  8
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 25 Edges= 28 	elapsed AVG,DEV_STD= (0.098886516000069, 0.00017987434167311187) 	 randGraphIndex:  1 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8], 4: [3, 1, 13], 5: [6, 19, 10], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3], 9: [10, 0], 10: [11, 9, 22, 5], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15], 14: [7, 22], 15: [1, 8, 13], 16: [23, 17], 17: [16, 7, 18], 18: [19, 11, 17], 19: [5, 18], 20: [22, 2], 21: [2, 12], 22: [14, 20, 10], 23: [16], 24: [13, 7]}
iteration : 2 Graph	Undirected	{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8], 4: [3, 1, 13], 5: [6, 19, 10], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3], 9: [10, 0], 10: [11, 9, 22, 5], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15], 14: [7, 22], 15: [1, 8, 13], 16: [23, 17], 17: [16, 7, 18], 18: [19, 11, 17], 19: [5, 18], 20: [22, 2], 21: [2, 12], 22: [14, 20, 10], 23: [16], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 25 Edges= 32 	elapsed= 0.001411115000337304 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 25 Edges= 32 	elapsed= 0.9801054680001471 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 32 	elapsed AVG,DEV_STD= (0.0031312273331423057, 0.0038309808360775417) 	 randGraphIndex:  2 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 25 Edges= 32 	elapsed AVG,DEV_STD= (0.10129875766657885, 6.049652111289723e-05) 	 randGraphIndex:  2 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8], 4: [3, 1, 13, 18], 5: [6, 19, 10], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3], 9: [10, 0], 10: [11, 9, 22, 5], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15, 20], 14: [7, 22], 15: [1, 8, 13, 23], 16: [23, 17], 17: [16, 7, 18, 21], 18: [19, 11, 17, 4], 19: [5, 18], 20: [22, 2, 13], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15], 24: [13, 7]}
iteration : 3 Graph	Undirected	{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8], 4: [3, 1, 13, 18], 5: [6, 19, 10], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3], 9: [10, 0], 10: [11, 9, 22, 5], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15, 20], 14: [7, 22], 15: [1, 8, 13, 23], 16: [23, 17], 17: [16, 7, 18, 21], 18: [19, 11, 17, 4], 19: [5, 18], 20: [22, 2, 13], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 36 	elapsed= 0.0015070350000314647 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 36 	elapsed= 1.0648728950000077 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 36 	elapsed AVG,DEV_STD= (0.0019223003334142656, 0.0023249026102360373) 	 randGraphIndex:  3 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 36 	elapsed AVG,DEV_STD= (0.10595169099997293, 0.00018153648762406232) 	 randGraphIndex:  3 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3, 4, 17], 9: [10, 0], 10: [11, 9, 22, 5], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3], 15: [1, 8, 13, 23, 16], 16: [23, 17, 15], 17: [16, 7, 18, 21, 8], 18: [19, 11, 17, 4], 19: [5, 18], 20: [22, 2, 13], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15], 24: [13, 7]}
iteration : 4 Graph	Undirected	{0: [9, 3], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3, 4, 17], 9: [10, 0], 10: [11, 9, 22, 5], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3], 15: [1, 8, 13, 23, 16], 16: [23, 17, 15], 17: [16, 7, 18, 21, 8], 18: [19, 11, 17, 4], 19: [5, 18], 20: [22, 2, 13], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 40 	elapsed= 0.0018238060001749545 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 40 	elapsed= 1.220660730000418 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 40 	elapsed AVG,DEV_STD= (0.0014110106667430955, 0.0007304911809347051) 	 randGraphIndex:  4 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 40 	elapsed AVG,DEV_STD= (0.11049831000006331, 0.0004482959770774334) 	 randGraphIndex:  4 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3, 23], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3, 4, 17], 9: [10, 0, 19], 10: [11, 9, 22, 5, 19], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16], 16: [23, 17, 15], 17: [16, 7, 18, 21, 8], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
iteration : 5 Graph	Undirected	{0: [9, 3, 23], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14], 6: [12, 5], 7: [17, 14, 24], 8: [15, 13, 3, 4, 17], 9: [10, 0, 19], 10: [11, 9, 22, 5, 19], 11: [18, 10], 12: [21, 6], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16], 16: [23, 17, 15], 17: [16, 7, 18, 21, 8], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 44 	elapsed= 0.0017318099999101833 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 44 	elapsed= 1.2947352689998297 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 44 	elapsed AVG,DEV_STD= (0.003315309666807783, 0.0026393987509251136) 	 randGraphIndex:  5 	iteration to reach Optimal:  15
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 44 	elapsed AVG,DEV_STD= (0.11231788400042812, 0.000677394622062663) 	 randGraphIndex:  5 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3, 23, 20], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14], 6: [12, 5, 16], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17], 9: [10, 0, 19, 12], 10: [11, 9, 22, 5, 19], 11: [18, 10], 12: [21, 6, 9], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
iteration : 6 Graph	Undirected	{0: [9, 3, 23, 20], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14], 6: [12, 5, 16], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17], 9: [10, 0, 19, 12], 10: [11, 9, 22, 5, 19], 11: [18, 10], 12: [21, 6, 9], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 48 	elapsed= 0.0018533180000304128 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 48 	elapsed= 1.3282890860000407 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 48 	elapsed AVG,DEV_STD= (0.004043937333335634, 0.003458379456268418) 	 randGraphIndex:  6 	iteration to reach Optimal:  7
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 48 	elapsed AVG,DEV_STD= (0.11467288633321004, 0.00021537797885739414) 	 randGraphIndex:  6 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3, 23, 20, 11], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9], 6: [12, 5, 16, 9], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17], 9: [10, 0, 19, 12, 5, 6], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0], 12: [21, 6, 9], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
iteration : 7 Graph	Undirected	{0: [9, 3, 23, 20, 11], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9], 6: [12, 5, 16, 9], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17], 9: [10, 0, 19, 12, 5, 6], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0], 12: [21, 6, 9], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 52 	elapsed= 0.0018300310002814513 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 52 	elapsed= 1.4078233690006527 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 52 	elapsed AVG,DEV_STD= (0.0046638023335011285, 0.002680448325268882) 	 randGraphIndex:  7 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 52 	elapsed AVG,DEV_STD= (0.11709933733375995, 8.593047115107093e-05) 	 randGraphIndex:  7 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3, 23, 20, 11], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9, 8, 12], 6: [12, 5, 16, 9, 8], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17, 5, 6], 9: [10, 0, 19, 12, 5, 6], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0, 12], 12: [21, 6, 9, 11, 5], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
iteration : 8 Graph	Undirected	{0: [9, 3, 23, 20, 11], 1: [4, 15, 3], 2: [20, 21], 3: [0, 4, 1, 8, 14], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9, 8, 12], 6: [12, 5, 16, 9, 8], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17, 5, 6], 9: [10, 0, 19, 12, 5, 6], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0, 12], 12: [21, 6, 9, 11, 5], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0], 21: [2, 12, 17], 22: [14, 20, 10], 23: [16, 15, 0], 24: [13, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 56 	elapsed= 0.002012427999943611 	 randGraphIndex:  8
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 56 	elapsed= 1.5648499690005337 	 randGraphIndex:  8
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 56 	elapsed AVG,DEV_STD= (0.005216444999859959, 0.003076488731020323) 	 randGraphIndex:  8 	iteration to reach Optimal:  7
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 56 	elapsed AVG,DEV_STD= (0.12077176200000395, 0.00018799831317215987) 	 randGraphIndex:  8 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3, 23, 20, 11], 1: [4, 15, 3, 14], 2: [20, 21], 3: [0, 4, 1, 8, 14, 21], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9, 8, 12], 6: [12, 5, 16, 9, 8], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17, 5, 6], 9: [10, 0, 19, 12, 5, 6], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0, 12], 12: [21, 6, 9, 11, 5], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5, 1], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0, 23], 21: [2, 12, 17, 24, 3], 22: [14, 20, 10], 23: [16, 15, 0, 20], 24: [13, 7, 21]}
iteration : 9 Graph	Undirected	{0: [9, 3, 23, 20, 11], 1: [4, 15, 3, 14], 2: [20, 21], 3: [0, 4, 1, 8, 14, 21], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9, 8, 12], 6: [12, 5, 16, 9, 8], 7: [17, 14, 24, 16], 8: [15, 13, 3, 4, 17, 5, 6], 9: [10, 0, 19, 12, 5, 6], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0, 12], 12: [21, 6, 9, 11, 5], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5, 1], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0, 23], 21: [2, 12, 17, 24, 3], 22: [14, 20, 10], 23: [16, 15, 0, 20], 24: [13, 7, 21]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 25 Edges= 60 	elapsed= 0.0020957890001227497 	 randGraphIndex:  9
@minCutLPIterative	minCutVal=  2  graph: Nodes= 25 Edges= 60 	elapsed= 1.6096903790003125 	 randGraphIndex:  9
@randMinCut-untilOpt	graph: Nodes= 25 Edges= 60 	elapsed AVG,DEV_STD= (0.004438744666610243, 0.003933745152491445) 	 randGraphIndex:  9 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 25 Edges= 60 	elapsed AVG,DEV_STD= (0.12379487033316157, 0.0006185288820187936) 	 randGraphIndex:  9 	iterations:  312 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 3, 23, 20, 11], 1: [4, 15, 3, 14, 17, 2], 2: [20, 21, 12, 1], 3: [0, 4, 1, 8, 14, 21], 4: [3, 1, 13, 18, 8], 5: [6, 19, 10, 14, 9, 8, 12], 6: [12, 5, 16, 9, 8], 7: [17, 14, 24, 16, 9], 8: [15, 13, 3, 4, 17, 5, 6], 9: [10, 0, 19, 12, 5, 6, 7], 10: [11, 9, 22, 5, 19], 11: [18, 10, 0, 12], 12: [21, 6, 9, 11, 5, 2], 13: [8, 24, 4, 15, 20], 14: [7, 22, 3, 5, 1], 15: [1, 8, 13, 23, 16, 17], 16: [23, 17, 15, 6, 7], 17: [16, 7, 18, 21, 8, 15, 1], 18: [19, 11, 17, 4], 19: [5, 18, 9, 10], 20: [22, 2, 13, 0, 23], 21: [2, 12, 17, 24, 3], 22: [14, 20, 10], 23: [16, 15, 0, 20], 24: [13, 7, 21]}
exploring min cut solver algoritm with a graph of 32 with variable num of edges


iteration : 0 Graph	Undirected	{0: [30, 7], 1: [5, 27], 2: [19, 20], 3: [22, 13], 4: [25, 12], 5: [15, 1], 6: [14, 19], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8], 11: [18, 21], 12: [4, 31], 13: [3, 23], 14: [26, 6], 15: [16, 5], 16: [24, 15], 17: [9, 18], 18: [17, 11], 19: [6, 2], 20: [2, 10], 21: [11, 26], 22: [27, 3], 23: [13, 9], 24: [28, 16], 25: [29, 4], 26: [21, 14], 27: [1, 22], 28: [7, 24], 29: [8, 25], 30: [0], 31: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 31 	elapsed= 0.0016240779996223864 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 31 	elapsed= 1.6959475969997584 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 31 	elapsed AVG,DEV_STD= (0.0031353640000209757, 0.002365888582994605) 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 31 	elapsed AVG,DEV_STD= (0.21240323700052008, 0.00023898730101568912) 	 randGraphIndex:  0 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3], 1: [5, 27, 14], 2: [19, 20], 3: [22, 13, 0], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8, 29], 11: [18, 21], 12: [4, 31], 13: [3, 23], 14: [26, 6, 1], 15: [16, 5], 16: [24, 15], 17: [9, 18], 18: [17, 11], 19: [6, 2], 20: [2, 10], 21: [11, 26], 22: [27, 3], 23: [13, 9], 24: [28, 16], 25: [29, 4], 26: [21, 14], 27: [1, 22], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12]}
iteration : 1 Graph	Undirected	{0: [30, 7, 3], 1: [5, 27, 14], 2: [19, 20], 3: [22, 13, 0], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8, 29], 11: [18, 21], 12: [4, 31], 13: [3, 23], 14: [26, 6, 1], 15: [16, 5], 16: [24, 15], 17: [9, 18], 18: [17, 11], 19: [6, 2], 20: [2, 10], 21: [11, 26], 22: [27, 3], 23: [13, 9], 24: [28, 16], 25: [29, 4], 26: [21, 14], 27: [1, 22], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 35 	elapsed= 0.001908941000692721 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 35 	elapsed= 1.8588015320001432 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 35 	elapsed AVG,DEV_STD= (0.0038419743329238067, 0.004997815645538351) 	 randGraphIndex:  1 	iteration to reach Optimal:  3
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 35 	elapsed AVG,DEV_STD= (0.2225323096666519, 0.0003047956848752701) 	 randGraphIndex:  1 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8, 29], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23], 14: [26, 6, 1], 15: [16, 5], 16: [24, 15], 17: [9, 18], 18: [17, 11], 19: [6, 2], 20: [2, 10], 21: [11, 26, 27], 22: [27, 3, 12], 23: [13, 9, 3, 2], 24: [28, 16], 25: [29, 4], 26: [21, 14], 27: [1, 22, 21], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12]}
iteration : 2 Graph	Undirected	{0: [30, 7, 3], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8, 29], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23], 14: [26, 6, 1], 15: [16, 5], 16: [24, 15], 17: [9, 18], 18: [17, 11], 19: [6, 2], 20: [2, 10], 21: [11, 26, 27], 22: [27, 3, 12], 23: [13, 9, 3, 2], 24: [28, 16], 25: [29, 4], 26: [21, 14], 27: [1, 22, 21], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 39 	elapsed= 0.0020346759993117303 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 39 	elapsed= 1.97802713999954 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 39 	elapsed AVG,DEV_STD= (0.0014987026664433263, 0.0009884781365635661) 	 randGraphIndex:  2 	iteration to reach Optimal:  5
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 39 	elapsed AVG,DEV_STD= (0.23069727333343812, 0.0006755761425239905) 	 randGraphIndex:  2 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8, 29, 27], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23], 14: [26, 6, 1], 15: [16, 5, 27], 16: [24, 15, 0], 17: [9, 18], 18: [17, 11], 19: [6, 2, 24], 20: [2, 10], 21: [11, 26, 27], 22: [27, 3, 12], 23: [13, 9, 3, 2], 24: [28, 16, 19], 25: [29, 4], 26: [21, 14], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12]}
iteration : 3 Graph	Undirected	{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17], 10: [20, 8, 29, 27], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23], 14: [26, 6, 1], 15: [16, 5, 27], 16: [24, 15, 0], 17: [9, 18], 18: [17, 11], 19: [6, 2, 24], 20: [2, 10], 21: [11, 26, 27], 22: [27, 3, 12], 23: [13, 9, 3, 2], 24: [28, 16, 19], 25: [29, 4], 26: [21, 14], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 43 	elapsed= 0.0022107080003479496 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 43 	elapsed= 2.089603288000035 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 43 	elapsed AVG,DEV_STD= (0.0051982646667359704, 0.00405950478699814) 	 randGraphIndex:  3 	iteration to reach Optimal:  7
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 43 	elapsed AVG,DEV_STD= (0.2380736816667195, 0.0005492104186287929) 	 randGraphIndex:  3 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17, 10], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1], 15: [16, 5, 27], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24], 20: [2, 10], 21: [11, 26, 27], 22: [27, 3, 12], 23: [13, 9, 3, 2, 17], 24: [28, 16, 19], 25: [29, 4], 26: [21, 14, 13], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12, 17]}
iteration : 4 Graph	Undirected	{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23], 4: [25, 12], 5: [15, 1], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17, 10], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1], 15: [16, 5, 27], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24], 20: [2, 10], 21: [11, 26, 27], 22: [27, 3, 12], 23: [13, 9, 3, 2, 17], 24: [28, 16, 19], 25: [29, 4], 26: [21, 14, 13], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6], 29: [8, 25, 10], 30: [0], 31: [12, 17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 47 	elapsed= 0.0023541860000477755 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 47 	elapsed= 2.3207806829996116 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 47 	elapsed AVG,DEV_STD= (0.008455734666919549, 0.006987652406296197) 	 randGraphIndex:  4 	iteration to reach Optimal:  28
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 47 	elapsed AVG,DEV_STD= (0.2482194026661091, 0.000656945300037231) 	 randGraphIndex:  4 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17, 10], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1], 15: [16, 5, 27], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24, 28], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17], 24: [28, 16, 19, 22], 25: [29, 4], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6, 19], 29: [8, 25, 10], 30: [0], 31: [12, 17]}
iteration : 5 Graph	Undirected	{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28], 7: [0, 28], 8: [10, 29], 9: [23, 17, 10], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1], 15: [16, 5, 27], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24, 28], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17], 24: [28, 16, 19, 22], 25: [29, 4], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6, 19], 29: [8, 25, 10], 30: [0], 31: [12, 17]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 51 	elapsed= 0.0024096920005831635 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 51 	elapsed= 2.407473222999215 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 51 	elapsed AVG,DEV_STD= (0.003521888333731719, 0.0016199990284762778) 	 randGraphIndex:  5 	iteration to reach Optimal:  8
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 51 	elapsed AVG,DEV_STD= (0.25211654133333167, 0.0028826997068724324) 	 randGraphIndex:  5 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31], 8: [10, 29, 6], 9: [23, 17, 10], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1], 15: [16, 5, 27, 7], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24, 28], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17], 24: [28, 16, 19, 22], 25: [29, 4], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6, 19], 29: [8, 25, 10, 3], 30: [0], 31: [12, 17, 7]}
iteration : 6 Graph	Undirected	{0: [30, 7, 3, 16], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31], 8: [10, 29, 6], 9: [23, 17, 10], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1], 15: [16, 5, 27, 7], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24, 28], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17], 24: [28, 16, 19, 22], 25: [29, 4], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15], 28: [7, 24, 6, 19], 29: [8, 25, 10, 3], 30: [0], 31: [12, 17, 7]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 32 Edges= 55 	elapsed= 0.0026429290001033223 	 randGraphIndex:  6
@minCutLPIterative	minCutVal=  1  graph: Nodes= 32 Edges= 55 	elapsed= 2.5961758390003524 	 randGraphIndex:  6
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 55 	elapsed AVG,DEV_STD= (0.004809119999966545, 0.004673327748836018) 	 randGraphIndex:  6 	iteration to reach Optimal:  17
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 32 Edges= 55 	elapsed AVG,DEV_STD= (0.2571016453333262, 0.000467485421849497) 	 randGraphIndex:  6 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16, 9], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31], 8: [10, 29, 6], 9: [23, 17, 10, 0], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1, 23, 15], 15: [16, 5, 27, 7, 14], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24, 28], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14], 24: [28, 16, 19, 22], 25: [29, 4], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19], 29: [8, 25, 10, 3], 30: [0, 27], 31: [12, 17, 7]}
iteration : 7 Graph	Undirected	{0: [30, 7, 3, 16, 9], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31], 8: [10, 29, 6], 9: [23, 17, 10, 0], 10: [20, 8, 29, 27, 9], 11: [18, 21], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1, 23, 15], 15: [16, 5, 27, 7, 14], 16: [24, 15, 0], 17: [9, 18, 31, 23], 18: [17, 11], 19: [6, 2, 24, 28], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14], 24: [28, 16, 19, 22], 25: [29, 4], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19], 29: [8, 25, 10, 3], 30: [0, 27], 31: [12, 17, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 32 Edges= 59 	elapsed= 0.0027507959994181874 	 randGraphIndex:  7
@minCutLPIterative	minCutVal=  2  graph: Nodes= 32 Edges= 59 	elapsed= 2.7897429969998484 	 randGraphIndex:  7
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 59 	elapsed AVG,DEV_STD= (0.0014115736667008605, 0.0003759780351959036) 	 randGraphIndex:  7 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 32 Edges= 59 	elapsed AVG,DEV_STD= (0.2636509693332603, 0.0009654344612955814) 	 randGraphIndex:  7 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16, 9], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31], 8: [10, 29, 6], 9: [23, 17, 10, 0], 10: [20, 8, 29, 27, 9], 11: [18, 21, 29], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1, 23, 15], 15: [16, 5, 27, 7, 14, 28], 16: [24, 15, 0], 17: [9, 18, 31, 23, 25], 18: [17, 11], 19: [6, 2, 24, 28, 23], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14, 19], 24: [28, 16, 19, 22], 25: [29, 4, 17], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19, 15], 29: [8, 25, 10, 3, 11], 30: [0, 27], 31: [12, 17, 7]}
iteration : 8 Graph	Undirected	{0: [30, 7, 3, 16, 9], 1: [5, 27, 14], 2: [19, 20, 23], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31], 8: [10, 29, 6], 9: [23, 17, 10, 0], 10: [20, 8, 29, 27, 9], 11: [18, 21, 29], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1, 23, 15], 15: [16, 5, 27, 7, 14, 28], 16: [24, 15, 0], 17: [9, 18, 31, 23, 25], 18: [17, 11], 19: [6, 2, 24, 28, 23], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14, 19], 24: [28, 16, 19, 22], 25: [29, 4, 17], 26: [21, 14, 13, 20], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19, 15], 29: [8, 25, 10, 3, 11], 30: [0, 27], 31: [12, 17, 7]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 32 Edges= 63 	elapsed= 0.002857050000784511 	 randGraphIndex:  8
@minCutLPIterative	minCutVal=  2  graph: Nodes= 32 Edges= 63 	elapsed= 2.890384031999929 	 randGraphIndex:  8
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 63 	elapsed AVG,DEV_STD= (0.004758129667000806, 0.00030692059928991204) 	 randGraphIndex:  8 	iteration to reach Optimal:  8
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 32 Edges= 63 	elapsed AVG,DEV_STD= (0.27076756433386134, 0.0006901937534343597) 	 randGraphIndex:  8 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16, 9], 1: [5, 27, 14], 2: [19, 20, 23, 26], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31, 10], 8: [10, 29, 6], 9: [23, 17, 10, 0], 10: [20, 8, 29, 27, 9, 7], 11: [18, 21, 29], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1, 23, 15, 28], 15: [16, 5, 27, 7, 14, 28], 16: [24, 15, 0], 17: [9, 18, 31, 23, 25], 18: [17, 11], 19: [6, 2, 24, 28, 23], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14, 19], 24: [28, 16, 19, 22], 25: [29, 4, 17], 26: [21, 14, 13, 20, 2], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19, 15, 14], 29: [8, 25, 10, 3, 11], 30: [0, 27, 31], 31: [12, 17, 7, 30]}
iteration : 9 Graph	Undirected	{0: [30, 7, 3, 16, 9], 1: [5, 27, 14], 2: [19, 20, 23, 26], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31, 10], 8: [10, 29, 6], 9: [23, 17, 10, 0], 10: [20, 8, 29, 27, 9, 7], 11: [18, 21, 29], 12: [4, 31, 22], 13: [3, 23, 26], 14: [26, 6, 1, 23, 15, 28], 15: [16, 5, 27, 7, 14, 28], 16: [24, 15, 0], 17: [9, 18, 31, 23, 25], 18: [17, 11], 19: [6, 2, 24, 28, 23], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14, 19], 24: [28, 16, 19, 22], 25: [29, 4, 17], 26: [21, 14, 13, 20, 2], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19, 15, 14], 29: [8, 25, 10, 3, 11], 30: [0, 27, 31], 31: [12, 17, 7, 30]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 32 Edges= 67 	elapsed= 0.003028950000043551 	 randGraphIndex:  9
@minCutLPIterative	minCutVal=  2  graph: Nodes= 32 Edges= 67 	elapsed= 3.0798116290006874 	 randGraphIndex:  9
@randMinCut-untilOpt	graph: Nodes= 32 Edges= 67 	elapsed AVG,DEV_STD= (0.004633527333377667, 0.0052838565396152734) 	 randGraphIndex:  9 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 32 Edges= 67 	elapsed AVG,DEV_STD= (0.27606765233334346, 0.0005997939274715758) 	 randGraphIndex:  9 	iterations:  512 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [30, 7, 3, 16, 9, 23], 1: [5, 27, 14], 2: [19, 20, 23, 26], 3: [22, 13, 0, 23, 5, 29], 4: [25, 12], 5: [15, 1, 3], 6: [14, 19, 28, 8], 7: [0, 28, 15, 31, 10], 8: [10, 29, 6], 9: [23, 17, 10, 0, 13], 10: [20, 8, 29, 27, 9, 7, 26], 11: [18, 21, 29], 12: [4, 31, 22, 13], 13: [3, 23, 26, 9, 12], 14: [26, 6, 1, 23, 15, 28], 15: [16, 5, 27, 7, 14, 28], 16: [24, 15, 0], 17: [9, 18, 31, 23, 25], 18: [17, 11], 19: [6, 2, 24, 28, 23], 20: [2, 10, 26], 21: [11, 26, 27], 22: [27, 3, 12, 24], 23: [13, 9, 3, 2, 17, 14, 19, 0], 24: [28, 16, 19, 22], 25: [29, 4, 17], 26: [21, 14, 13, 20, 2, 10], 27: [1, 22, 21, 10, 15, 30], 28: [7, 24, 6, 19, 15, 14], 29: [8, 25, 10, 3, 11], 30: [0, 27, 31], 31: [12, 17, 7, 30]}
[(<graph_utils.Graph object at 0x7fc84b221828>, [(0, 1, 1)], [(2, 1, 1)]), (<graph_utils.Graph object at 0x7fc84b235438>, [(0, 1, 1), (0, 2, 1), (0, 3, 1)], [(3, 0, 1), (3, 1, 1), (3, 2, 1)]), (<graph_utils.Graph object at 0x7fc84b23d4a8>, [(0, 7, 1)], [(10, 8, 1)]), (<graph_utils.Graph object at 0x7fc84b23f278>, [(0, 2, 1), (8, 4, 1)], [(3, 5, 1), (3, 7, 1)]), (<graph_utils.Graph object at 0x7fc84b240080>, [(6, 4, 1), (8, 4, 1)], [(7, 3, 1), (7, 0, 1)]), (<graph_utils.Graph object at 0x7fc84b245fd0>, [(6, 4, 1), (8, 4, 1)], [(4, 6, 1), (4, 8, 1)]), (<graph_utils.Graph object at 0x7fc84b24ffd0>, [(6, 4, 1), (8, 4, 1)], [(4, 6, 1), (4, 8, 1)]), (<graph_utils.Graph object at 0x7fc84b1be9e8>, [(1, 3, 1), (5, 3, 1), (7, 3, 1)], [(3, 5, 1), (3, 7, 1), (3, 1, 1)]), (<graph_utils.Graph object at 0x7fc84b235208>, [(1, 3, 1), (2, 3, 1), (5, 3, 1), (7, 3, 1)], [(3, 5, 1), (3, 7, 1), (3, 1, 1), (3, 2, 1)]), (<graph_utils.Graph object at 0x7fc84b1c1f98>, [(0, 1, 1), (0, 2, 1), (0, 4, 1), (0, 5, 1), (0, 7, 1), (0, 10, 1)], [(5, 1, 1), (5, 3, 1), (5, 9, 1), (5, 6, 1), (5, 0, 1), (5, 2, 1)]), (<graph_utils.Graph object at 0x7fc84b1cf358>, [(0, 1, 1), (3, 1, 1), (5, 1, 1), (7, 1, 1), (8, 1, 1), (9, 1, 1), (10, 1, 1)], [(10, 8, 1), (10, 0, 1), (10, 1, 1), (10, 6, 1), (10, 9, 1), (10, 7, 1), (10, 4, 1)]), (<graph_utils.Graph object at 0x7fc84b1d2fd0>, [(0, 3, 1), (1, 3, 1), (2, 3, 1), (5, 3, 1), (6, 3, 1), (7, 3, 1), (8, 3, 1)], [(10, 8, 1), (10, 0, 1), (10, 1, 1), (10, 6, 1), (10, 9, 1), (10, 7, 1), (10, 4, 1)]), (<graph_utils.Graph object at 0x7fc84b1d2ef0>, [(0, 12, 1)], [(17, 6, 1)]), (<graph_utils.Graph object at 0x7fc84b1d12b0>, [(1, 4, 1)], [(17, 6, 1)]), (<graph_utils.Graph object at 0x7fc84b1d1278>, [(0, 6, 1), (0, 12, 1)], [(0, 12, 1), (0, 6, 1)]), (<graph_utils.Graph object at 0x7fc84b1c1d68>, [(0, 6, 1), (0, 12, 1)], [(0, 12, 1), (0, 6, 1)]), (<graph_utils.Graph object at 0x7fc84b1d16d8>, [(0, 6, 1), (0, 12, 1)], [(0, 12, 1), (0, 6, 1)]), (<graph_utils.Graph object at 0x7fc84b1d2a20>, [(0, 6, 1), (0, 12, 1), (0, 16, 1)], [(17, 6, 1), (17, 8, 1), (17, 7, 1)]), (<graph_utils.Graph object at 0x7fc84b1ca828>, [(4, 11, 1), (8, 11, 1), (14, 11, 1)], [(17, 6, 1), (17, 8, 1), (17, 7, 1)]), (<graph_utils.Graph object at 0x7fc84b1d2f28>, [(1, 13, 1), (2, 13, 1), (16, 13, 1)], [(13, 16, 1), (13, 2, 1), (13, 1, 1)]), (<graph_utils.Graph object at 0x7fc84b1d14e0>, [(0, 5, 1), (0, 6, 1), (0, 12, 1), (0, 16, 1)], [(11, 14, 1), (11, 8, 1), (11, 4, 1), (11, 17, 1)]), (<graph_utils.Graph object at 0x7fc84b1c1358>, [(0, 5, 1), (0, 6, 1), (0, 12, 1), (0, 16, 1)], [(0, 12, 1), (0, 6, 1), (0, 16, 1), (0, 5, 1)]), (<graph_utils.Graph object at 0x7fc84b1d13c8>, [(3, 4, 1)], [(23, 16, 1)]), (<graph_utils.Graph object at 0x7fc84b1d2b70>, [(0, 3, 1)], [(23, 16, 1)]), (<graph_utils.Graph object at 0x7fc84b1d2cc0>, [(17, 16, 1)], [(23, 16, 1)]), (<graph_utils.Graph object at 0x7fc84b1d19b0>, [(0, 3, 1), (9, 10, 1)], [(0, 9, 1), (0, 3, 1)]), (<graph_utils.Graph object at 0x7fc84b221a90>, [(0, 3, 1), (9, 10, 1)], [(12, 21, 1), (12, 6, 1)]), (<graph_utils.Graph object at 0x7fc84b1ca5c0>, [(20, 2, 1), (21, 2, 1)], [(24, 13, 1), (24, 7, 1)]), (<graph_utils.Graph object at 0x7fc84b1d1470>, [(20, 2, 1), (21, 2, 1)], [(24, 13, 1), (24, 7, 1)]), (<graph_utils.Graph object at 0x7fc84b1d1f60>, [(20, 2, 1), (21, 2, 1)], [(2, 20, 1), (2, 21, 1)]), (<graph_utils.Graph object at 0x7fc84b23d9e8>, [(20, 2, 1), (21, 2, 1)], [(2, 20, 1), (2, 21, 1)]), (<graph_utils.Graph object at 0x7fc84b23e358>, [(20, 2, 1), (21, 2, 1)], [(2, 20, 1), (2, 21, 1)]), (<graph_utils.Graph object at 0x7fc84b1e5358>, [(0, 7, 1)], [(31, 12, 1)]), (<graph_utils.Graph object at 0x7fc84b1e5e10>, [(19, 2, 1)], [(30, 0, 1)]), (<graph_utils.Graph object at 0x7fc84b1bc588>, [(0, 30, 1)], [(30, 0, 1)]), (<graph_utils.Graph object at 0x7fc84b1bc8d0>, [(0, 30, 1)], [(31, 12, 1)]), (<graph_utils.Graph object at 0x7fc84b1d5eb8>, [(0, 30, 1)], [(30, 0, 1)]), (<graph_utils.Graph object at 0x7fc84b1bc9b0>, [(0, 30, 1)], [(30, 0, 1)]), (<graph_utils.Graph object at 0x7fc84b24fc50>, [(0, 30, 1)], [(30, 0, 1)]), (<graph_utils.Graph object at 0x7fc84b23fa20>, [(12, 4, 1), (25, 4, 1)], [(25, 29, 1), (25, 4, 1)]), (<graph_utils.Graph object at 0x7fc84b24fb00>, [(12, 4, 1), (25, 4, 1)], [(18, 17, 1), (18, 11, 1)]), (<graph_utils.Graph object at 0x7fc84b23f7f0>, [(12, 4, 1), (25, 4, 1)], [(18, 17, 1), (18, 11, 1)])]
42
(<graph_utils.Graph object at 0x7fc84b245fd0>, [(6, 4, 1), (8, 4, 1)], [(4, 6, 1), (4, 8, 1)])
<function drawGraphMinCut at 0x7fc84b217f28>
<networkx.classes.graph.Graph object at 0x7fc84b235240>
