
LOGGING TEST WITH: log_startN_ 4 _rebuildsN_ 7 _edgeTickenning_ 10 _nodesStep_ 15
exploring min cut solver algoritm with a graph of 4 with variable num of edges


iteration : 0 Graphundirected	{0: [2, 1], 1: [0, 3], 2: [0], 3: [1]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 4 Edges= 6 	elapsed= 0.00016854800014698412 	 randGraphIndex:  0
Academic license - for non-commercial use only
@minCutLPIterative	minCutVal=  1  graph: Nodes= 4 Edges= 6 	elapsed= 0.026252608999129734 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 4 Edges= 6 	elapsed= 7.481000102416147e-05 	 randGraphIndex:  0 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 4 Edges= 6 	elapsed= 0.0003011030003108317 	 randGraphIndex:  0 	iterations:  8 	delta between founded sol and Opt one:  0
max num of edges reached for  4  graph
exploring min cut solver algoritm with a graph of 19 with variable num of edges


iteration : 0 Graphundirected	{0: [9, 13], 1: [16, 5], 2: [4, 15], 3: [15, 14], 4: [11, 2], 5: [1, 8], 6: [7, 11], 7: [10, 6], 8: [5, 9], 9: [8, 0], 10: [12, 7], 11: [6, 4], 12: [13, 10], 13: [0, 12], 14: [3, 18], 15: [2, 3], 16: [17, 1], 17: [16], 18: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 19 Edges= 36 	elapsed= 0.0009717630000523059 	 randGraphIndex:  0
@minCutLPIterative	minCutVal=  1  graph: Nodes= 19 Edges= 36 	elapsed= 0.36763507399882656 	 randGraphIndex:  0
@randMinCut-untilOpt	graph: Nodes= 19 Edges= 36 	elapsed= 0.00224213200090162 	 randGraphIndex:  0 	iteration to reach Optimal:  10
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 19 Edges= 36 	elapsed= 0.037716356999226264 	 randGraphIndex:  0 	iterations:  180 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 13], 1: [16, 5, 2, 11], 2: [4, 15, 16, 1], 3: [15, 14], 4: [11, 2], 5: [1, 8], 6: [7, 11, 8], 7: [10, 6], 8: [5, 9, 6], 9: [8, 0], 10: [12, 7], 11: [6, 4, 1], 12: [13, 10], 13: [0, 12], 14: [3, 18], 15: [2, 3], 16: [17, 1, 2], 17: [16], 18: [14]}
iteration : 1 Graphundirected	{0: [9, 13], 1: [16, 5, 2, 11], 2: [4, 15, 16, 1], 3: [15, 14], 4: [11, 2], 5: [1, 8], 6: [7, 11, 8], 7: [10, 6], 8: [5, 9, 6], 9: [8, 0], 10: [12, 7], 11: [6, 4, 1], 12: [13, 10], 13: [0, 12], 14: [3, 18], 15: [2, 3], 16: [17, 1, 2], 17: [16], 18: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 19 Edges= 44 	elapsed= 0.0008437380001851125 	 randGraphIndex:  1
@minCutLPIterative	minCutVal=  1  graph: Nodes= 19 Edges= 44 	elapsed= 0.4024987009997858 	 randGraphIndex:  1
@randMinCut-untilOpt	graph: Nodes= 19 Edges= 44 	elapsed= 0.000984415999482735 	 randGraphIndex:  1 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 19 Edges= 44 	elapsed= 0.0400609539992729 	 randGraphIndex:  1 	iterations:  180 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 13], 1: [16, 5, 2, 11], 2: [4, 15, 16, 1], 3: [15, 14], 4: [11, 2], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6], 9: [8, 0, 6], 10: [12, 7], 11: [6, 4, 1, 14, 5], 12: [13, 10], 13: [0, 12], 14: [3, 18, 11], 15: [2, 3, 6], 16: [17, 1, 2], 17: [16], 18: [14]}
iteration : 2 Graphundirected	{0: [9, 13], 1: [16, 5, 2, 11], 2: [4, 15, 16, 1], 3: [15, 14], 4: [11, 2], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6], 9: [8, 0, 6], 10: [12, 7], 11: [6, 4, 1, 14, 5], 12: [13, 10], 13: [0, 12], 14: [3, 18, 11], 15: [2, 3, 6], 16: [17, 1, 2], 17: [16], 18: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 19 Edges= 52 	elapsed= 0.0009260990009352099 	 randGraphIndex:  2
@minCutLPIterative	minCutVal=  1  graph: Nodes= 19 Edges= 52 	elapsed= 0.4516876960005902 	 randGraphIndex:  2
@randMinCut-untilOpt	graph: Nodes= 19 Edges= 52 	elapsed= 0.00028178700085845776 	 randGraphIndex:  2 	iteration to reach Optimal:  1
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 19 Edges= 52 	elapsed= 0.04269653200026369 	 randGraphIndex:  2 	iterations:  180 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 13], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6], 9: [8, 0, 6], 10: [12, 7], 11: [6, 4, 1, 14, 5], 12: [13, 10], 13: [0, 12, 17], 14: [3, 18, 11, 16], 15: [2, 3, 6], 16: [17, 1, 2, 14], 17: [16, 13], 18: [14]}
iteration : 3 Graphundirected	{0: [9, 13], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6], 9: [8, 0, 6], 10: [12, 7], 11: [6, 4, 1, 14, 5], 12: [13, 10], 13: [0, 12, 17], 14: [3, 18, 11, 16], 15: [2, 3, 6], 16: [17, 1, 2, 14], 17: [16, 13], 18: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 19 Edges= 60 	elapsed= 0.0010144740008399822 	 randGraphIndex:  3
@minCutLPIterative	minCutVal=  1  graph: Nodes= 19 Edges= 60 	elapsed= 0.4999331049984903 	 randGraphIndex:  3
@randMinCut-untilOpt	graph: Nodes= 19 Edges= 60 	elapsed= 0.0010510190004424658 	 randGraphIndex:  3 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 19 Edges= 60 	elapsed= 0.043700307000108296 	 randGraphIndex:  3 	iterations:  180 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 13], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3, 15, 16], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6, 12], 9: [8, 0, 6], 10: [12, 7], 11: [6, 4, 1, 14, 5], 12: [13, 10, 8], 13: [0, 12, 17], 14: [3, 18, 11, 16], 15: [2, 3, 6, 4, 17], 16: [17, 1, 2, 14, 4], 17: [16, 13, 15], 18: [14]}
iteration : 4 Graphundirected	{0: [9, 13], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3, 15, 16], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6, 12], 9: [8, 0, 6], 10: [12, 7], 11: [6, 4, 1, 14, 5], 12: [13, 10, 8], 13: [0, 12, 17], 14: [3, 18, 11, 16], 15: [2, 3, 6, 4, 17], 16: [17, 1, 2, 14, 4], 17: [16, 13, 15], 18: [14]}
@stoer_wagner_minCut	minCutval=  1  graph: Nodes= 19 Edges= 68 	elapsed= 0.0010688339989428641 	 randGraphIndex:  4
@minCutLPIterative	minCutVal=  1  graph: Nodes= 19 Edges= 68 	elapsed= 0.5461357690001023 	 randGraphIndex:  4
@randMinCut-untilOpt	graph: Nodes= 19 Edges= 68 	elapsed= 0.0011055439990741434 	 randGraphIndex:  4 	iteration to reach Optimal:  4
@randMinCut-fixedIter	minCutVal=  1  graph: Nodes= 19 Edges= 68 	elapsed= 0.04490261399951123 	 randGraphIndex:  4 	iterations:  180 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 13], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3, 15, 16, 8, 18], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6, 12, 10, 4], 9: [8, 0, 6], 10: [12, 7, 8], 11: [6, 4, 1, 14, 5], 12: [13, 10, 8, 17], 13: [0, 12, 17], 14: [3, 18, 11, 16], 15: [2, 3, 6, 4, 17], 16: [17, 1, 2, 14, 4], 17: [16, 13, 15, 12], 18: [14, 4]}
iteration : 5 Graphundirected	{0: [9, 13], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3, 15, 16, 8, 18], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6], 8: [5, 9, 6, 12, 10, 4], 9: [8, 0, 6], 10: [12, 7, 8], 11: [6, 4, 1, 14, 5], 12: [13, 10, 8, 17], 13: [0, 12, 17], 14: [3, 18, 11, 16], 15: [2, 3, 6, 4, 17], 16: [17, 1, 2, 14, 4], 17: [16, 13, 15, 12], 18: [14, 4]}
@stoer_wagner_minCut	minCutval=  2  graph: Nodes= 19 Edges= 76 	elapsed= 0.001145879999967292 	 randGraphIndex:  5
@minCutLPIterative	minCutVal=  2  graph: Nodes= 19 Edges= 76 	elapsed= 0.5936297019998165 	 randGraphIndex:  5
@randMinCut-untilOpt	graph: Nodes= 19 Edges= 76 	elapsed= 0.0006055320009181742 	 randGraphIndex:  5 	iteration to reach Optimal:  2
@randMinCut-fixedIter	minCutVal=  2  graph: Nodes= 19 Edges= 76 	elapsed= 0.04653416600012861 	 randGraphIndex:  5 	iterations:  180 	delta between founded sol and Opt one:  0
Added  0  nodes and  0  edges to the graph
{0: [9, 13, 16], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3, 15, 16, 8, 18], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6, 8], 8: [5, 9, 6, 12, 10, 4, 7], 9: [8, 0, 6], 10: [12, 7, 8, 13], 11: [6, 4, 1, 14, 5, 15], 12: [13, 10, 8, 17], 13: [0, 12, 17, 10], 14: [3, 18, 11, 16], 15: [2, 3, 6, 4, 17, 11], 16: [17, 1, 2, 14, 4, 0], 17: [16, 13, 15, 12], 18: [14, 4]}
iteration : 6 Graphundirected	{0: [9, 13, 16], 1: [16, 5, 2, 11, 3], 2: [4, 15, 16, 1], 3: [15, 14, 4, 1], 4: [11, 2, 3, 15, 16, 8, 18], 5: [1, 8, 11], 6: [7, 11, 8, 15, 9], 7: [10, 6, 8], 8: [5, 9, 6, 12, 10, 4, 7], 9: [8, 0, 6], 10: [12, 7, 8, 13], 11: [6, 4, 1, 14, 5, 15], 12: [13, 10, 8, 17], 13: [0, 12, 17, 10], 14: [3, 18, 11, 16], 15: [2, 3, 6, 4, 17, 11], 16: [17, 1, 2, 14, 4, 0], 17: [16, 13, 15, 12], 18: [14, 4]}